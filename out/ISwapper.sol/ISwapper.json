{"abi":[{"type":"function","name":"isExchangeAllowed","inputs":[{"name":"exchange","type":"address","internalType":"address"}],"outputs":[{"name":"isAllowed","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"swap","inputs":[{"name":"tokensIn","type":"address[]","internalType":"address[]"},{"name":"swapInfo","type":"tuple[]","internalType":"struct SwapInfo[]","components":[{"name":"swapTarget","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"address"},{"name":"swapCallData","type":"bytes","internalType":"bytes"}]},{"name":"tokensOut","type":"address[]","internalType":"address[]"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[{"name":"amountsOut","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"updateExchangeAllowlist","inputs":[{"name":"exchanges","type":"address[]","internalType":"address[]"},{"name":"allowed","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ExchangeAllowlistUpdated","inputs":[{"name":"exchange","type":"address","indexed":true,"internalType":"address"},{"name":"isAllowed","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"Swapped","inputs":[{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"tokensIn","type":"address[]","indexed":false,"internalType":"address[]"},{"name":"tokensOut","type":"address[]","indexed":false,"internalType":"address[]"},{"name":"amountsIn","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"amountsOut","type":"uint256[]","indexed":false,"internalType":"uint256[]"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"isExchangeAllowed(address)":"8d4435e4","swap(address[],(address,address,bytes)[],address[],address)":"67c15262","updateExchangeAllowlist(address[],bool[])":"51d307af"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exchange\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"ExchangeAllowlistUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokensIn\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokensOut\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exchange\",\"type\":\"address\"}],\"name\":\"isExchangeAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokensIn\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"swapTarget\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"swapCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapInfo[]\",\"name\":\"swapInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensOut\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"exchanges\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"allowed\",\"type\":\"bool[]\"}],\"name\":\"updateExchangeAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ExchangeAllowlistUpdated(address,bool)\":{\"params\":{\"exchange\":\"Exchange that was updated.\",\"isAllowed\":\"Whether the exchange is allowed to be used in a swap or not after the update.\"}}},\"kind\":\"dev\",\"methods\":{\"isExchangeAllowed(address)\":{\"params\":{\"exchange\":\"Exchange to check.\"},\"returns\":{\"isAllowed\":\"True if the exchange is allowed to be used in a swap, false otherwise.\"}},\"swap(address[],(address,address,bytes)[],address[],address)\":{\"params\":{\"receiver\":\"Receiver of unswapped tokens.\",\"swapInfo\":\"Information needed to perform the swap.\",\"tokensIn\":\"Addresses of tokens available for the swap.\",\"tokensOut\":\"Addresses of tokens to swap to.\"},\"returns\":{\"amountsOut\":\"Amounts of `tokensOut` sent from the swapper to the receiver.\"}},\"updateExchangeAllowlist(address[],bool[])\":{\"details\":\"Requirements:   - can only be called by user granted ROLE_SPOOL_ADMIN   - exchanges and allowed arrays need to be of same length\",\"params\":{\"allowed\":\"Whether an exchange is allowed to be used in a swap.\",\"exchanges\":\"Addresses of exchanges.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ExchangeAllowlistUpdated(address,bool)\":{\"notice\":\"Emitted when the exchange allowlist is updated.\"}},\"kind\":\"user\",\"methods\":{\"isExchangeAllowed(address)\":{\"notice\":\"Checks if an exchange is allowed to be used in a swap.\"},\"swap(address[],(address,address,bytes)[],address[],address)\":{\"notice\":\"Performs a swap of tokens with external contracts. - deposit tokens into the swapper contract - swapper will swap tokens based on swap info provided - swapper will return unswapped tokens to the receiver\"},\"updateExchangeAllowlist(address[],bool[])\":{\"notice\":\"Updates list of exchanges that can be used in a swap.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISwapper.sol\":\"ISwapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/ISwapper.sol\":{\"keccak256\":\"0x52bf0742ec1e3d68209f09622618f7f6b7adcc559c1e453dd3ee1c1537b1acde\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://498d832f14e6c8e4b316225f3a4a86fbf8172a85bd7aa090aeab3d9dbecba696\",\"dweb:/ipfs/QmSntDHhXLu1exqsbEufwVQd4QxfkjyTy71sitdtuPEWkr\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.17+commit.8df45f5f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"exchange","type":"address","indexed":true},{"internalType":"bool","name":"isAllowed","type":"bool","indexed":false}],"type":"event","name":"ExchangeAllowlistUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"address[]","name":"tokensIn","type":"address[]","indexed":false},{"internalType":"address[]","name":"tokensOut","type":"address[]","indexed":false},{"internalType":"uint256[]","name":"amountsIn","type":"uint256[]","indexed":false},{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]","indexed":false}],"type":"event","name":"Swapped","anonymous":false},{"inputs":[{"internalType":"address","name":"exchange","type":"address"}],"stateMutability":"view","type":"function","name":"isExchangeAllowed","outputs":[{"internalType":"bool","name":"isAllowed","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"tokensIn","type":"address[]"},{"internalType":"struct SwapInfo[]","name":"swapInfo","type":"tuple[]","components":[{"internalType":"address","name":"swapTarget","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"bytes","name":"swapCallData","type":"bytes"}]},{"internalType":"address[]","name":"tokensOut","type":"address[]"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"swap","outputs":[{"internalType":"uint256[]","name":"amountsOut","type":"uint256[]"}]},{"inputs":[{"internalType":"address[]","name":"exchanges","type":"address[]"},{"internalType":"bool[]","name":"allowed","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"updateExchangeAllowlist"}],"devdoc":{"kind":"dev","methods":{"isExchangeAllowed(address)":{"params":{"exchange":"Exchange to check."},"returns":{"isAllowed":"True if the exchange is allowed to be used in a swap, false otherwise."}},"swap(address[],(address,address,bytes)[],address[],address)":{"params":{"receiver":"Receiver of unswapped tokens.","swapInfo":"Information needed to perform the swap.","tokensIn":"Addresses of tokens available for the swap.","tokensOut":"Addresses of tokens to swap to."},"returns":{"amountsOut":"Amounts of `tokensOut` sent from the swapper to the receiver."}},"updateExchangeAllowlist(address[],bool[])":{"details":"Requirements:   - can only be called by user granted ROLE_SPOOL_ADMIN   - exchanges and allowed arrays need to be of same length","params":{"allowed":"Whether an exchange is allowed to be used in a swap.","exchanges":"Addresses of exchanges."}}},"version":1},"userdoc":{"kind":"user","methods":{"isExchangeAllowed(address)":{"notice":"Checks if an exchange is allowed to be used in a swap."},"swap(address[],(address,address,bytes)[],address[],address)":{"notice":"Performs a swap of tokens with external contracts. - deposit tokens into the swapper contract - swapper will swap tokens based on swap info provided - swapper will return unswapped tokens to the receiver"},"updateExchangeAllowlist(address[],bool[])":{"notice":"Updates list of exchanges that can be used in a swap."}},"version":1}},"settings":{"remappings":["@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@prb/math/=lib/prb-math/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","prb-math/=lib/prb-math/src/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/ISwapper.sol":"ISwapper"},"evmVersion":"london","libraries":{}},"sources":{"src/interfaces/ISwapper.sol":{"keccak256":"0x52bf0742ec1e3d68209f09622618f7f6b7adcc559c1e453dd3ee1c1537b1acde","urls":["bzz-raw://498d832f14e6c8e4b316225f3a4a86fbf8172a85bd7aa090aeab3d9dbecba696","dweb:/ipfs/QmSntDHhXLu1exqsbEufwVQd4QxfkjyTy71sitdtuPEWkr"],"license":"BUSL-1.1"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"src/interfaces/ISwapper.sol","id":2725,"exportedSymbols":{"ExchangeNotAllowed":[2658],"ISwapper":[2724],"NotSwapper":[2663],"SwapInfo":[2653]},"nodeType":"SourceUnit","src":"37:3009:18","nodes":[{"id":2646,"nodeType":"PragmaDirective","src":"37:23:18","nodes":[],"literals":["solidity","0.8",".17"]},{"id":2653,"nodeType":"StructDefinition","src":"334:86:18","nodes":[],"canonicalName":"SwapInfo","members":[{"constant":false,"id":2648,"mutability":"mutable","name":"swapTarget","nameLocation":"364:10:18","nodeType":"VariableDeclaration","scope":2653,"src":"356:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2647,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2650,"mutability":"mutable","name":"token","nameLocation":"388:5:18","nodeType":"VariableDeclaration","scope":2653,"src":"380:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2649,"name":"address","nodeType":"ElementaryTypeName","src":"380:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2652,"mutability":"mutable","name":"swapCallData","nameLocation":"405:12:18","nodeType":"VariableDeclaration","scope":2653,"src":"399:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2651,"name":"bytes","nodeType":"ElementaryTypeName","src":"399:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SwapInfo","nameLocation":"341:8:18","scope":2725,"visibility":"public"},{"id":2658,"nodeType":"ErrorDefinition","src":"596:43:18","nodes":[],"documentation":{"id":2654,"nodeType":"StructuredDocumentation","src":"458:137:18","text":" @notice Used when trying to do a swap via an exchange that is not allowed to execute a swap.\n @param exchange Exchange used."},"errorSelector":"b867b387","name":"ExchangeNotAllowed","nameLocation":"602:18:18","parameters":{"id":2657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2656,"mutability":"mutable","name":"exchange","nameLocation":"629:8:18","nodeType":"VariableDeclaration","scope":2658,"src":"621:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2655,"name":"address","nodeType":"ElementaryTypeName","src":"621:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"620:18:18"}},{"id":2663,"nodeType":"ErrorDefinition","src":"763:33:18","nodes":[],"documentation":{"id":2659,"nodeType":"StructuredDocumentation","src":"641:121:18","text":" @notice Used when trying to execute a swap but are not authorized.\n @param caller Caller of the swap method."},"errorSelector":"896ded80","name":"NotSwapper","nameLocation":"769:10:18","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2661,"mutability":"mutable","name":"caller","nameLocation":"788:6:18","nodeType":"VariableDeclaration","scope":2663,"src":"780:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2660,"name":"address","nodeType":"ElementaryTypeName","src":"780:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"779:16:18"}},{"id":2724,"nodeType":"ContractDefinition","src":"838:2208:18","nodes":[{"id":2670,"nodeType":"EventDefinition","src":"1134:73:18","nodes":[],"anonymous":false,"documentation":{"id":2664,"nodeType":"StructuredDocumentation","src":"903:226:18","text":" @notice Emitted when the exchange allowlist is updated.\n @param exchange Exchange that was updated.\n @param isAllowed Whether the exchange is allowed to be used in a swap or not after the update."},"eventSelector":"627cd1344146c37272a586e0d2cce7d499f8d0c9d40756a50c8e45ef46a4e5bc","name":"ExchangeAllowlistUpdated","nameLocation":"1140:24:18","parameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2666,"indexed":true,"mutability":"mutable","name":"exchange","nameLocation":"1181:8:18","nodeType":"VariableDeclaration","scope":2670,"src":"1165:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2665,"name":"address","nodeType":"ElementaryTypeName","src":"1165:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2668,"indexed":false,"mutability":"mutable","name":"isAllowed","nameLocation":"1196:9:18","nodeType":"VariableDeclaration","scope":2670,"src":"1191:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2667,"name":"bool","nodeType":"ElementaryTypeName","src":"1191:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1164:42:18"}},{"id":2686,"nodeType":"EventDefinition","src":"1213:138:18","nodes":[],"anonymous":false,"eventSelector":"39b1ebcf9d679e76260b7a9d80b7a2dd106e4c8afd6e0052e7a5029d1cff0adb","name":"Swapped","nameLocation":"1219:7:18","parameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2672,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"1252:8:18","nodeType":"VariableDeclaration","scope":2686,"src":"1236:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2671,"name":"address","nodeType":"ElementaryTypeName","src":"1236:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2675,"indexed":false,"mutability":"mutable","name":"tokensIn","nameLocation":"1272:8:18","nodeType":"VariableDeclaration","scope":2686,"src":"1262:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2673,"name":"address","nodeType":"ElementaryTypeName","src":"1262:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2674,"nodeType":"ArrayTypeName","src":"1262:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2678,"indexed":false,"mutability":"mutable","name":"tokensOut","nameLocation":"1292:9:18","nodeType":"VariableDeclaration","scope":2686,"src":"1282:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2676,"name":"address","nodeType":"ElementaryTypeName","src":"1282:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2677,"nodeType":"ArrayTypeName","src":"1282:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2681,"indexed":false,"mutability":"mutable","name":"amountsIn","nameLocation":"1313:9:18","nodeType":"VariableDeclaration","scope":2686,"src":"1303:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1303:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2680,"nodeType":"ArrayTypeName","src":"1303:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2684,"indexed":false,"mutability":"mutable","name":"amountsOut","nameLocation":"1334:10:18","nodeType":"VariableDeclaration","scope":2686,"src":"1324:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2682,"name":"uint256","nodeType":"ElementaryTypeName","src":"1324:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2683,"nodeType":"ArrayTypeName","src":"1324:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1226:124:18"}},{"id":2705,"nodeType":"FunctionDefinition","src":"2001:206:18","nodes":[],"documentation":{"id":2687,"nodeType":"StructuredDocumentation","src":"1418:578:18","text":" @notice Performs a swap of tokens with external contracts.\n - deposit tokens into the swapper contract\n - swapper will swap tokens based on swap info provided\n - swapper will return unswapped tokens to the receiver\n @param tokensIn Addresses of tokens available for the swap.\n @param swapInfo Information needed to perform the swap.\n @param tokensOut Addresses of tokens to swap to.\n @param receiver Receiver of unswapped tokens.\n @return amountsOut Amounts of `tokensOut` sent from the swapper to the receiver."},"functionSelector":"67c15262","implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"2010:4:18","parameters":{"id":2700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"tokensIn","nameLocation":"2043:8:18","nodeType":"VariableDeclaration","scope":2705,"src":"2024:27:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2688,"name":"address","nodeType":"ElementaryTypeName","src":"2024:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2689,"nodeType":"ArrayTypeName","src":"2024:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2694,"mutability":"mutable","name":"swapInfo","nameLocation":"2081:8:18","nodeType":"VariableDeclaration","scope":2705,"src":"2061:28:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapInfo_$2653_calldata_ptr_$dyn_calldata_ptr","typeString":"struct SwapInfo[]"},"typeName":{"baseType":{"id":2692,"nodeType":"UserDefinedTypeName","pathNode":{"id":2691,"name":"SwapInfo","nameLocations":["2061:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2653,"src":"2061:8:18"},"referencedDeclaration":2653,"src":"2061:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_SwapInfo_$2653_storage_ptr","typeString":"struct SwapInfo"}},"id":2693,"nodeType":"ArrayTypeName","src":"2061:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapInfo_$2653_storage_$dyn_storage_ptr","typeString":"struct SwapInfo[]"}},"visibility":"internal"},{"constant":false,"id":2697,"mutability":"mutable","name":"tokensOut","nameLocation":"2118:9:18","nodeType":"VariableDeclaration","scope":2705,"src":"2099:28:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2695,"name":"address","nodeType":"ElementaryTypeName","src":"2099:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2696,"nodeType":"ArrayTypeName","src":"2099:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2699,"mutability":"mutable","name":"receiver","nameLocation":"2145:8:18","nodeType":"VariableDeclaration","scope":2705,"src":"2137:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2698,"name":"address","nodeType":"ElementaryTypeName","src":"2137:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2014:145:18"},"returnParameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"amountsOut","nameLocation":"2195:10:18","nodeType":"VariableDeclaration","scope":2705,"src":"2178:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2178:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2702,"nodeType":"ArrayTypeName","src":"2178:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2177:29:18"},"scope":2724,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2715,"nodeType":"FunctionDefinition","src":"2576:97:18","nodes":[],"documentation":{"id":2706,"nodeType":"StructuredDocumentation","src":"2213:358:18","text":" @notice Updates list of exchanges that can be used in a swap.\n @dev Requirements:\n   - can only be called by user granted ROLE_SPOOL_ADMIN\n   - exchanges and allowed arrays need to be of same length\n @param exchanges Addresses of exchanges.\n @param allowed Whether an exchange is allowed to be used in a swap."},"functionSelector":"51d307af","implemented":false,"kind":"function","modifiers":[],"name":"updateExchangeAllowlist","nameLocation":"2585:23:18","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"exchanges","nameLocation":"2628:9:18","nodeType":"VariableDeclaration","scope":2715,"src":"2609:28:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2707,"name":"address","nodeType":"ElementaryTypeName","src":"2609:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2708,"nodeType":"ArrayTypeName","src":"2609:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2712,"mutability":"mutable","name":"allowed","nameLocation":"2655:7:18","nodeType":"VariableDeclaration","scope":2715,"src":"2639:23:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":2710,"name":"bool","nodeType":"ElementaryTypeName","src":"2639:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2711,"nodeType":"ArrayTypeName","src":"2639:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"2608:55:18"},"returnParameters":{"id":2714,"nodeType":"ParameterList","parameters":[],"src":"2672:0:18"},"scope":2724,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2723,"nodeType":"FunctionDefinition","src":"2960:84:18","nodes":[],"documentation":{"id":2716,"nodeType":"StructuredDocumentation","src":"2736:219:18","text":" @notice Checks if an exchange is allowed to be used in a swap.\n @param exchange Exchange to check.\n @return isAllowed True if the exchange is allowed to be used in a swap, false otherwise."},"functionSelector":"8d4435e4","implemented":false,"kind":"function","modifiers":[],"name":"isExchangeAllowed","nameLocation":"2969:17:18","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"exchange","nameLocation":"2995:8:18","nodeType":"VariableDeclaration","scope":2723,"src":"2987:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2717,"name":"address","nodeType":"ElementaryTypeName","src":"2987:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2986:18:18"},"returnParameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"isAllowed","nameLocation":"3033:9:18","nodeType":"VariableDeclaration","scope":2723,"src":"3028:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2720,"name":"bool","nodeType":"ElementaryTypeName","src":"3028:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3027:16:18"},"scope":2724,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"ISwapper","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[2724],"name":"ISwapper","nameLocation":"848:8:18","scope":2725,"usedErrors":[]}],"license":"BUSL-1.1"},"id":18}
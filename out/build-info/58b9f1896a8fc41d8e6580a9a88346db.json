{"id":"58b9f1896a8fc41d8e6580a9a88346db","source_id_to_path":{"0":"src/CustomMetaVaultGuard.sol","1":"src/MetaVaultGuard.sol","2":"src/interfaces/CommonErrors.sol","3":"src/interfaces/Constants.sol","4":"src/interfaces/IAssetGroupRegistry.sol","5":"src/interfaces/IDAI.sol","6":"src/interfaces/IDepositManager.sol","7":"src/interfaces/IERC1155MetadataURIUpgradeable.sol","8":"src/interfaces/IERC1155ReceiverUpgradeable.sol","9":"src/interfaces/IERC1155Upgradeable.sol","10":"src/interfaces/IERC165Upgradeable.sol","11":"src/interfaces/IERC20.sol","12":"src/interfaces/IERC20Upgradeable.sol","13":"src/interfaces/IGuardManager.sol","14":"src/interfaces/IMetaVault.sol","15":"src/interfaces/IMetaVaultGuard.sol","16":"src/interfaces/ISmartVault.sol","17":"src/interfaces/ISmartVaultManager.sol","18":"src/interfaces/ISwapper.sol","19":"src/interfaces/IWithdrawalManager.sol","20":"src/interfaces/RequestType.sol","21":"src/interfaces/uint16a16Lib.sol"},"language":"Solidity","_format":"ethers-rs-sol-build-info-1","input":{"version":"0.8.17","language":"Solidity","sources":{"src/CustomMetaVaultGuard.sol":{"content":"/// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.17;\n\nimport \"./interfaces/ISmartVaultManager.sol\";\nimport \"./interfaces/IAssetGroupRegistry.sol\";\nimport \"./interfaces/IGuardManager.sol\";\nimport \"./interfaces/IMetaVault.sol\";\nimport \"./interfaces/IMetaVaultGuard.sol\";\nimport \"./interfaces/CommonErrors.sol\";\n\ncontract CustomMetaVaultGuard is IMetaVaultGuard {\n    /**\n     * @dev SmartVaultManager contract\n     */\n    ISmartVaultManager internal immutable smartVaultManager;\n\n    /**\n     * @dev AssetGroupRegistry contract\n     */\n    IAssetGroupRegistry internal immutable assetGroupRegistry;\n    /**\n     * @dev GuardManager contract\n     */\n    IGuardManager internal immutable guardManager;\n\n    // ========================== CONSTRUCTOR ==========================\n\n    constructor(\n        ISmartVaultManager smartVaultManager_,\n        IAssetGroupRegistry assetGroupRegistry_,\n        IGuardManager guardManager_\n    ) {\n        if (\n            address(smartVaultManager_) == address(0) || address(assetGroupRegistry_) == address(0)\n                || address(guardManager_) == address(0)\n        ) revert ConfigurationAddressZero();\n        smartVaultManager = smartVaultManager_;\n        assetGroupRegistry = assetGroupRegistry_;\n        guardManager = guardManager_;\n    }\n\n    /// @inheritdoc IMetaVaultGuard\n    function validateSmartVault(address asset, address smartVault) external view virtual returns (bool) {\n        return _validateSmartVault(asset, smartVault);\n    }\n\n    /// @inheritdoc IMetaVaultGuard\n    function validateSmartVaults(address asset, address[] calldata smartVaults) external view virtual returns (bool) {\n        if (smartVaults.length == 0) revert InvalidArrayLength();\n        for (uint256 i; i < smartVaults.length; i++) {\n            _validateSmartVault(asset, smartVaults[i]);\n        }\n        return true;\n    }\n\n    /**\n     * @dev Check if given smart vault can be managed by MetaVault\n     * @param asset for MetaVault\n     * @param smartVault to validate\n     */\n    function _validateSmartVault(address asset, address smartVault) internal view returns (bool) {\n        SmartVaultFees memory fees = smartVaultManager.getSmartVaultFees(smartVault);\n        /// management and deposit fees should be zero\n        if (fees.managementFeePct > 0) revert InvalidVaultManagementFee();\n        if (fees.depositFeePct > 0) revert InvalidVaultDepositFee();\n        address[] memory vaultAssets = assetGroupRegistry.listAssetGroup(smartVaultManager.assetGroupId(smartVault));\n        /// assetGroup should match the underlying asset of MetaVault\n        if (vaultAssets.length != 1 || vaultAssets[0] != asset) revert InvalidVaultAsset();\n        /// no guards are allowed\n        _validateSmartVaultGuards(smartVault, RequestType.Deposit);\n        _validateSmartVaultGuards(smartVault, RequestType.Withdrawal);\n        _validateSmartVaultGuards(smartVault, RequestType.TransferNFT);\n        _validateSmartVaultGuards(smartVault, RequestType.BurnNFT);\n        _validateSmartVaultGuards(smartVault, RequestType.TransferSVTs);\n        return true;\n    }\n\n    function _validateSmartVaultGuards(address smartVault, RequestType requestType) internal view {\n        GuardDefinition[] memory guards = guardManager.readGuards(smartVault, requestType);\n        if (guards.length > 0) revert NoGuardsAllowed();\n    }\n}"},"src/MetaVaultGuard.sol":{"content":"/// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.17;\n\nimport \"./interfaces/ISmartVaultManager.sol\";\nimport \"./interfaces/IAssetGroupRegistry.sol\";\nimport \"./interfaces/IGuardManager.sol\";\nimport \"./interfaces/IMetaVault.sol\";\nimport \"./interfaces/IMetaVaultGuard.sol\";\nimport \"./interfaces/CommonErrors.sol\";\n\ncontract MetaVaultGuard is IMetaVaultGuard {\n    /**\n     * @dev SmartVaultManager contract\n     */\n    ISmartVaultManager internal immutable smartVaultManager;\n    /**\n     * @dev AssetGroupRegistry contract\n     */\n    IAssetGroupRegistry internal immutable assetGroupRegistry;\n    /**\n     * @dev GuardManager contract\n     */\n    IGuardManager internal immutable guardManager;\n\n    // ========================== CONSTRUCTOR ==========================\n\n    constructor(\n        ISmartVaultManager smartVaultManager_,\n        IAssetGroupRegistry assetGroupRegistry_,\n        IGuardManager guardManager_\n    ) {\n        if (\n            address(smartVaultManager_) == address(0) || address(assetGroupRegistry_) == address(0)\n                || address(guardManager_) == address(0)\n        ) revert ConfigurationAddressZero();\n        smartVaultManager = smartVaultManager_;\n        assetGroupRegistry = assetGroupRegistry_;\n        guardManager = guardManager_;\n    }\n\n    /// @inheritdoc IMetaVaultGuard\n    function validateSmartVault(address asset, address smartVault) external view virtual returns (bool) {\n        return _validateSmartVault(asset, smartVault);\n    }\n\n    /// @inheritdoc IMetaVaultGuard\n    function validateSmartVaults(address asset, address[] calldata smartVaults) external view virtual returns (bool) {\n        if (smartVaults.length == 0) revert InvalidArrayLength();\n        for (uint256 i; i < smartVaults.length; i++) {\n            _validateSmartVault(asset, smartVaults[i]);\n        }\n        return true;\n    }\n\n    /**\n     * @dev Check if given smart vault can be managed by MetaVault\n     * @param asset for MetaVault\n     * @param smartVault to validate\n     */\n    function _validateSmartVault(address asset, address smartVault) internal view returns (bool) {\n        SmartVaultFees memory fees = smartVaultManager.getSmartVaultFees(smartVault);\n        /// management and deposit fees should be zero\n        if (fees.managementFeePct > 0) revert InvalidVaultManagementFee();\n        if (fees.depositFeePct > 0) revert InvalidVaultDepositFee();\n        address[] memory vaultAssets = assetGroupRegistry.listAssetGroup(smartVaultManager.assetGroupId(smartVault));\n        /// assetGroup should match the underlying asset of MetaVault\n        if (vaultAssets.length != 1 || vaultAssets[0] != asset) revert InvalidVaultAsset();\n        /// no guards are allowed\n        _validateSmartVaultGuards(smartVault, RequestType.Deposit);\n        _validateSmartVaultGuards(smartVault, RequestType.Withdrawal);\n        _validateSmartVaultGuards(smartVault, RequestType.TransferNFT);\n        _validateSmartVaultGuards(smartVault, RequestType.BurnNFT);\n        _validateSmartVaultGuards(smartVault, RequestType.TransferSVTs);\n        return true;\n    }\n\n    function _validateSmartVaultGuards(address smartVault, RequestType requestType) internal view {\n        GuardDefinition[] memory guards = guardManager.readGuards(smartVault, requestType);\n        if (guards.length > 0) revert NoGuardsAllowed();\n    }\n}"},"src/interfaces/CommonErrors.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.17;\n\n/**\n * @notice Used when an array has invalid length.\n */\nerror InvalidArrayLength();\n\n/**\n * @notice Used when group of smart vaults or strategies do not have same asset group.\n */\nerror NotSameAssetGroup();\n\n/**\n * @notice Used when configuring an address with a zero address.\n */\nerror ConfigurationAddressZero();\n\n/**\n * @notice Used when constructor or intializer parameters are invalid.\n */\nerror InvalidConfiguration();\n\n/**\n * @notice Used when fetched exchange rate is out of slippage range.\n */\nerror ExchangeRateOutOfSlippages();\n\n/**\n * @notice Used when an invalid strategy is provided.\n * @param address_ Address of the invalid strategy.\n */\nerror InvalidStrategy(address address_);\n\n/**\n * @notice Used when doing low-level call on an address that is not a contract.\n * @param address_ Address of the contract\n */\nerror AddressNotContract(address address_);\n\n/**\n * @notice Used when invoking an only view execution and tx.origin is not address zero.\n * @param address_ Address of the tx.origin\n */\nerror OnlyViewExecution(address address_);"},"src/interfaces/Constants.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.17;\n\n/// @dev Number of seconds in an average year.\nuint256 constant SECONDS_IN_YEAR = 31_556_926;\n\n/// @dev Number of seconds in an average year.\nint256 constant SECONDS_IN_YEAR_INT = 31_556_926;\n\n/// @dev Represents 100%.\nuint256 constant FULL_PERCENT = 100_00;\n\n/// @dev Represents 100%.\nint256 constant FULL_PERCENT_INT = 100_00;\n\n/// @dev Represents 100% for yield.\nint256 constant YIELD_FULL_PERCENT_INT = 10 ** 12;\n\n/// @dev Represents 100% for yield.\nuint256 constant YIELD_FULL_PERCENT = uint256(YIELD_FULL_PERCENT_INT);\n\n/// @dev Maximal management fee that can be set on a smart vault. Expressed in terms of FULL_PERCENT.\nuint256 constant MANAGEMENT_FEE_MAX = 5_00;\n\n/// @dev Maximal deposit fee that can be set on a smart vault. Expressed in terms of FULL_PERCENT.\nuint256 constant DEPOSIT_FEE_MAX = 5_00;\n\n/// @dev Maximal smart vault performance fee that can be set on a smart vault. Expressed in terms of FULL_PERCENT.\nuint256 constant SV_PERFORMANCE_FEE_MAX = 20_00;\n\n/// @dev Maximal ecosystem fee that can be set on the system. Expressed in terms of FULL_PERCENT.\nuint256 constant ECOSYSTEM_FEE_MAX = 20_00;\n\n/// @dev Maximal treasury fee that can be set on the system. Expressed in terms of FULL_PERCENT.\nuint256 constant TREASURY_FEE_MAX = 10_00;\n\n/// @dev Maximal risk score a strategy can be assigned.\nuint8 constant MAX_RISK_SCORE = 10_0;\n\n/// @dev Minimal risk score a strategy can be assigned.\nuint8 constant MIN_RISK_SCORE = 1;\n\n/// @dev Maximal value for risk tolerance a smart vautl can have.\nint8 constant MAX_RISK_TOLERANCE = 10;\n\n/// @dev Minimal value for risk tolerance a smart vault can have.\nint8 constant MIN_RISK_TOLERANCE = -10;\n\n/// @dev If set as risk provider, system will return fixed risk score values\naddress constant STATIC_RISK_PROVIDER = address(0xaaa);\n\n/// @dev Fixed values to use if risk provider is set to STATIC_RISK_PROVIDER\nuint8 constant STATIC_RISK_SCORE = 1;\n\n/// @dev Maximal value of deposit NFT ID.\nuint256 constant MAXIMAL_DEPOSIT_ID = 2 ** 255;\n\n/// @dev Maximal value of withdrawal NFT ID.\nuint256 constant MAXIMAL_WITHDRAWAL_ID = 2 ** 256 - 1;\n\n/// @dev How many shares will be minted with a NFT\nuint256 constant NFT_MINTED_SHARES = 10 ** 6;\n\n/// @dev Each smart vault can have up to STRATEGY_COUNT_CAP strategies.\nuint256 constant STRATEGY_COUNT_CAP = 16;\n\n/// @dev Maximal DHW base yield. Expressed in terms of FULL_PERCENT.\nuint256 constant MAX_DHW_BASE_YIELD_LIMIT = 10_00;\n\n/// @dev Smart vault and strategy share multiplier at first deposit.\nuint256 constant INITIAL_SHARE_MULTIPLIER = 1000;\n\n/// @dev Strategy initial locked shares. These shares will never be unlocked.\nuint256 constant INITIAL_LOCKED_SHARES = 10 ** 12;\n\n/// @dev Strategy initial locked shares address.\naddress constant INITIAL_LOCKED_SHARES_ADDRESS = address(0xdead);\n\n/// @dev Maximum number of guards a smart vault can be configured with\nuint256 constant MAX_GUARD_COUNT = 10;\n\n/// @dev Maximum number of actions a smart vault can be configured with\nuint256 constant MAX_ACTION_COUNT = 10;\n\n/// @dev ID of null asset group. Should not be used by any strategy or smart vault.\nuint256 constant NULL_ASSET_GROUP_ID = 0;"},"src/interfaces/IAssetGroupRegistry.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.17;\n\nimport \"./IERC20.sol\";\n\n/* ========== ERRORS ========== */\n\n/**\n * @notice Used when invalid ID for asset group is provided.\n * @param assetGroupId Invalid ID for asset group.\n */\nerror InvalidAssetGroup(uint256 assetGroupId);\n\n/**\n * @notice Used when no assets are provided for an asset group.\n */\nerror NoAssetsProvided();\n\n/**\n * @notice Used when token is not allowed to be used as an asset.\n * @param token Address of the token that is not allowed.\n */\nerror TokenNotAllowed(address token);\n\n/**\n * @notice Used when asset group already exists.\n * @param assetGroupId ID of the already existing asset group.\n */\nerror AssetGroupAlreadyExists(uint256 assetGroupId);\n\n/**\n * @notice Used when given array is unsorted.\n */\nerror UnsortedArray();\n\n/* ========== INTERFACES ========== */\n\ninterface IAssetGroupRegistry {\n    /* ========== EVENTS ========== */\n\n    /**\n     * @notice Emitted when token is allowed to be used as an asset.\n     * @param token Address of newly allowed token.\n     */\n    event TokenAllowed(address indexed token);\n\n    /**\n     * @notice Emitted when asset group is registered.\n     * @param assetGroupId ID of the newly registered asset group.\n     */\n    event AssetGroupRegistered(uint256 indexed assetGroupId);\n\n    /* ========== VIEW FUNCTIONS ========== */\n\n    /**\n     * @notice Checks if token is allowed to be used as an asset.\n     * @param token Address of token to check.\n     * @return isAllowed True if token is allowed, false otherwise.\n     */\n    function isTokenAllowed(address token) external view returns (bool isAllowed);\n\n    /**\n     * @notice Gets number of registered asset groups.\n     * @return count Number of registered asset groups.\n     */\n    function numberOfAssetGroups() external view returns (uint256 count);\n\n    /**\n     * @notice Gets asset group by its ID.\n     * @dev Requirements:\n     * - must provide a valid ID for the asset group\n     * @return assets Array of assets in the asset group.\n     */\n    function listAssetGroup(uint256 assetGroupId) external view returns (address[] memory assets);\n\n    /**\n     * @notice Gets asset group length.\n     * @dev Requirements:\n     * - must provide a valid ID for the asset group\n     * @return length\n     */\n    function assetGroupLength(uint256 assetGroupId) external view returns (uint256 length);\n\n    /**\n     * @notice Validates that provided ID represents an asset group.\n     * @dev Function reverts when ID does not represent an asset group.\n     * @param assetGroupId ID to validate.\n     */\n    function validateAssetGroup(uint256 assetGroupId) external view;\n\n    /**\n     * @notice Checks if asset group composed of assets already exists.\n     * Will revert if provided assets cannot form an asset group.\n     * @param assets Assets composing the asset group.\n     * @return Asset group ID if such asset group exists, 0 otherwise.\n     */\n    function checkAssetGroupExists(address[] calldata assets) external view returns (uint256);\n\n    /* ========== MUTATIVE FUNCTIONS ========== */\n\n    /**\n     * @notice Allows a token to be used as an asset.\n     * @dev Requirements:\n     * - can only be called by the ROLE_SPOOL_ADMIN\n     * @param token Address of token to be allowed.\n     */\n    function allowToken(address token) external;\n\n    /**\n     * @notice Allows tokens to be used as assets.\n     * @dev Requirements:\n     * - can only be called by the ROLE_SPOOL_ADMIN\n     * @param tokens Addresses of tokens to be allowed.\n     */\n    function allowTokenBatch(address[] calldata tokens) external;\n\n    /**\n     * @notice Registers a new asset group.\n     * @dev Requirements:\n     * - must provide at least one asset\n     * - all assets must be allowed\n     * - assets must be sorted\n     * - such asset group should not exist yet\n     * - can only be called by the ROLE_SPOOL_ADMIN\n     * @param assets Array of assets in the asset group.\n     * @return id Sequential ID assigned to the asset group.\n     */\n    function registerAssetGroup(address[] calldata assets) external returns (uint256 id);\n}"},"src/interfaces/IDAI.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\ninterface IDAI {\n    function permit(\n        address holder,\n        address spender,\n        uint256 nonce,\n        uint256 expiry,\n        bool allowed,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}"},"src/interfaces/IDepositManager.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.17;\n\nimport \"./ISmartVault.sol\";\nimport \"./uint16a16Lib.sol\";\n\n/**\n * @notice Used when deposited assets are not the same length as underlying assets.\n */\nerror InvalidAssetLengths();\n\n/**\n * @notice Used when lengths of NFT id and amount arrays when claiming NFTs don't match.\n */\nerror InvalidNftArrayLength();\n\n/**\n * @notice Used when trying to deposit zero assets into a smart vault.\n */\nerror NothingToDeposit();\n\n/**\n * @notice Used when there are no pending deposits to recover.\n * E.g., they were already recovered or flushed.\n */\nerror NoDepositsToRecover();\n\n/**\n * @notice Used when trying to recover pending deposits from a smart vault that has non-ghost strategies.\n */\nerror NotGhostVault();\n\n/**\n * @notice Gathers input for depositing assets.\n * @custom:member smartVault Smart vault for which the deposit is made.\n * @custom:member assets Amounts of assets being deposited.\n * @custom:member receiver Receiver of the deposit NFT.\n * @custom:member referral Referral address.\n * @custom:member doFlush If true, the smart vault will be flushed after the deposit as part of same transaction.\n */\nstruct DepositBag {\n    address smartVault;\n    uint256[] assets;\n    address receiver;\n    address referral;\n    bool doFlush;\n}\n\n/**\n * @notice Gathers extra input for depositing assets.\n * @custom:member depositor Address making the deposit.\n * @custom:member tokens Tokens of the smart vault.\n * @custom:member strategies Strategies of the smart vault.\n * @custom:member allocations Set allocation of funds between strategies.\n * @custom:member flushIndex Current flush index of the smart vault.\n */\nstruct DepositExtras {\n    address depositor;\n    address[] tokens;\n    address[] strategies;\n    uint16a16 allocations;\n    uint256 flushIndex;\n}\n\n/**\n * @notice Gathers minted SVTs for a specific fee type.\n * @custom:member depositFees Minted SVTs for deposit fees.\n * @custom:member performanceFees Minted SVTs for performance fees.\n * @custom:member managementFees Minted SVTs for management fees.\n */\nstruct SmartVaultFeesCollected {\n    uint256 depositFees;\n    uint256 performanceFees;\n    uint256 managementFees;\n}\n\n/**\n * @notice Gathers return values of syncing deposits.\n * @custom:member mintedSVTs Amount of SVTs minted.\n * @custom:member dhwTimestamp Timestamp of the last DHW synced.\n * @custom:member feeSVTs Amount of SVTs minted as fees.\n * @custom:member feesCollected Breakdown of amount of SVTs minted as fees.\n * @custom:member initialLockedSVTs Amount of initial locked SVTs.\n * @custom:member sstShares Amount of SSTs claimed for each strategy.\n */\nstruct DepositSyncResult {\n    uint256 mintedSVTs;\n    uint256 dhwTimestamp;\n    uint256 feeSVTs;\n    SmartVaultFeesCollected feesCollected;\n    uint256 initialLockedSVTs;\n    uint256[] sstShares;\n}\n\n/**\n * @custom:member smartVault Smart Vault address\n * @custom:member bag flush index, lastDhwSyncedTimestamp\n * @custom:member strategies strategy addresses\n * @custom:member assetGroup vault asset group token addresses\n * @custom:member dhwIndexes DHW Indexes for given flush index\n * @custom:member dhwIndexesOld DHW Indexes for previous flush index\n * @custom:member fees smart vault fee configuration\n * @return syncResult Result of the smart vault sync.\n */\nstruct SimulateDepositParams {\n    address smartVault;\n    // bag[0]: flushIndex,\n    // bag[1]: lastDhwSyncedTimestamp,\n    uint256[2] bag;\n    address[] strategies;\n    address[] assetGroup;\n    uint16a16 dhwIndexes;\n    uint16a16 dhwIndexesOld;\n    SmartVaultFees fees;\n}\n\ninterface IDepositManager {\n    /**\n     * @notice User redeemed deposit NFTs for SVTs\n     * @param smartVault Smart vault address\n     * @param claimer Claimer address\n     * @param claimedVaultTokens Amount of SVTs claimed\n     * @param nftIds NFTs to burn\n     * @param nftAmounts NFT shares to burn\n     */\n    event SmartVaultTokensClaimed(\n        address indexed smartVault,\n        address indexed claimer,\n        uint256 claimedVaultTokens,\n        uint256[] nftIds,\n        uint256[] nftAmounts\n    );\n\n    /**\n     * @notice A deposit has been initiated\n     * @param smartVault Smart vault address\n     * @param receiver Beneficiary of the deposit\n     * @param depositId Deposit NFT ID for this deposit\n     * @param flushIndex Flush index the deposit was scheduled for\n     * @param assets Amount of assets to deposit\n     * @param depositor Address that initiated the deposit\n     * @param referral Referral address\n     */\n    event DepositInitiated(\n        address indexed smartVault,\n        address indexed receiver,\n        uint256 indexed depositId,\n        uint256 flushIndex,\n        uint256[] assets,\n        address depositor,\n        address referral\n    );\n\n    /**\n     * @notice Pending deposits were recovered.\n     * @param smartVault Smart vault address.\n     * @param recoveredAssets Amount of assets recovered.\n     */\n    event PendingDepositsRecovered(address indexed smartVault, uint256[] recoveredAssets);\n\n    /**\n     * @notice Smart vault fees collected.\n     * @param smartVault Smart vault address.\n     * @param smartVaultFeesCollected Collected smart vault fee amounts.\n     */\n    event SmartVaultFeesMinted(address indexed smartVault, SmartVaultFeesCollected smartVaultFeesCollected);\n\n    /**\n     * @notice Simulate vault synchronization (i.e. DHW was completed, but vault wasn't synced yet)\n     */\n    function syncDepositsSimulate(SimulateDepositParams calldata parameters)\n        external\n        view\n        returns (DepositSyncResult memory syncResult);\n\n    /**\n     * @notice Synchronize vault deposits for completed DHW runs\n     * @dev Requirements:\n     * - caller must have role ROLE_SMART_VAULT_MANAGER\n     * @param smartVault Smart Vault address\n     * @param bag flushIndex, lastDhwSyncedTimestamp\n     * @param strategies vault strategy addresses\n     * @param dhwIndexes dhw indexes for given and previous flushIndex\n     * @param assetGroup vault asset group token addresses\n     * @param fees smart vault fee configuration\n     * @return syncResult Result of the smart vault sync.\n     */\n    function syncDeposits(\n        address smartVault,\n        uint256[2] calldata bag,\n        // uint256 flushIndex,\n        // uint256 lastDhwSyncedTimestamp\n        address[] calldata strategies,\n        uint16a16[2] calldata dhwIndexes,\n        address[] calldata assetGroup,\n        SmartVaultFees calldata fees\n    ) external returns (DepositSyncResult memory syncResult);\n\n    /**\n     * @notice Adds deposits for the next flush cycle.\n     * @dev Requirements:\n     * - caller must have role ROLE_SMART_VAULT_MANAGER\n     * @param bag Deposit parameters.\n     * @param bag2 Extra parameters.\n     * @return nftId ID of the deposit NFT.\n     */\n    function depositAssets(DepositBag calldata bag, DepositExtras calldata bag2) external returns (uint256 nftId);\n\n    /**\n     * @notice Mark deposits ready to be processed in the next DHW cycle\n     * @dev Requirements:\n     * - caller must have role ROLE_SMART_VAULT_MANAGER\n     * @param smartVault Smart Vault address\n     * @param flushIndex index to flush\n     * @param strategies vault strategy addresses\n     * @param allocations vault strategy allocations\n     * @param tokens vault asset group token addresses\n     * @return dhwIndexes DHW indexes in which the deposits will be included\n     */\n    function flushSmartVault(\n        address smartVault,\n        uint256 flushIndex,\n        address[] calldata strategies,\n        uint16a16 allocations,\n        address[] calldata tokens\n    ) external returns (uint16a16 dhwIndexes);\n\n    /**\n     * @notice Get the number of SVTs that are available, but haven't been claimed yet, for the given NFT\n     * @param smartVaultAddress Smart Vault address\n     * @param data NFT deposit NFT metadata\n     * @param nftShares amount of NFT shares to burn for SVTs\n     * @param mintedSVTs amount of SVTs minted for this flush\n     * @param tokens vault asset group addresses\n     */\n    function getClaimedVaultTokensPreview(\n        address smartVaultAddress,\n        DepositMetadata memory data,\n        uint256 nftShares,\n        uint256 mintedSVTs,\n        address[] calldata tokens\n    ) external view returns (uint256);\n\n    /**\n     * @notice Fetch assets deposited in a given vault flush\n     */\n    function smartVaultDeposits(address smartVault, uint256 flushIdx, uint256 assetGroupLength)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @notice Claim SVTs by burning deposit NFTs.\n     * @dev Requirements:\n     * - caller must have role ROLE_SMART_VAULT_MANAGER\n     * @param smartVault Smart Vault address\n     * @param nftIds NFT ids to burn\n     * @param nftAmounts NFT amounts to burn (support for partial burn)\n     * @param tokens vault asset group token addresses\n     * @param owner address owning NFTs\n     * @param executor address executing the claim transaction\n     * @param flushIndexToSync next flush index to sync for the smart vault\n     * @return claimedTokens Amount of smart vault tokens claimed.\n     */\n    function claimSmartVaultTokens(\n        address smartVault,\n        uint256[] calldata nftIds,\n        uint256[] calldata nftAmounts,\n        address[] calldata tokens,\n        address owner,\n        address executor,\n        uint256 flushIndexToSync\n    ) external returns (uint256 claimedTokens);\n\n    /**\n     * @notice Recovers pending deposits from smart vault.\n     * @dev Requirements:\n     * - caller must have role ROLE_SMART_VAULT_MANAGER\n     * @param smartVault Smart vault from which to recover pending deposits.\n     * @param flushIndex Flush index for which to recover pending deposits.\n     * @param strategies Addresses of smart vault's strategies.\n     * @param tokens Asset group token addresses.\n     * @param emergencyWallet Address of emergency withdraw wallet.\n     */\n    function recoverPendingDeposits(\n        address smartVault,\n        uint256 flushIndex,\n        address[] calldata strategies,\n        address[] calldata tokens,\n        address emergencyWallet\n    ) external;\n\n    /**\n     * @notice Gets current required deposit ratio of a smart vault.\n     * @param tokens Asset tokens of the smart vault.\n     * @param allocations Allocation between strategies of the smart vault.\n     * @param strategies Strategies of the smart vault.\n     * @return ratio Required deposit ratio of the smart vault.\n     */\n    function getDepositRatio(address[] memory tokens, uint16a16 allocations, address[] memory strategies)\n        external\n        view\n        returns (uint256[] memory ratio);\n}"},"src/interfaces/IERC1155MetadataURIUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155Upgradeable.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURIUpgradeable is IERC1155Upgradeable {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}"},"src/interfaces/IERC1155ReceiverUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155ReceiverUpgradeable is IERC165Upgradeable {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}"},"src/interfaces/IERC1155Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}"},"src/interfaces/IERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}"},"src/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}"},"src/interfaces/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}"},"src/interfaces/IGuardManager.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.17;\n\nimport \"./ISmartVault.sol\";\nimport \"./RequestType.sol\";\n\nerror GuardsAlreadyInitialized();\nerror GuardsNotInitialized();\nerror GuardError();\n\n/**\n * @notice Used when a guard fails.\n * @param guardNum Sequential number of the guard that failed.\n */\nerror GuardFailed(uint256 guardNum);\n\nerror InvalidGuardParamType(uint256 paramType);\n\n/**\n * @notice Too many guard definitions have been passed when creating a vault.\n */\nerror TooManyGuards();\n\n/**\n * @notice The guard definition does not have all required inputs\n */\nerror IncompleteGuardDefinition();\n\n/**\n * @custom:member VaultAddress Address of the smart vault.\n * @custom:member Executor In case of deposit, executor of deposit action; in case of withdrawal, executor of redeem action.\n * @custom:member Receiver Receiver of receipt NFT.\n * @custom:member Owner In case of deposit, owner of assets; in case of withdrawal, owner of vault shares.\n * @custom:member Assets Amounts of assets involved.\n * @custom:member Tokens Addresses of assets involved.\n * @custom:member AssetGroup Asset group of the smart vault.\n * @custom:member CustomValue Custom value.\n * @custom:member DynamicCustomValue Dynamic custom value.\n */\nenum GuardParamType {\n    VaultAddress,\n    Executor,\n    Receiver,\n    Owner,\n    Assets,\n    Tokens,\n    AssetGroup,\n    CustomValue,\n    DynamicCustomValue\n}\n\n/**\n * @custom:member methodSignature Signature of the method to invoke\n * @custom:member contractAddress Address of the contract to invoke\n * @custom:member operator The operator to use when comparing expectedValue to guard's function result.\n * @custom:member expectedValue Value to use when comparing with the guard function result.\n * - System only supports guards with return values that can be cast to uint256.\n * @custom:member methodParamTypes Types of parameters that the guard function is expecting.\n * @custom:member methodParamValues Parameter values that will be passed into the guard function call.\n * - This array should only include fixed/static values. Parameters that are resolved at runtime should be omitted.\n * - All values should be encoded using \"abi.encode\" before passing them to the GuardManager contract.\n * - We assume that all static types are encoded to 32 bytes. Fixed-size static arrays and structs with only static\n *      type members are not supported.\n * - If empty, system will assume the expected value is bool(true).\n */\nstruct GuardDefinition {\n    string methodSignature;\n    address contractAddress;\n    bytes2 operator;\n    uint256 expectedValue;\n    GuardParamType[] methodParamTypes;\n    bytes[] methodParamValues;\n}\n\n/**\n * @custom:member receiver Receiver of receipt NFT.\n * @custom:member executor In case of deposit, executor of deposit action; in case of withdrawal, executor of redeem action.\n * @custom:member owner In case of deposit, owner of assets; in case of withdrawal, owner of vault shares.\n * @custom:member requestType Request type for which the guard is run.\n * @custom:member assets Amounts of assets involved.\n * @custom:member tokens Addresses of tokens involved.\n */\nstruct RequestContext {\n    address receiver;\n    address executor;\n    address owner;\n    RequestType requestType;\n    uint256[] assets;\n    address[] tokens;\n}\n\ninterface IGuardManager {\n    /**\n     * @notice Runs guards for a smart vault.\n     * @dev Reverts if any guard fails.\n     * The context.methodParamValues array should only include fixed/static values.\n     * Parameters that are resolved at runtime should be omitted. All values should be encoded using \"abi.encode\" before\n     * passing them to the GuardManager contract. We assume that all static types are encoded to 32 bytes. Fixed-size\n     * static arrays and structs with only static type members are not supported.\n     * @param smartVault Smart vault for which to run the guards.\n     * @param context Context for running the guards.\n     */\n    function runGuards(address smartVault, RequestContext calldata context) external view;\n\n    /**\n     * @notice Gets guards for smart vault and request type.\n     * @param smartVault Smart vault for which to get guards.\n     * @param requestType Request type for which to get guards.\n     * @return guards Guards for the smart vault and request type.\n     */\n    function readGuards(address smartVault, RequestType requestType)\n        external\n        view\n        returns (GuardDefinition[] memory guards);\n\n    /**\n     * @notice Sets guards for the smart vault.\n     * @dev\n     * @dev Requirements:\n     * - caller must have role ROLE_SMART_VAULT_INTEGRATOR\n     * - guards should not have been already set for the smart vault\n     * @param smartVault Smart vault for which to set the guards.\n     * @param guards Guards to set. Grouped by the request types.\n     * @param requestTypes Request types for groups of guards.\n     */\n    function setGuards(address smartVault, GuardDefinition[][] calldata guards, RequestType[] calldata requestTypes)\n        external;\n\n    /**\n     * @notice Emitted when guards are set for a smart vault.\n     * @param smartVault Smart vault for which guards were set.\n     * @param guards Guard definitions\n     * @param requestTypes Guard triggers\n     */\n    event GuardsInitialized(address indexed smartVault, GuardDefinition[][] guards, RequestType[] requestTypes);\n}"},"src/interfaces/IMetaVault.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.17;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./IERC1155ReceiverUpgradeable.sol\";\n\nimport \"./IDAI.sol\";\n\ninterface IMetaVault is IERC20Upgradeable, IERC1155ReceiverUpgradeable {\n    // ========================== ERRORS ==========================\n\n    /**\n     * @dev There are no MVTs to claim\n     */\n    error NothingToClaim();\n    /**\n     * @dev There are no SVTs to claim for nft id\n     */\n    error NoDepositNft(uint256 nftId);\n    /**\n     * @dev User has nothing to withdraw\n     */\n    error NothingToWithdraw();\n    /**\n     * @dev There are no withdrawal nfts\n     */\n    error NothingToFulfill(uint256 nftId);\n    /**\n     * @dev Total allocation does not sum up to 100 bp\n     */\n    error WrongAllocation();\n    /**\n     * @dev Length of arrays is not equal\n     */\n    error ArgumentLengthMismatch();\n    /**\n     * @dev Maximum smart vault amount is exceeded\n     */\n    error MaxSmartVaultAmount();\n    /**\n     * @dev Flush and reallocation are blocked if there is pending sync\n     */\n    error PendingSync();\n    /**\n     * @dev Called method is paused\n     */\n    error Paused(bytes4 selector);\n    /**\n     * @dev Flush is blocked until reallocation is not done\n     */\n    error NeedReallocation();\n    /**\n     * @dev Reallocation failed because more assets were lost then specified by MetaVault owner\n     */\n    error MaxReallocationSlippage();\n\n    // ========================== EVENTS ==========================\n\n    /**\n     * @dev User deposited assets into MetaVault\n     */\n    event Deposit(address indexed user, uint128 indexed flushIndex, uint256 assets);\n    /**\n     * @dev User claimed MetaVault shares\n     */\n    event Claim(address indexed user, uint128 indexed flushIndex, uint256 shares);\n    /**\n     * @dev User redeemed MetaVault shares to get assets back\n     */\n    event Redeem(address indexed user, uint256 indexed flushIndex, uint256 shares);\n    /**\n     * @dev User has withdrawn his assets\n     */\n    event Withdraw(address indexed user, uint256 indexed flushIndex, uint256 assets);\n    /**\n     * @dev flushDeposit has run\n     */\n    event FlushDeposit(uint256 indexed flushIndex, uint256 assets);\n    /**\n     * @dev flushWithdrawal has run\n     */\n    event FlushWithdrawal(uint256 indexed flushIndex, uint256 shares);\n    /**\n     * @dev syncDeposit has run\n     */\n    event SyncDeposit(uint256 indexed flushIndex, uint256 shares);\n    /**\n     * @dev syncWithdrawal has run\n     */\n    event SyncWithdrawal(uint256 indexed flushIndex, uint256 assets);\n    /**\n     * @dev reallocate has run\n     */\n    event Reallocate(uint256 indexed reallocationIndex);\n    /**\n     * @dev reallocateSync has run\n     */\n    event ReallocateSync(uint256 indexed reallocationIndex);\n    /**\n     * @dev SmartVaults have been changed\n     */\n    event SmartVaultsChange(address[] vaults);\n    /**\n     * @dev Allocations have been changed\n     */\n    event AllocationChange(uint256[] allocations);\n    /**\n     * @dev Used for parameter gatherer to prepare slippages data\n     */\n    event SvtToRedeem(address smartVault, uint256 amount);\n    /**\n     * @dev Emitted when method is paused / unpaused\n     */\n    event PausedChange(bytes4 selector, bool paused);\n    /**\n     * @dev Emitted when needReallocation is changed\n     */\n    event NeedReallocationState(bool state);\n    /**\n     * @dev data for calculating share price of MVT\n     */\n    event SharePrice(uint256 totalBalance, uint256 totalSupply);\n    /**\n     * @dev Emitted when maxReallocationSlippage is changed\n     */\n    event MaxReallocationSlippageChange(uint256 value);\n\n    // ========================== FUNCTIONS ==========================\n\n    /**\n     * @notice Maximum amount of smart vaults MetaVault can manage\n     */\n    function MAX_SMART_VAULT_AMOUNT() external view returns (uint256);\n\n    /**\n     * @notice Maximum allowed percentage change of funds during reallocation in base points\n     */\n    function maxReallocationSlippage() external view returns (uint256);\n\n    /**\n     * @notice Owner of MetaVault can add new smart vaults for management\n     * @param vaults list to add\n     * @param allocations for all smart vaults\n     */\n    function addSmartVaults(address[] memory vaults, uint256[] memory allocations) external;\n\n    /**\n     * @notice Underlying asset used for investments\n     */\n    function asset() external view returns (address);\n\n    /**\n     * @notice claim MetaVault shares\n     * @param flushIndex to claim from\n     * @return shares claimed\n     */\n    function claim(uint128 flushIndex) external returns (uint256 shares);\n\n    /**\n     * @notice amount of shares user will get from provided flushIndex\n     * @param user address\n     * @param flushIndex index\n     * @return shares will be claimed\n     */\n    function claimable(address user, uint128 flushIndex) external returns (uint256 shares);\n\n    /**\n     * @notice deposit assets into MetaVault\n     * @param amount of assets\n     */\n    function deposit(uint256 amount) external;\n\n    /**\n     * @notice deposit assets into MetaVault\n     * @param amount of assets\n     * @param receiver of future shares\n     */\n    function deposit(uint256 amount, address receiver) external;\n\n    /**\n     * @notice flush deposits and redeems accumulated on MetaVault.\n     */\n    function flush() external;\n\n    /**\n     * @notice total amount of assets deposited by users in particular flush cycle\n     */\n    function flushToDepositedAssets(uint128) external view returns (uint256);\n\n    /**\n     * @notice total amount of shares minted for particular flush cycle\n     */\n    function flushToMintedShares(uint128) external view returns (uint256);\n\n    /**\n     * @notice total amount of shares redeemed by users in particular flush cycle\n     */\n    function flushToRedeemedShares(uint128) external view returns (uint256);\n\n    /**\n     * @notice withdrawal nft id associated with particular smart vault for specific flush index\n     */\n    function flushToSmartVaultToWithdrawalNftId(uint128, address) external view returns (uint256);\n\n    /**\n     * @notice total amount of assets received by MetaVault in particular flush cycle\n     */\n    function flushToWithdrawnAssets(uint128) external view returns (uint256);\n\n    /**\n     * @notice get the balance of underlying asset invested into smart vaults\n     * @return totalBalance of MetaVault and balances for each particular smart vault\n     */\n    function getBalances() external returns (uint256 totalBalance, uint256[] memory balances);\n\n    /**\n     * @notice get the list of smart vaults currently managed by MetaVault\n     * @return array of smart vaults\n     */\n    function getSmartVaults() external view returns (address[] memory);\n\n    /**\n     * @notice current flush index. Used to process batch of deposits and redeems\n     */\n    function index() external view returns (uint128 flush, uint128 sync);\n\n    /**\n     * @notice indicates that allocation has changed and there is a need for reallocation\n     */\n    function needReallocation() external view returns (bool);\n\n    /// @notice if asset supports EIP712\n    function permitAsset(uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    /// @notice if asset is DAI\n    function permitDai(uint256 nonce, uint256 deadline, bool allowed, uint8 v, bytes32 r, bytes32 s) external;\n\n    /**\n     * @notice only DoHardWorker can reallocate positions\n     * if smartVaultToAllocation is zero all funds are withdrawn from this vault and it is removed from _smartVault.list\n     * @param slippages for redeemFast\n     */\n    function reallocate(uint256[][][] memory slippages) external;\n\n    /**\n     * @notice Finalize reallocation of MetaVault\n     * revert - DHW should be run\n     */\n    function reallocateSync() external;\n\n    /**\n     * @notice current reallocation index\n     */\n    function reallocationIndex() external view returns (uint128 flush, uint128 sync);\n\n    /**\n     * @notice create a redeem request to get assets back\n     * @param shares of MetaVault to burn\n     */\n    function redeem(uint256 shares) external;\n\n    /**\n     * @notice function paused state\n     */\n    function selectorToPaused(bytes4) external view returns (bool);\n\n    /**\n     * @notice selectively pause functions\n     */\n    function setPaused(bytes4 selector, bool paused) external;\n\n    /**\n     * @notice only owner of MetaVault can change the allocations for managed smart vaults\n     * @param allocations to set\n     */\n    function setSmartVaultAllocations(uint256[] memory allocations) external;\n\n    /**\n     * @notice allocation is in base points\n     */\n    function smartVaultToAllocation(address) external view returns (uint256);\n\n    /**\n     * @notice deposit nft from regular deposit\n     */\n    function smartVaultToDepositNftId(address) external view returns (uint256);\n\n    /**\n     * @notice deposit nft from reallocation\n     */\n    function smartVaultToDepositNftIdFromReallocation(address) external view returns (uint256);\n\n    /**\n     * @notice flush indexes on SmartVaultManager\n     */\n    function smartVaultToManagerFlushIndex(address) external view returns (uint256);\n\n    /**\n     * @notice sync MetaVault deposits and withdrawals\n     */\n    function sync() external;\n\n    /**\n     * @notice amount of shares user deposited in specific flush index\n     */\n    function userToFlushToDepositedAssets(address, uint128) external view returns (uint256);\n\n    /**\n     * @notice amount of shares user redeemed in specific flush index\n     */\n    function userToFlushToRedeemedShares(address, uint128) external view returns (uint256);\n\n    /**\n     * @notice user can withdraw assets once his request with specific withdrawal index is fulfilled\n     * @param flushIndex index\n     */\n    function withdraw(uint128 flushIndex) external returns (uint256 amount);\n\n    /**\n     * @notice get amount of assets user will get from particular flush index\n     * @param user address\n     * @param flushIndex index\n     * @return amount of assets\n     */\n    function withdrawable(address user, uint128 flushIndex) external returns (uint256 amount);\n}"},"src/interfaces/IMetaVaultGuard.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.17;\n\ninterface IMetaVaultGuard {\n    // ========================== ERRORS ==========================\n\n    /**\n     * @dev Only SmartVaults with zero management fee are supported\n     */\n    error InvalidVaultManagementFee();\n    /**\n     * @dev Only SmartVaults with zero deposit fee are supported\n     */\n    error InvalidVaultDepositFee();\n    /**\n     * @dev Only SmartVaults with the same underlying assets are supported\n     */\n    error InvalidVaultAsset();\n    /**\n     * @dev Any guard on SmartVault is prohibited\n     */\n    error NoGuardsAllowed();\n\n    // ========================== FUNCTIONS ==========================\n\n    /**\n     * @notice Check if given smart vault can be managed by MetaVault\n     * @param asset for MetaVault\n     * @param smartVault to validate\n     */\n    function validateSmartVault(address asset, address smartVault) external view returns (bool);\n\n    /**\n     * @notice Check if given smart vault can be managed by MetaVault\n     * @param asset for MetaVault\n     * @param smartVaults to validate\n     */\n    function validateSmartVaults(address asset, address[] calldata smartVaults) external view returns (bool);\n}"},"src/interfaces/ISmartVault.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.17;\n\nimport \"./IERC1155Upgradeable.sol\";\nimport \"./IERC20Upgradeable.sol\";\nimport \"./IERC1155MetadataURIUpgradeable.sol\";\nimport \"./Constants.sol\";\nimport \"./RequestType.sol\";\n\n/* ========== ERRORS ========== */\n\n/**\n * @notice Used when the ID for deposit NFTs overflows.\n * @dev Should never happen.\n */\nerror DepositIdOverflow();\n\n/**\n * @notice Used when the ID for withdrawal NFTs overflows.\n * @dev Should never happen.\n */\nerror WithdrawalIdOverflow();\n\n/**\n * @notice Used when ID does not represent a deposit NFT.\n * @param depositNftId Invalid ID for deposit NFT.\n */\nerror InvalidDepositNftId(uint256 depositNftId);\n\n/**\n * @notice Used when ID does not represent a withdrawal NFT.\n * @param withdrawalNftId Invalid ID for withdrawal NFT.\n */\nerror InvalidWithdrawalNftId(uint256 withdrawalNftId);\n\n/**\n * @notice Used when balance of the NFT is invalid.\n * @param balance Actual balance of the NFT.\n */\nerror InvalidNftBalance(uint256 balance);\n\n/**\n * @notice Used when someone wants to transfer invalid NFT shares amount.\n * @param transferAmount Amount of shares requested to be transferred.\n */\nerror InvalidNftTransferAmount(uint256 transferAmount);\n\n/**\n * @notice Used when user tries to send tokens to himself.\n */\nerror SenderEqualsRecipient();\n\n/* ========== STRUCTS ========== */\n\nstruct DepositMetadata {\n    uint256[] assets;\n    uint256 initiated;\n    uint256 flushIndex;\n}\n\n/**\n * @notice Holds metadata detailing the withdrawal behind the NFT.\n * @custom:member vaultShares Vault shares withdrawn.\n * @custom:member flushIndex Flush index into which withdrawal is included.\n */\nstruct WithdrawalMetadata {\n    uint256 vaultShares;\n    uint256 flushIndex;\n}\n\n/**\n * @notice Holds all smart vault fee percentages.\n * @custom:member managementFeePct Management fee of the smart vault.\n * @custom:member depositFeePct Deposit fee of the smart vault.\n * @custom:member performanceFeePct Performance fee of the smart vault.\n */\nstruct SmartVaultFees {\n    uint16 managementFeePct;\n    uint16 depositFeePct;\n    uint16 performanceFeePct;\n}\n\n/* ========== INTERFACES ========== */\n\ninterface ISmartVault is IERC20Upgradeable, IERC1155MetadataURIUpgradeable {\n    /* ========== EXTERNAL VIEW FUNCTIONS ========== */\n\n    /**\n     * @notice Fractional balance of a NFT (0 - NFT_MINTED_SHARES).\n     * @param account Account to check the balance for.\n     * @param id ID of the NFT to check.\n     * @return fractionalBalance Fractional balance of account for the NFT.\n     */\n    function balanceOfFractional(address account, uint256 id) external view returns (uint256 fractionalBalance);\n\n    /**\n     * @notice Fractional balance of a NFTs (0 - NFT_MINTED_SHARES).\n     * @param account Account to check the balance for.\n     * @param ids IDs of the NFTs to check.\n     * @return fractionalBalances Fractional balances of account for each requested NFT.\n     */\n    function balanceOfFractionalBatch(address account, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory fractionalBalances);\n    /**\n     * @notice Gets the asset group used by the smart vault.\n     * @return id ID of the asset group.\n     */\n    function assetGroupId() external view returns (uint256 id);\n\n    /**\n     * @notice Gets the name of the smart vault.\n     * @return name Name of the vault.\n     */\n    function vaultName() external view returns (string memory name);\n\n    /**\n     * @notice Gets metadata for NFTs.\n     * @param nftIds IDs of NFTs.\n     * @return metadata Metadata for each requested NFT.\n     */\n    function getMetadata(uint256[] calldata nftIds) external view returns (bytes[] memory metadata);\n\n    /* ========== EXTERNAL MUTATIVE FUNCTIONS ========== */\n\n    /**\n     * @notice Set a new base URI for ERC1155 metadata.\n     * @param uri_ new base URI value\n     */\n    function setBaseURI(string memory uri_) external;\n\n    /**\n     * @notice Mints smart vault tokens for receiver.\n     * @dev Requirements:\n     * - caller must have role ROLE_SMART_VAULT_MANAGER\n     * @param receiver REceiver of minted tokens.\n     * @param vaultShares Amount of tokens to mint.\n     */\n    function mintVaultShares(address receiver, uint256 vaultShares) external;\n\n    /**\n     * @notice Burns smart vault tokens and releases strategy shares back to strategies.\n     * @dev Requirements:\n     * - caller must have role ROLE_SMART_VAULT_MANAGER\n     * @param owner Address for which to burn the tokens.\n     * @param vaultShares Amount of tokens to burn.\n     * @param strategies Strategies for which to release the strategy shares.\n     * @param shares Amounts of strategy shares to release.\n     */\n    function burnVaultShares(\n        address owner,\n        uint256 vaultShares,\n        address[] calldata strategies,\n        uint256[] calldata shares\n    ) external;\n\n    /**\n     * @notice Mints a new withdrawal NFT.\n     * @dev Supply of minted NFT is NFT_MINTED_SHARES (for partial burning).\n     * Requirements:\n     * - caller must have role ROLE_SMART_VAULT_MANAGER\n     * @param receiver Address that will receive the NFT.\n     * @param metadata Metadata to store for minted NFT.\n     * @return id ID of the minted NFT.\n     */\n    function mintWithdrawalNFT(address receiver, WithdrawalMetadata calldata metadata) external returns (uint256 id);\n\n    /**\n     * @notice Mints a new deposit NFT.\n     * @dev Supply of minted NFT is NFT_MINTED_SHARES (for partial burning).\n     * Requirements:\n     * - caller must have role ROLE_SMART_VAULT_MANAGER\n     * @param receiver Address that will receive the NFT.\n     * @param metadata Metadata to store for minted NFT.\n     * @return id ID of the minted NFT.\n     */\n    function mintDepositNFT(address receiver, DepositMetadata calldata metadata) external returns (uint256 id);\n\n    /**\n     * @notice Burns NFTs and returns their metadata.\n     * Allows for partial burning.\n     * @dev Requirements:\n     * - caller must have role ROLE_SMART_VAULT_MANAGER\n     * @param owner Owner of NFTs to burn.\n     * @param nftIds IDs of NFTs to burn.\n     * @param nftAmounts NFT shares to burn (partial burn).\n     * @return metadata Metadata for each burned NFT.\n     */\n    function burnNFTs(address owner, uint256[] calldata nftIds, uint256[] calldata nftAmounts)\n        external\n        returns (bytes[] memory metadata);\n\n    /**\n     * @notice Transfers smart vault tokens.\n     * @dev Requirements:\n     * - caller must have role ROLE_SMART_VAULT_MANAGER\n     * @param from Spender and owner of tokens.\n     * @param to Address to which tokens will be transferred.\n     * @param amount Amount of tokens to transfer.\n     * @return success True if transfer was successful.\n     */\n    function transferFromSpender(address from, address to, uint256 amount) external returns (bool success);\n\n    /**\n     * @notice Transfers unclaimed shares to claimer.\n     * @dev Requirements:\n     * - caller must have role ROLE_SMART_VAULT_MANAGER\n     * @param claimer Address that claims the shares.\n     * @param amount Amount of shares to transfer.\n     */\n    function claimShares(address claimer, uint256 amount) external;\n\n    /// @notice Emitted when base URI is changed.\n    event BaseURIChanged(string baseUri);\n}"},"src/interfaces/ISmartVaultManager.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.17;\n\nimport \"./IDepositManager.sol\";\nimport \"./ISmartVault.sol\";\nimport \"./ISwapper.sol\";\nimport \"./IWithdrawalManager.sol\";\n\n/* ========== ERRORS ========== */\n\n/**\n * @notice Used when user has insufficient balance for redeemal of shares.\n */\nerror InsufficientBalance(uint256 available, uint256 required);\n\n/**\n * @notice Used when there is nothing to flush.\n */\nerror NothingToFlush();\n\n/**\n * @notice Used when trying to register a smart vault that was already registered.\n */\nerror SmartVaultAlreadyRegistered();\n\n/**\n * @notice Used when trying to perform an action for smart vault that was not registered yet.\n */\nerror SmartVaultNotRegisteredYet();\n\n/**\n * @notice Used when user tries to configure a vault with too large management fee.\n */\nerror ManagementFeeTooLarge(uint256 mgmtFeePct);\n\n/**\n * @notice Used when user tries to configure a vault with too large performance fee.\n */\nerror PerformanceFeeTooLarge(uint256 performanceFeePct);\n\n/**\n * @notice Used when smart vault in reallocation has statically set allocation.\n */\nerror StaticAllocationSmartVault();\n\n/**\n * @notice Used when user tries to configure a vault with too large deposit fee.\n */\nerror DepositFeeTooLarge(uint256 depositFeePct);\n\n/**\n * @notice Used when user tries redeem on behalf of another user, but the vault does not support it\n */\nerror RedeemForNotAllowed();\n\n/**\n * @notice Used when trying to flush a vault that still needs to be synced.\n */\nerror VaultNotSynced();\n\n/**\n * @notice Used when trying to deposit into, redeem from, or flush a smart vault that has only ghost strategies.\n */\nerror GhostVault();\n\n/**\n * @notice Used when reallocation is called with expired parameters.\n */\nerror ReallocationParametersExpired();\n\n/* ========== STRUCTS ========== */\n\n/**\n * @notice Struct holding all data for registration of smart vault.\n * @custom:member assetGroupId Underlying asset group of the smart vault.\n * @custom:member strategies Strategies used by the smart vault.\n * @custom:member strategyAllocation Optional. If empty array, values will be calculated on the spot.\n * @custom:member managementFeePct Management fee of the smart vault.\n * @custom:member depositFeePct Deposit fee of the smart vault.\n * @custom:member performanceFeePct Performance fee of the smart vault.\n */\nstruct SmartVaultRegistrationForm {\n    uint256 assetGroupId;\n    address[] strategies;\n    uint16a16 strategyAllocation;\n    uint16 managementFeePct;\n    uint16 depositFeePct;\n    uint16 performanceFeePct;\n}\n\n/**\n * @notice Parameters for reallocation.\n * @custom:member smartVaults Smart vaults to reallocate.\n * @custom:member strategies Set of strategies involved in the reallocation. Should not include ghost strategy, even if some smart vault uses it.\n * @custom:member swapInfo Information for swapping assets before depositing into the protocol.\n * @custom:member depositSlippages Slippages used to constrain depositing into the protocol.\n * @custom:member withdrawalSlippages Slippages used to contrain withdrawal from the protocol.\n * @custom:member exchangeRateSlippages Slippages used to constratrain exchange rates for asset tokens.\n * @custom:member validUntil Sets the maximum timestamp the user is willing to wait to start executing reallocation.\n */\nstruct ReallocateParamBag {\n    address[] smartVaults;\n    address[] strategies;\n    SwapInfo[][] swapInfo;\n    uint256[][] depositSlippages;\n    uint256[][] withdrawalSlippages;\n    uint256[2][] exchangeRateSlippages;\n    uint256 validUntil;\n}\n\nstruct FlushIndex {\n    uint128 current;\n    uint128 toSync;\n}\n\n/* ========== INTERFACES ========== */\n\ninterface ISmartVaultRegistry {\n    /**\n     * @notice Registers smart vault into the Spool protocol.\n     * @dev Requirements:\n     * - caller must have role ROLE_SMART_VAULT_INTEGRATOR\n     * @param smartVault Smart vault to register.\n     * @param registrationForm Form with information for registration.\n     */\n    function registerSmartVault(address smartVault, SmartVaultRegistrationForm calldata registrationForm) external;\n}\n\ninterface ISmartVaultManager is ISmartVaultRegistry {\n    /* ========== EXTERNAL VIEW FUNCTIONS ========== */\n\n    /**\n     * @dev Check whether all DHW runs were completed for given flush index\n     */\n    function areAllDhwRunsCompleted(address smartVault, uint256 flushIndex) external view returns (bool);\n\n    /**\n     * @notice Get smartVault fees\n     * @param smartVault Smart vault.\n     * @return SmartVaultFees\n     */\n    function getSmartVaultFees(address smartVault) external view returns (SmartVaultFees memory);\n\n    /**\n     * @notice Gets do-hard-work indexes.\n     * @param smartVault Smart vault.\n     * @param flushIndex Flush index.\n     * @return dhwIndexes Do-hard-work indexes for flush index of the smart vault.\n     */\n    function dhwIndexes(address smartVault, uint256 flushIndex) external view returns (uint16a16 dhwIndexes);\n\n    /**\n     * @notice Gets latest flush index for a smart vault.\n     * @param smartVault Smart vault.\n     * @return flushIndex Latest flush index for the smart vault.\n     */\n    function getLatestFlushIndex(address smartVault) external view returns (uint256 flushIndex);\n\n    /**\n     * @notice Gets strategy allocation for a smart vault.\n     * @param smartVault Smart vault.\n     * @return allocation Strategy allocation for the smart vault.\n     */\n    function allocations(address smartVault) external view returns (uint16a16 allocation);\n\n    /**\n     * @notice Gets strategies used by a smart vault.\n     * @param smartVault Smart vault.\n     * @return strategies Strategies for the smart vault.\n     */\n    function strategies(address smartVault) external view returns (address[] memory strategies);\n\n    /**\n     * @notice Gets asest group used by a smart vault.\n     * @param smartVault Smart vault.\n     * @return assetGroupId ID of the asset group used by the smart vault.\n     */\n    function assetGroupId(address smartVault) external view returns (uint256 assetGroupId);\n\n    /**\n     * @notice Gets required deposit ratio for a smart vault.\n     * @param smartVault Smart vault.\n     * @return ratio Required deposit ratio for the smart vault.\n     */\n    function depositRatio(address smartVault) external view returns (uint256[] memory ratio);\n\n    /* ========== EXTERNAL MUTATIVE FUNCTIONS ========== */\n\n    /**\n     * @notice Flushes deposits and withdrawal for the next do-hard-work.\n     * @param smartVault Smart vault to flush.\n     */\n    function flushSmartVault(address smartVault) external;\n\n    /**\n     * @notice Reallocates smart vaults.\n     * @dev Requirements:\n     * - caller must have a ROLE_REALLOCATOR role\n     * - smart vaults must be registered\n     * - smart vaults must use same asset group\n     * - strategies must represent a set of strategies used by smart vaults\n     * @param reallocateParams Paramaters for reallocation.\n     */\n    function reallocate(ReallocateParamBag calldata reallocateParams) external;\n\n    /**\n     * @notice Removes strategy from vaults, and optionally removes it from the system as well.\n     * @dev Requirements:\n     * - caller must have role ROLE_SPOOL_ADMIN\n     * - the strategy has to be active (requires ROLE_STRATEGY)\n     * @param strategy Strategy address to remove.\n     * @param vaults Array of vaults from which to remove the strategy\n     * @param disableStrategy Also disable the strategy across the system\n     */\n    function removeStrategyFromVaults(address strategy, address[] calldata vaults, bool disableStrategy) external;\n\n    /**\n     * @notice Syncs smart vault with strategies.\n     * @param smartVault Smart vault to sync.\n     * @param revertIfError If true, sync will revert if every flush index cannot be synced; if false it will sync all flush indexes it can.\n     */\n    function syncSmartVault(address smartVault, bool revertIfError) external;\n\n    /**\n     * @dev Calculate number of SVTs that haven't been synced yet after DHW runs\n     * DHW has minted strategy shares, but vaults haven't claimed them yet.\n     * Includes management fees (percentage of assets under management, distributed throughout a year) and deposit fees .\n     * Invariants:\n     * - There can't be more than once un-synced flush index per vault at any given time.\n     * - Flush index can't be synced, if all DHWs haven't been completed yet.\n     *\n     * Can be used to retrieve the number of SSTs the vault would claim during sync.\n     * @param smartVault SmartVault address\n     * @return oldTotalSVTs Amount of SVTs before sync\n     * @return mintedSVTs Amount of SVTs minted during sync\n     * @return feeSVTs Amount of SVTs pertaining to fees\n     * @return sstShares Amount of SSTs claimed per strategy\n     */\n    function simulateSync(address smartVault)\n        external\n        view\n        returns (uint256 oldTotalSVTs, uint256 mintedSVTs, uint256 feeSVTs, uint256[] calldata sstShares);\n\n    /**\n     * @dev Simulate sync when burning dNFTs and return their svts value.\n     *\n     * @param smartVault SmartVault address\n     * @param userAddress User address that owns dNFTs\n     * @param nftIds Ids of dNFTs\n     * @return svts Amount of svts user would get if he burns dNFTs\n     */\n    function simulateSyncWithBurn(address smartVault, address userAddress, uint256[] calldata nftIds)\n        external\n        view\n        returns (uint256 svts);\n\n    /**\n     * @notice Instantly redeems smart vault shares for assets.\n     * @param bag Parameters for fast redeemal.\n     * @param withdrawalSlippages Slippages guarding redeemal.\n     * @return withdrawnAssets Amount of assets withdrawn.\n     */\n    function redeemFast(RedeemBag calldata bag, uint256[][] calldata withdrawalSlippages)\n        external\n        returns (uint256[] memory withdrawnAssets);\n\n    /**\n     * @notice Simulates redeem fast of smart vault shares.\n     * @dev Should only be run by address zero to simulate the redeemal and parse logs.\n     * @param bag Parameters for fast redeemal.\n     * @param withdrawalSlippages Slippages guarding redeemal.\n     * @param redeemer Address of a user to simulate redeem for.\n     * @return withdrawnAssets Amount of assets withdrawn.\n     */\n    function redeemFastView(RedeemBag calldata bag, uint256[][] calldata withdrawalSlippages, address redeemer)\n        external\n        returns (uint256[] memory withdrawnAssets);\n\n    /**\n     * @notice Claims withdrawal of assets by burning withdrawal NFT.\n     * @dev Requirements:\n     * - withdrawal NFT must be valid\n     * @param smartVault Address of the smart vault that issued the withdrawal NFT.\n     * @param nftIds ID of withdrawal NFT to burn.\n     * @param nftAmounts amounts\n     * @param receiver Receiver of claimed assets.\n     * @return assetAmounts Amounts of assets claimed.\n     * @return assetGroupId ID of the asset group.\n     */\n    function claimWithdrawal(\n        address smartVault,\n        uint256[] calldata nftIds,\n        uint256[] calldata nftAmounts,\n        address receiver\n    ) external returns (uint256[] memory assetAmounts, uint256 assetGroupId);\n\n    /**\n     * @notice Claims smart vault tokens by burning the deposit NFT.\n     * @dev Requirements:\n     * - deposit NFT must be valid\n     * - flush must be synced\n     * @param smartVaultAddress Address of the smart vault that issued the deposit NFT.\n     * @param nftIds ID of the deposit NFT to burn.\n     * @param nftAmounts amounts\n     * @return claimedAmount Amount of smart vault tokens claimed.\n     */\n    function claimSmartVaultTokens(address smartVaultAddress, uint256[] calldata nftIds, uint256[] calldata nftAmounts)\n        external\n        returns (uint256 claimedAmount);\n\n    /**\n     * @notice Initiates a withdrawal process and mints a withdrawal NFT. Once all DHWs are executed, user can\n     * use the withdrawal NFT to claim the assets.\n     * Optionally, caller can pass a list of deposit NFTs to unwrap.\n     * @param bag smart vault address, amount of shares to redeem, nft ids and amounts to burn\n     * @param receiver address that will receive the withdrawal NFT\n     * @param doFlush optionally flush the smart vault\n     * @return receipt ID of the receipt withdrawal NFT.\n     */\n    function redeem(RedeemBag calldata bag, address receiver, bool doFlush) external returns (uint256 receipt);\n\n    /**\n     * @notice Initiates a withdrawal process and mints a withdrawal NFT. Once all DHWs are executed, user can\n     * use the withdrawal NFT to claim the assets.\n     * Optionally, caller can pass a list of deposit NFTs to unwrap.\n     * @param bag smart vault address, amount of shares to redeem, nft ids and amounts to burn\n     * @param owner address that owns the shares to be redeemed and will receive the withdrawal NFT\n     * @param doFlush optionally flush the smart vault\n     * @return receipt ID of the receipt withdrawal NFT.\n     */\n    function redeemFor(RedeemBag calldata bag, address owner, bool doFlush) external returns (uint256 receipt);\n\n    /**\n     * @notice Initiated a deposit and mints a deposit NFT. Once all DHWs are executed, user can\n     * unwrap the deposit NDF and claim his SVTs.\n     * @param bag smartVault address, assets, NFT receiver address, referral address, doFlush\n     * @return receipt ID of the receipt deposit NFT.\n     */\n    function deposit(DepositBag calldata bag) external returns (uint256 receipt);\n\n    /**\n     * @notice Recovers pending deposits from smart vault to emergency wallet.\n     * @dev Requirements:\n     * - caller must have role ROLE_SPOOL_ADMIN\n     * - all strategies of the smart vault need to be ghost strategies\n     * @param smartVault Smart vault from which to recover pending deposits.\n     */\n    function recoverPendingDeposits(address smartVault) external;\n\n    /* ========== EVENTS ========== */\n\n    /**\n     * @notice Smart vault has been flushed\n     * @param smartVault Smart vault address\n     * @param flushIndex Flush index\n     */\n    event SmartVaultFlushed(address indexed smartVault, uint256 flushIndex);\n\n    /**\n     * @notice Smart vault has been synced\n     * @param smartVault Smart vault address\n     * @param flushIndex Flush index\n     */\n    event SmartVaultSynced(address indexed smartVault, uint256 flushIndex);\n\n    /**\n     * @notice Smart vault has been registered\n     * @param smartVault Smart vault address\n     * @param registrationForm Smart vault configuration\n     */\n    event SmartVaultRegistered(address indexed smartVault, SmartVaultRegistrationForm registrationForm);\n\n    /**\n     * @notice Strategy was removed from the vault\n     * @param strategy Strategy address\n     * @param vault Vault to remove the strategy from\n     */\n    event StrategyRemovedFromVault(address indexed strategy, address indexed vault);\n\n    /**\n     * @notice Vault was reallocation executed\n     * @param smartVault Smart vault address\n     * @param newAllocations new vault strategy allocations\n     */\n    event SmartVaultReallocated(address indexed smartVault, uint16a16 newAllocations);\n}"},"src/interfaces/ISwapper.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.17;\n\n/* ========== STRUCTS ========== */\n\n/**\n * @notice Information needed to make a swap of assets.\n * @custom:member swapTarget Contract executing the swap.\n * @custom:member token Token to be swapped.\n * @custom:member swapCallData Calldata describing the swap itself.\n */\nstruct SwapInfo {\n    address swapTarget;\n    address token;\n    bytes swapCallData;\n}\n\n/* ========== ERRORS ========== */\n\n/**\n * @notice Used when trying to do a swap via an exchange that is not allowed to execute a swap.\n * @param exchange Exchange used.\n */\nerror ExchangeNotAllowed(address exchange);\n\n/**\n * @notice Used when trying to execute a swap but are not authorized.\n * @param caller Caller of the swap method.\n */\nerror NotSwapper(address caller);\n\n/* ========== INTERFACES ========== */\n\ninterface ISwapper {\n    /* ========== EVENTS ========== */\n\n    /**\n     * @notice Emitted when the exchange allowlist is updated.\n     * @param exchange Exchange that was updated.\n     * @param isAllowed Whether the exchange is allowed to be used in a swap or not after the update.\n     */\n    event ExchangeAllowlistUpdated(address indexed exchange, bool isAllowed);\n\n    event Swapped(\n        address indexed receiver, address[] tokensIn, address[] tokensOut, uint256[] amountsIn, uint256[] amountsOut\n    );\n\n    /* ========== EXTERNAL MUTATIVE FUNCTIONS ========== */\n\n    /**\n     * @notice Performs a swap of tokens with external contracts.\n     * - deposit tokens into the swapper contract\n     * - swapper will swap tokens based on swap info provided\n     * - swapper will return unswapped tokens to the receiver\n     * @param tokensIn Addresses of tokens available for the swap.\n     * @param swapInfo Information needed to perform the swap.\n     * @param tokensOut Addresses of tokens to swap to.\n     * @param receiver Receiver of unswapped tokens.\n     * @return amountsOut Amounts of `tokensOut` sent from the swapper to the receiver.\n     */\n    function swap(\n        address[] calldata tokensIn,\n        SwapInfo[] calldata swapInfo,\n        address[] calldata tokensOut,\n        address receiver\n    ) external returns (uint256[] memory amountsOut);\n\n    /**\n     * @notice Updates list of exchanges that can be used in a swap.\n     * @dev Requirements:\n     *   - can only be called by user granted ROLE_SPOOL_ADMIN\n     *   - exchanges and allowed arrays need to be of same length\n     * @param exchanges Addresses of exchanges.\n     * @param allowed Whether an exchange is allowed to be used in a swap.\n     */\n    function updateExchangeAllowlist(address[] calldata exchanges, bool[] calldata allowed) external;\n\n    /* ========== EXTERNAL VIEW FUNCTIONS ========== */\n\n    /**\n     * @notice Checks if an exchange is allowed to be used in a swap.\n     * @param exchange Exchange to check.\n     * @return isAllowed True if the exchange is allowed to be used in a swap, false otherwise.\n     */\n    function isExchangeAllowed(address exchange) external view returns (bool isAllowed);\n}"},"src/interfaces/IWithdrawalManager.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.17;\n\nimport \"./uint16a16Lib.sol\";\n\n/**\n * @notice Used when trying to burn withdrawal NFT that was not synced yet.\n * @param id ID of the NFT.\n */\nerror WithdrawalNftNotSyncedYet(uint256 id);\n\n/**\n * @notice Base information for redeemal.\n * @custom:member smartVault Smart vault from which to redeem.\n * @custom:member shares Amount of smart vault shares to redeem.\n * @custom:member nftIds IDs of deposit NFTs to burn before redeemal.\n * @custom:member nftAmounts Amounts of NFT shares to burn.\n */\nstruct RedeemBag {\n    address smartVault;\n    uint256 shares;\n    uint256[] nftIds;\n    uint256[] nftAmounts;\n}\n\n/**\n * @notice Extra information for fast redeemal.\n * @custom:member strategies Strategies of the smart vault.\n * @custom:member assetGroup Asset group of the smart vault.\n * @custom:member assetGroupId ID of the asset group of the smart vault.\n * @custom:member redeemer Address that initiated the redeemal.\n * @custom:member withdrawalSlippages Slippages used to guard redeemal.\n */\nstruct RedeemFastExtras {\n    address[] strategies;\n    address[] assetGroup;\n    uint256 assetGroupId;\n    address redeemer;\n    uint256[][] withdrawalSlippages;\n}\n\n/**\n * @notice Extra information for redeemal.\n * @custom:member receiver Receiver of the withdraw NFT.\n * @custom:member owner Address that owns the shares being redeemed.\n * @custom:member executor Address that initiated the redeemal.\n * @custom:member flushIndex Current flush index of the smart vault.\n */\nstruct RedeemExtras {\n    address receiver;\n    address owner;\n    address executor;\n    uint256 flushIndex;\n}\n\n/**\n * @notice Information used to claim withdrawal.\n * @custom:member smartVault Smart vault from which to claim withdrawal.\n * @custom:member nftIds Withdrawal NFTs to burn while claiming withdrawal.\n * @custom:member nftAmounts Amounts of NFT shares to burn.\n * @custom:member receiver Receiver of withdrawn assets.\n * @custom:member executor Address that initiated the withdrawal claim.\n * @custom:member assetGroupId ID of the asset group of the smart vault.\n * @custom:member assetGroup Asset group of the smart vault.\n * @custom:member flushIndexToSync Next flush index to sync for the smart vault.\n */\nstruct WithdrawalClaimBag {\n    address smartVault;\n    uint256[] nftIds;\n    uint256[] nftAmounts;\n    address receiver;\n    address executor;\n    uint256 assetGroupId;\n    address[] assetGroup;\n    uint256 flushIndexToSync;\n}\n\ninterface IWithdrawalManager {\n    /**\n     * @notice User redeemed withdrawal NFTs for underlying assets\n     * @param smartVault Smart vault address\n     * @param claimer Claimer address\n     * @param nftIds NFTs to burn\n     * @param nftAmounts NFT shares to burn\n     * @param withdrawnAssets Amount of underlying assets withdrawn\n     */\n    event WithdrawalClaimed(\n        address indexed smartVault,\n        address indexed claimer,\n        uint256 assetGroupId,\n        uint256[] nftIds,\n        uint256[] nftAmounts,\n        uint256[] withdrawnAssets\n    );\n\n    /**\n     * @notice A deposit has been initiated\n     * @param smartVault Smart vault address\n     * @param owner Owner of shares to be redeemed\n     * @param redeemId Withdrawal NFT ID for this redeemal\n     * @param flushIndex Flush index the redeem was scheduled for\n     * @param shares Amount of vault shares to redeem\n     * @param receiver Beneficiary that will be able to claim the underlying assets\n     */\n    event RedeemInitiated(\n        address indexed smartVault,\n        address indexed owner,\n        uint256 indexed redeemId,\n        uint256 flushIndex,\n        uint256 shares,\n        address receiver\n    );\n\n    /**\n     * @notice A deposit has been initiated\n     * @param smartVault Smart vault address\n     * @param redeemer Redeem initiator and owner of shares\n     * @param shares Amount of vault shares to redeem\n     * @param nftIds NFTs to burn\n     * @param nftAmounts NFT shares to burn\n     * @param assetsWithdrawn Amount of underlying assets withdrawn\n     */\n    event FastRedeemInitiated(\n        address indexed smartVault,\n        address indexed redeemer,\n        uint256 shares,\n        uint256[] nftIds,\n        uint256[] nftAmounts,\n        uint256[] assetsWithdrawn\n    );\n\n    /**\n     * @notice Flushes smart vaults deposits and withdrawals to the strategies.\n     * @dev Requirements:\n     *   - can only be called by user granted ROLE_SMART_VAULT_MANAGER\n     * @param smartVault Smart vault to flush.\n     * @param flushIndex Current flush index of the smart vault.\n     * @param strategies Strategies of the smart vault.\n     * @return dhwIndexes current do-hard-work indexes of the strategies.\n     */\n    function flushSmartVault(address smartVault, uint256 flushIndex, address[] calldata strategies)\n        external\n        returns (uint16a16 dhwIndexes);\n\n    /**\n     * @notice Claims withdrawal.\n     * @dev Requirements:\n     *   - can only be called by user granted ROLE_SMART_VAULT_MANAGER\n     * @param bag Parameters for claiming withdrawal.\n     * @return withdrawnAssets Amount of assets withdrawn.\n     * @return assetGroupId ID of the asset group.\n     */\n    function claimWithdrawal(WithdrawalClaimBag calldata bag)\n        external\n        returns (uint256[] memory withdrawnAssets, uint256 assetGroupId);\n\n    /**\n     * @notice Syncs withdrawals between strategies and smart vault after do-hard-works.\n     * @dev Requirements:\n     *   - can only be called by user granted ROLE_SMART_VAULT_MANAGER\n     * @param smartVault Smart vault to sync.\n     * @param flushIndex Smart vault's flush index to sync.\n     * @param strategies Strategies of the smart vault.\n     * @param dhwIndexes_ Strategies' do-hard-work indexes to sync.\n     */\n    function syncWithdrawals(\n        address smartVault,\n        uint256 flushIndex,\n        address[] calldata strategies,\n        uint16a16 dhwIndexes_\n    ) external;\n\n    /**\n     * @notice Redeems smart vault shares.\n     * @dev Requirements:\n     *   - can only be called by user granted ROLE_SMART_VAULT_MANAGER\n     * @param bag Base information for redeemal.\n     * @param bag2 Extra information for redeemal.\n     * @return nftId ID of the withdrawal NFT.\n     */\n    function redeem(RedeemBag calldata bag, RedeemExtras calldata bag2) external returns (uint256 nftId);\n\n    /**\n     * @notice Instantly redeems smart vault shares.\n     * @dev Requirements:\n     *   - can only be called by user granted ROLE_SMART_VAULT_MANAGER\n     * @param bag Base information for redeemal.\n     * @param bag Extra information for fast redeemal.\n     * @return assets Amount of assets withdrawn.\n     */\n    function redeemFast(RedeemBag calldata bag, RedeemFastExtras memory bag2)\n        external\n        returns (uint256[] memory assets);\n}"},"src/interfaces/RequestType.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.17;\n\n/**\n * @notice Different request types for guards and actions.\n * @custom:member Deposit User is depositing into a smart vault.\n * @custom:member Withdrawal User is requesting withdrawal from a smart vault.\n * @custom:member TransferNFT User is transfering deposit or withdrawal NFT.\n * @custom:member BurnNFT User is burning deposit or withdrawal NFT.\n * @custom:member TransferSVTs User is transferring smart vault tokens.\n */\nenum RequestType {\n    Deposit,\n    Withdrawal,\n    TransferNFT,\n    BurnNFT,\n    TransferSVTs\n}"},"src/interfaces/uint16a16Lib.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\ntype uint16a16 is uint256;\n\n/**\n * @notice This library enables packing of sixteen uint16 elements into one uint256 word.\n */\nlibrary uint16a16Lib {\n    /// @notice Number of bits per stored element.\n    uint256 constant bits = 16;\n\n    /// @notice Maximal number of elements stored.\n    uint256 constant elements = 16;\n\n    // must ensure that bits * elements <= 256\n\n    /// @notice Range covered by stored element.\n    uint256 constant range = 1 << bits;\n\n    /// @notice Maximal value of stored element.\n    uint256 constant max = range - 1;\n\n    /**\n     * @notice Gets element from packed array.\n     * @param va Packed array.\n     * @param index Index of element to get.\n     * @return element Element of va stored in index index.\n     */\n    function get(uint16a16 va, uint256 index) internal pure returns (uint256) {\n        require(index < elements);\n        return (uint16a16.unwrap(va) >> (bits * index)) & max;\n    }\n\n    /**\n     * @notice Sets element to packed array.\n     * @param va Packed array.\n     * @param index Index under which to store the element\n     * @param ev Element to store.\n     * @return va Packed array with stored element.\n     */\n    function set(uint16a16 va, uint256 index, uint256 ev) internal pure returns (uint16a16) {\n        require(index < elements);\n        require(ev < range);\n        index *= bits;\n        return uint16a16.wrap((uint16a16.unwrap(va) & ~(max << index)) | (ev << index));\n    }\n\n    /**\n     * @notice Sets elements to packed array.\n     * Elements are stored continuously from index 0 onwards.\n     * @param va Packed array.\n     * @param ev Elements to store.\n     * @return va Packed array with stored elements.\n     */\n    function set(uint16a16 va, uint256[] memory ev) internal pure returns (uint16a16) {\n        for (uint256 i; i < ev.length; ++i) {\n            va = set(va, i, ev[i]);\n        }\n\n        return va;\n    }\n}"}},"settings":{"remappings":["@prb/math/=lib/prb-math/","forge-std/=lib/forge-std/src/","prb-math/=lib/prb-math/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/","@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"useLiteralContent":false,"bytecodeHash":"ipfs"},"outputSelection":{"src/CustomMetaVaultGuard.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/MetaVaultGuard.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/CommonErrors.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/Constants.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/IAssetGroupRegistry.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/IDAI.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/IDepositManager.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/IERC1155MetadataURIUpgradeable.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/IERC1155ReceiverUpgradeable.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/IERC1155Upgradeable.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/IERC165Upgradeable.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/IERC20.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/IERC20Upgradeable.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/IGuardManager.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/IMetaVault.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/IMetaVaultGuard.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/ISmartVault.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/ISmartVaultManager.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/ISwapper.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/IWithdrawalManager.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/RequestType.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]},"src/interfaces/uint16a16Lib.sol":{"":["ast"],"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"]}},"evmVersion":"london","viaIR":false,"libraries":{}},"allowPaths":["/home/shoda/Documents/Tests/POC_Toucan","/home/shoda/Documents/Tests/POC_Toucan/lib"],"basePath":"/home/shoda/Documents/Tests/POC_Toucan","includePaths":["/home/shoda/Documents/Tests/POC_Toucan"]},"output":{"contracts":{"src/CustomMetaVaultGuard.sol":{"CustomMetaVaultGuard":{"abi":[{"type":"constructor","inputs":[{"name":"smartVaultManager_","type":"address","internalType":"contract ISmartVaultManager"},{"name":"assetGroupRegistry_","type":"address","internalType":"contract IAssetGroupRegistry"},{"name":"guardManager_","type":"address","internalType":"contract IGuardManager"}],"stateMutability":"nonpayable"},{"type":"function","name":"validateSmartVault","inputs":[{"name":"asset","type":"address","internalType":"address"},{"name":"smartVault","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"validateSmartVaults","inputs":[{"name":"asset","type":"address","internalType":"address"},{"name":"smartVaults","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"error","name":"ConfigurationAddressZero","inputs":[]},{"type":"error","name":"InvalidArrayLength","inputs":[]},{"type":"error","name":"InvalidVaultAsset","inputs":[]},{"type":"error","name":"InvalidVaultDepositFee","inputs":[]},{"type":"error","name":"InvalidVaultManagementFee","inputs":[]},{"type":"error","name":"NoGuardsAllowed","inputs":[]}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISmartVaultManager\",\"name\":\"smartVaultManager_\",\"type\":\"address\"},{\"internalType\":\"contract IAssetGroupRegistry\",\"name\":\"assetGroupRegistry_\",\"type\":\"address\"},{\"internalType\":\"contract IGuardManager\",\"name\":\"guardManager_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ConfigurationAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVaultAsset\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVaultDepositFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVaultManagementFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoGuardsAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"validateSmartVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"smartVaults\",\"type\":\"address[]\"}],\"name\":\"validateSmartVaults\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidVaultAsset()\":[{\"details\":\"Only SmartVaults with the same underlying assets are supported\"}],\"InvalidVaultDepositFee()\":[{\"details\":\"Only SmartVaults with zero deposit fee are supported\"}],\"InvalidVaultManagementFee()\":[{\"details\":\"Only SmartVaults with zero management fee are supported\"}],\"NoGuardsAllowed()\":[{\"details\":\"Any guard on SmartVault is prohibited\"}]},\"kind\":\"dev\",\"methods\":{\"validateSmartVault(address,address)\":{\"params\":{\"asset\":\"for MetaVault\",\"smartVault\":\"to validate\"}},\"validateSmartVaults(address,address[])\":{\"params\":{\"asset\":\"for MetaVault\",\"smartVaults\":\"to validate\"}}},\"stateVariables\":{\"assetGroupRegistry\":{\"details\":\"AssetGroupRegistry contract\"},\"guardManager\":{\"details\":\"GuardManager contract\"},\"smartVaultManager\":{\"details\":\"SmartVaultManager contract\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ConfigurationAddressZero()\":[{\"notice\":\"Used when configuring an address with a zero address.\"}],\"InvalidArrayLength()\":[{\"notice\":\"Used when an array has invalid length.\"}]},\"kind\":\"user\",\"methods\":{\"validateSmartVault(address,address)\":{\"notice\":\"Check if given smart vault can be managed by MetaVault\"},\"validateSmartVaults(address,address[])\":{\"notice\":\"Check if given smart vault can be managed by MetaVault\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/CustomMetaVaultGuard.sol\":\"CustomMetaVaultGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/CustomMetaVaultGuard.sol\":{\"keccak256\":\"0x5c05d48e02ae4c28e6c914be3ed6eb5f781bcc1e0f4a4a09f2ce4e22c4a74a2a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c220ed2867d7c6200f3a14d42e5e231b704d837f6e76b2e4256c4a5e323e527c\",\"dweb:/ipfs/QmStX7LBgKcGEMXR2Tut5ww1GA7nAYUput6mY3NyvCg1da\"]},\"src/interfaces/CommonErrors.sol\":{\"keccak256\":\"0x549682971ab825895972b2e54192641668e7c5297f9a91da7da8eac460291ef5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://dd849f9e1198705d67052d58e54d2ff27b5737b0186f258514ab30e4c54c4082\",\"dweb:/ipfs/QmY6PT6JiP6TUyxXkFdnZfcFYxuy42MHEdkv6F8HFibDHe\"]},\"src/interfaces/Constants.sol\":{\"keccak256\":\"0x14098998da750616c31e480b982f25c37d0cb60a1c7cebafe2d17b4670a41176\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://501f5aead8ee02766e81074fa96a2584006ce26c00a9d0881bd5217a7da209eb\",\"dweb:/ipfs/QmQMHVArLXpsqyTt4XBTef9d6wkYuRPJdizrpugkdYW4G2\"]},\"src/interfaces/IAssetGroupRegistry.sol\":{\"keccak256\":\"0x86edbe236205028d1976661910e6427ffb7682b0c0469597bcb9f2f46dea241b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fa0f0363dfaebae4aaecd64e3897193768eaa9f2332836e51e292cb10707edfe\",\"dweb:/ipfs/QmNRPhsL19Td4LoyCnyfsqanDqnp3CyRfaL5Djt9r8koQk\"]},\"src/interfaces/IDAI.sol\":{\"keccak256\":\"0xdd6fc9f1d0d2bf0805cc26c4ea166268e29b75c0499754b9a4dfe9f0e8e73344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d9ead64be6897ae4983520664283012228a64b9bd308efa4009228044efd1d2\",\"dweb:/ipfs/QmaWxR4uj3zoa8FCTBnfRtKHMPkGiisgpRKpD5q28P5cMz\"]},\"src/interfaces/IDepositManager.sol\":{\"keccak256\":\"0xb48577b668b117d0ada011bfe742e5b78e2ae3e55847e200204332ef1b9abd6f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a21d1175bc5b6b92f97afe23e1de3fea6d2c1569d250da7425c3d9075251881a\",\"dweb:/ipfs/QmYB3R18Js9H3J1Pp6YNpp983MfdBqBLAQbyriqS3GYRPn\"]},\"src/interfaces/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0x62d7d4155bf57a6f6a4d3e0c1440ab7fc4b9ad8362cd2742d63e7407ba37b025\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62323e9ef7bb540b7510b5bb2612cbf03234ed91be7e34af4c3834e2431f679a\",\"dweb:/ipfs/QmaKda4NqgrX9ebw9nxwSpDAUoS5iYXR9a9AKygknoxnWg\"]},\"src/interfaces/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0x150142a3c305ac63201dd0d9c1be646e1f5ece9e768cefa41df1058bd9beecfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://908c19d8641f6072aeaa7bdaa29c204e60cad1fae33a91d222d2961301ff14dc\",\"dweb:/ipfs/QmUwFzaXmy97frCT9XdCkEr6ZcYFyQnM3kivqj1Lpq1Mfe\"]},\"src/interfaces/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xa1cf4a47b24f01053daa96f12d69b286f78944d5308051f3af480d2bed7d64c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbda5e13c955dc55963a5f7ce8ef17604b4bb35ae69b75e1550ea9d9b9ffd14e\",\"dweb:/ipfs/QmNMStubfavSKKsKJKjzXXY6FYQ69tRJdftFdq7jXtLrqE\"]},\"src/interfaces/IERC165Upgradeable.sol\":{\"keccak256\":\"0x781c3dfeacfed81d9f30ee1445f27a9c41f090ffbff6036e3f006f44281af864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7b9a2b8260eb971740c8ce4e67b30699990804f5bb4c4e80584700df7838c7\",\"dweb:/ipfs/QmWwtgynBvZre8JP42EoxDmmujnFS3Eiejd9gNK8peUB1X\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x0d3ff2c9021ae4bdb7e7b72c25841cd0ff42827509e3785eebe874fd7d03f99a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c28c3b8accead50bebed2cbd586c36c7febbca51dad31c2a560d510419b8593\",\"dweb:/ipfs/QmbdJD5RNE7HxPyg8S4PN6pAXktjXCrtLE6PZXDfig1xMZ\"]},\"src/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0x22fffb4f5262e1ae532edeaccdedc85e449af7b50754b4a1be4a6ecd170120c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8581149cafbbec49bd361c3c50cf76d1f678644c7f87c66e66ba4a6efca5956c\",\"dweb:/ipfs/QmekQhe8dpzebJQBs5Ah13iHjdd1r8ysns7q3Ef8DGW6Lo\"]},\"src/interfaces/IGuardManager.sol\":{\"keccak256\":\"0x439ed52cdf6b1886aec16f32ea6d9b8116e73cc95dbaa9b4e5111099292e840f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://81d5772d41e86bb02228cb1994dc9c0713502d53b7e56800b621d4221e1649b7\",\"dweb:/ipfs/QmX6JnSPXsnV5AHuvEv5iEf3eZtbqvUZLFPiSkQAKvpLZx\"]},\"src/interfaces/IMetaVault.sol\":{\"keccak256\":\"0x6f4513c42a46611da94a1ad2730ace80a8aadf6ef589afee99b1e4dbf128a875\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6c13bcd52615f6867c01f6b01693b11927f913e7e280a34599b7a86563d5eb39\",\"dweb:/ipfs/QmT1257NAWmrdZcULm752MybuFUWRHDBEotwxoWr1d6PJU\"]},\"src/interfaces/IMetaVaultGuard.sol\":{\"keccak256\":\"0x8f19a145b28b0e60ba18582dcadaeec69857366d3cffe0cb74ce0db39ddc536c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d0c93a33c9b43e47875acc213f125e7398741291e7ff0239cd74c99d5c7f6fe6\",\"dweb:/ipfs/QmSBSrNTgxpCb8eqkQ2THFRZDbf1m55dft5Rvy5L2jTqta\"]},\"src/interfaces/ISmartVault.sol\":{\"keccak256\":\"0xffc16686d0a28150aecd4811ed6d221f692f1897b5922561b1268a8a659eb19c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://760fb247c4c5ee5d660299ddd43d0ab088d02d12c567d6e994f8b3080e5d75d1\",\"dweb:/ipfs/Qmcg1t7WvQ4TTyufhLKWDmRukcCDhpS5jfrxwCbQqGMJfP\"]},\"src/interfaces/ISmartVaultManager.sol\":{\"keccak256\":\"0xe5074aa2199629ac655b5ade12bf64a9d170f024334638e3b22e432a122067c3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ac87a8f615bd325143c1f6f9c96ef1eee3be42a267f459a6f3da36f89e7cc86d\",\"dweb:/ipfs/QmW1G2vaiSFD4MefYCJQBBViiCYCxR6HAFUt9aNeUqc1Yr\"]},\"src/interfaces/ISwapper.sol\":{\"keccak256\":\"0x52bf0742ec1e3d68209f09622618f7f6b7adcc559c1e453dd3ee1c1537b1acde\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://498d832f14e6c8e4b316225f3a4a86fbf8172a85bd7aa090aeab3d9dbecba696\",\"dweb:/ipfs/QmSntDHhXLu1exqsbEufwVQd4QxfkjyTy71sitdtuPEWkr\"]},\"src/interfaces/IWithdrawalManager.sol\":{\"keccak256\":\"0xfa98436bff85e1abda8d43df82bdbbe6aa830f9c73f65a636c6c798dab019178\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b93b1831cd287ae3cd8b81edab326d1a99b851f89253e6a4cfd211276e422f33\",\"dweb:/ipfs/Qmbw92Mgbnim6uMncRxd47N2Gm8nLxnRVDW1zTVLUxnqb5\"]},\"src/interfaces/RequestType.sol\":{\"keccak256\":\"0xbbaf3f2dc27061b50dcd5469de28a40796da8dd5b518e13b5e893c3860ce2ce4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7f366b76d388720de2dc37b57cda39b3e483dd649a21f11a9f37cc66b8ae0751\",\"dweb:/ipfs/QmTg3TDzM7zzKbWoYTeqEki7dDhEQNzD2kzDTunMbQfoy8\"]},\"src/interfaces/uint16a16Lib.sol\":{\"keccak256\":\"0x6c8aa38e7d3d3c9ebffbfe08a5264d4e8c76ec4ef68caa4a909253ca31d2e151\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40485649f9288e095945277b23b709c4d52e9d8d50fb278ee4c1d79fef185061\",\"dweb:/ipfs/QmNeLD1UWDwzS3pht1GSVhqhUrdNSXXBbhbRcdrxTNMcUb\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"functionDebugData":{"@_79":{"entryPoint":null,"id":79,"parameterSlots":3,"returnSlots":0},"abi_decode_tuple_t_contract$_ISmartVaultManager_$2644t_contract$_IAssetGroupRegistry_$790t_contract$_IGuardManager_$1571_fromMemory":{"entryPoint":177,"id":null,"parameterSlots":2,"returnSlots":3},"validator_revert_contract_ISmartVaultManager":{"entryPoint":153,"id":null,"parameterSlots":1,"returnSlots":0}},"object":"60e060405234801561001057600080fd5b50604051610c0e380380610c0e83398101604081905261002f916100b1565b6001600160a01b038316158061004c57506001600160a01b038216155b8061005e57506001600160a01b038116155b1561007c5760405163bb0e4c3560e01b815260040160405180910390fd5b6001600160a01b0392831660805290821660a0521660c0526100fe565b6001600160a01b03811681146100ae57600080fd5b50565b6000806000606084860312156100c657600080fd5b83516100d181610099565b60208501519093506100e281610099565b60408501519092506100f381610099565b809150509250925092565b60805160a05160c051610ada61013460003960006103a601526000610202015260008181610127015261022c0152610ada6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a0c02faf1461003b578063ffa9f16a14610062575b600080fd5b61004e610049366004610462565b610075565b604051901515815260200160405180910390f35b61004e6100703660046104ea565b6100f0565b600081810361009757604051634ec4810560e11b815260040160405180910390fd5b60005b828110156100e5576100d2858585848181106100b8576100b8610523565b90506020020160208101906100cd9190610539565b610103565b50806100dd81610556565b91505061009a565b506001949350505050565b60006100fc8383610103565b9392505050565b6040516302d5048560e51b81526001600160a01b03828116600483015260009182917f00000000000000000000000000000000000000000000000000000000000000001690635aa090a090602401606060405180830381865afa15801561016e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101929190610604565b805190915061ffff16156101b9576040516301e41c4f60e41b815260040160405180910390fd5b602081015161ffff16156101e057604051634dbd83cb60e11b815260040160405180910390fd5b604051633732316b60e11b81526001600160a01b0384811660048301526000917f000000000000000000000000000000000000000000000000000000000000000082169163dd0fe31a917f000000000000000000000000000000000000000000000000000000000000000090911690636e6462d690602401602060405180830381865afa158015610275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102999190610670565b6040518263ffffffff1660e01b81526004016102b791815260200190565b600060405180830381865afa1580156102d4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102fc91908101906106b8565b90508051600114158061033b5750846001600160a01b03168160008151811061032757610327610523565b60200260200101516001600160a01b031614155b1561035957604051631b3b488360e11b815260040160405180910390fd5b61036484600061038c565b61036f84600161038c565b61037a84600261038c565b61038584600361038c565b6100e58460045b6040516328cff47b60e11b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063519fe8f6906103dd9086908690600401610757565b600060405180830381865afa1580156103fa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104229190810190610942565b8051909150156104455760405163e83c0f4f60e01b815260040160405180910390fd5b505050565b6001600160a01b038116811461045f57600080fd5b50565b60008060006040848603121561047757600080fd5b83356104828161044a565b9250602084013567ffffffffffffffff8082111561049f57600080fd5b818601915086601f8301126104b357600080fd5b8135818111156104c257600080fd5b8760208260051b85010111156104d757600080fd5b6020830194508093505050509250925092565b600080604083850312156104fd57600080fd5b82356105088161044a565b915060208301356105188161044a565b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561054b57600080fd5b81356100fc8161044a565b60006001820161057657634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156105b6576105b661057d565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156105e5576105e561057d565b604052919050565b805161ffff811681146105ff57600080fd5b919050565b60006060828403121561061657600080fd5b6040516060810181811067ffffffffffffffff821117156106395761063961057d565b604052610645836105ed565b8152610653602084016105ed565b6020820152610664604084016105ed565b60408201529392505050565b60006020828403121561068257600080fd5b5051919050565b600067ffffffffffffffff8211156106a3576106a361057d565b5060051b60200190565b80516105ff8161044a565b600060208083850312156106cb57600080fd5b825167ffffffffffffffff8111156106e257600080fd5b8301601f810185136106f357600080fd5b805161070661070182610689565b6105bc565b81815260059190911b8201830190838101908783111561072557600080fd5b928401925b8284101561074c57835161073d8161044a565b8252928401929084019061072a565b979650505050505050565b6001600160a01b0383168152604081016005831061078557634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b600067ffffffffffffffff8311156107ac576107ac61057d565b60206107c0601f8501601f191682016105bc565b91508382528484840111156107d457600080fd5b60005b848110156107f0578381015183820183015281016107d7565b506000818584010152509392505050565b600082601f83011261081257600080fd5b6100fc83835160208501610792565b80516001600160f01b0319811681146105ff57600080fd5b600082601f83011261084a57600080fd5b8151602061085a61070183610689565b82815260059290921b8401810191818101908684111561087957600080fd5b8286015b848110156108a2578051600981106108955760008081fd5b835291830191830161087d565b509695505050505050565b600082601f8301126108be57600080fd5b815160206108ce61070183610689565b82815260059290921b840181019181810190868411156108ed57600080fd5b8286015b848110156108a257805167ffffffffffffffff8111156109115760008081fd5b8701603f810189136109235760008081fd5b610934898683015160408401610792565b8452509183019183016108f1565b6000602080838503121561095557600080fd5b825167ffffffffffffffff8082111561096d57600080fd5b818501915085601f83011261098157600080fd5b815161098f61070182610689565b81815260059190911b830184019084810190888311156109ae57600080fd5b8585015b83811015610a97578051858111156109c957600080fd5b860160c0818c03601f190112156109e05760008081fd5b6109e8610593565b88820151878111156109fa5760008081fd5b610a088d8b83860101610801565b8252506040610a188184016106ad565b8a8301526060610a29818501610821565b828401526080915081840151818401525060a08084015189811115610a4e5760008081fd5b610a5c8f8d83880101610839565b838501525060c0840151915088821115610a765760008081fd5b610a848e8c848701016108ad565b90830152508452509186019186016109b2565b509897505050505050505056fea2646970667358221220d1845641e05632941f36d8555ff560f41e1ddd08e62c68906726a33ac4e365f264736f6c63430008110033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC0E CODESIZE SUB DUP1 PUSH2 0xC0E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0x4C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST DUP1 PUSH2 0x5E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0x7C JUMPI PUSH1 0x40 MLOAD PUSH4 0xBB0E4C35 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x80 MSTORE SWAP1 DUP3 AND PUSH1 0xA0 MSTORE AND PUSH1 0xC0 MSTORE PUSH2 0xFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0xD1 DUP2 PUSH2 0x99 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0xE2 DUP2 PUSH2 0x99 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0xF3 DUP2 PUSH2 0x99 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0xADA PUSH2 0x134 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x3A6 ADD MSTORE PUSH1 0x0 PUSH2 0x202 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x127 ADD MSTORE PUSH2 0x22C ADD MSTORE PUSH2 0xADA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0C02FAF EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFFA9F16A EQ PUSH2 0x62 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x462 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x70 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EA JUMP JUMPDEST PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SUB PUSH2 0x97 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4EC48105 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xE5 JUMPI PUSH2 0xD2 DUP6 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xB8 JUMPI PUSH2 0xB8 PUSH2 0x523 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x539 JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST POP DUP1 PUSH2 0xDD DUP2 PUSH2 0x556 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC DUP4 DUP4 PUSH2 0x103 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2D50485 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x5AA090A0 SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH2 0xFFFF AND ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E41C4F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0xFFFF AND ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4DBD83CB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3732316B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 DUP3 AND SWAP2 PUSH4 0xDD0FE31A SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x6E6462D6 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x275 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2FC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x6B8 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x1 EQ ISZERO DUP1 PUSH2 0x33B JUMPI POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x327 JUMPI PUSH2 0x327 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1B3B4883 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x364 DUP5 PUSH1 0x0 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x36F DUP5 PUSH1 0x1 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x37A DUP5 PUSH1 0x2 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x385 DUP5 PUSH1 0x3 PUSH2 0x38C JUMP JUMPDEST PUSH2 0xE5 DUP5 PUSH1 0x4 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x28CFF47B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x519FE8F6 SWAP1 PUSH2 0x3DD SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x757 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x422 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x942 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE83C0F4F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x482 DUP2 PUSH2 0x44A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x508 DUP2 PUSH2 0x44A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x518 DUP2 PUSH2 0x44A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFC DUP2 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x576 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x5B6 JUMPI PUSH2 0x5B6 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x5E5 JUMPI PUSH2 0x5E5 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x639 JUMPI PUSH2 0x639 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x645 DUP4 PUSH2 0x5ED JUMP JUMPDEST DUP2 MSTORE PUSH2 0x653 PUSH1 0x20 DUP5 ADD PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x664 PUSH1 0x40 DUP5 ADD PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6A3 JUMPI PUSH2 0x6A3 PUSH2 0x57D JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x5FF DUP2 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x6F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x706 PUSH2 0x701 DUP3 PUSH2 0x689 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x74C JUMPI DUP4 MLOAD PUSH2 0x73D DUP2 PUSH2 0x44A JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x72A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x785 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x57D JUMP JUMPDEST PUSH1 0x20 PUSH2 0x7C0 PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH2 0x5BC JUMP JUMPDEST SWAP2 POP DUP4 DUP3 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x7F0 JUMPI DUP4 DUP2 ADD MLOAD DUP4 DUP3 ADD DUP4 ADD MSTORE DUP2 ADD PUSH2 0x7D7 JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP6 DUP5 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC DUP4 DUP4 MLOAD PUSH1 0x20 DUP6 ADD PUSH2 0x792 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x84A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x85A PUSH2 0x701 DUP4 PUSH2 0x689 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x8A2 JUMPI DUP1 MLOAD PUSH1 0x9 DUP2 LT PUSH2 0x895 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x87D JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x8CE PUSH2 0x701 DUP4 PUSH2 0x689 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x8A2 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x911 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP8 ADD PUSH1 0x3F DUP2 ADD DUP10 SGT PUSH2 0x923 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x934 DUP10 DUP7 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD PUSH2 0x792 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x96D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x981 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x98F PUSH2 0x701 DUP3 PUSH2 0x689 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x9AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA97 JUMPI DUP1 MLOAD DUP6 DUP2 GT ISZERO PUSH2 0x9C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0xC0 DUP2 DUP13 SUB PUSH1 0x1F NOT ADD SLT ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x9E8 PUSH2 0x593 JUMP JUMPDEST DUP9 DUP3 ADD MLOAD DUP8 DUP2 GT ISZERO PUSH2 0x9FA JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA08 DUP14 DUP12 DUP4 DUP7 ADD ADD PUSH2 0x801 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x40 PUSH2 0xA18 DUP2 DUP5 ADD PUSH2 0x6AD JUMP JUMPDEST DUP11 DUP4 ADD MSTORE PUSH1 0x60 PUSH2 0xA29 DUP2 DUP6 ADD PUSH2 0x821 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE PUSH1 0x80 SWAP2 POP DUP2 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP1 DUP5 ADD MLOAD DUP10 DUP2 GT ISZERO PUSH2 0xA4E JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA5C DUP16 DUP14 DUP4 DUP9 ADD ADD PUSH2 0x839 JUMP JUMPDEST DUP4 DUP6 ADD MSTORE POP PUSH1 0xC0 DUP5 ADD MLOAD SWAP2 POP DUP9 DUP3 GT ISZERO PUSH2 0xA76 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA84 DUP15 DUP13 DUP5 DUP8 ADD ADD PUSH2 0x8AD JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE POP DUP5 MSTORE POP SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x9B2 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 JUMP COINBASE 0xE0 JUMP ORIGIN SWAP5 0x1F CALLDATASIZE 0xD8 SSTORE 0x5F CREATE2 PUSH1 0xF4 0x1E SAR 0xDD ADDMOD 0xE6 0x2C PUSH9 0x906726A33AC4E365F2 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"319:3039:0:-:0;;;786:508;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;964:41:0;;;;:87;;-1:-1:-1;;;;;;1009:42:0;;;964:87;:143;;;-1:-1:-1;;;;;;1071:36:0;;;964:143;947:204;;;1125:26;;-1:-1:-1;;;1125:26:0;;;;;;;;;;;947:204;-1:-1:-1;;;;;1161:38:0;;;;;1209:40;;;;;1259:28;;;319:3039;;14:151:22;-1:-1:-1;;;;;109:31:22;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:655::-;334:6;342;350;403:2;391:9;382:7;378:23;374:32;371:52;;;419:1;416;409:12;371:52;451:9;445:16;470:51;515:5;470:51;:::i;:::-;590:2;575:18;;569:25;540:5;;-1:-1:-1;603:53:22;569:25;603:53;:::i;:::-;727:2;712:18;;706:25;675:7;;-1:-1:-1;740:53:22;706:25;740:53;:::i;:::-;812:7;802:17;;;170:655;;;;;:::o;:::-;319:3039:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:827:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"79:86:22","statements":[{"body":{"nodeType":"YulBlock","src":"143:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"152:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"145:6:22"},"nodeType":"YulFunctionCall","src":"145:12:22"},"nodeType":"YulExpressionStatement","src":"145:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"102:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"113:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"128:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"133:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"124:3:22"},"nodeType":"YulFunctionCall","src":"124:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"137:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"120:3:22"},"nodeType":"YulFunctionCall","src":"120:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"109:3:22"},"nodeType":"YulFunctionCall","src":"109:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"99:2:22"},"nodeType":"YulFunctionCall","src":"99:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"92:6:22"},"nodeType":"YulFunctionCall","src":"92:50:22"},"nodeType":"YulIf","src":"89:70:22"}]},"name":"validator_revert_contract_ISmartVaultManager","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"68:5:22","type":""}],"src":"14:151:22"},{"body":{"nodeType":"YulBlock","src":"361:464:22","statements":[{"body":{"nodeType":"YulBlock","src":"407:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"416:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"419:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"409:6:22"},"nodeType":"YulFunctionCall","src":"409:12:22"},"nodeType":"YulExpressionStatement","src":"409:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"382:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"391:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"378:3:22"},"nodeType":"YulFunctionCall","src":"378:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"403:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"374:3:22"},"nodeType":"YulFunctionCall","src":"374:32:22"},"nodeType":"YulIf","src":"371:52:22"},{"nodeType":"YulVariableDeclaration","src":"432:29:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"451:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"445:5:22"},"nodeType":"YulFunctionCall","src":"445:16:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"436:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"515:5:22"}],"functionName":{"name":"validator_revert_contract_ISmartVaultManager","nodeType":"YulIdentifier","src":"470:44:22"},"nodeType":"YulFunctionCall","src":"470:51:22"},"nodeType":"YulExpressionStatement","src":"470:51:22"},{"nodeType":"YulAssignment","src":"530:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"540:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"530:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"554:40:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"579:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"590:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"575:3:22"},"nodeType":"YulFunctionCall","src":"575:18:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"569:5:22"},"nodeType":"YulFunctionCall","src":"569:25:22"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"558:7:22","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"648:7:22"}],"functionName":{"name":"validator_revert_contract_ISmartVaultManager","nodeType":"YulIdentifier","src":"603:44:22"},"nodeType":"YulFunctionCall","src":"603:53:22"},"nodeType":"YulExpressionStatement","src":"603:53:22"},{"nodeType":"YulAssignment","src":"665:17:22","value":{"name":"value_1","nodeType":"YulIdentifier","src":"675:7:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"665:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"691:40:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"716:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"727:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"712:3:22"},"nodeType":"YulFunctionCall","src":"712:18:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"706:5:22"},"nodeType":"YulFunctionCall","src":"706:25:22"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"695:7:22","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"785:7:22"}],"functionName":{"name":"validator_revert_contract_ISmartVaultManager","nodeType":"YulIdentifier","src":"740:44:22"},"nodeType":"YulFunctionCall","src":"740:53:22"},"nodeType":"YulExpressionStatement","src":"740:53:22"},{"nodeType":"YulAssignment","src":"802:17:22","value":{"name":"value_2","nodeType":"YulIdentifier","src":"812:7:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"802:6:22"}]}]},"name":"abi_decode_tuple_t_contract$_ISmartVaultManager_$2644t_contract$_IAssetGroupRegistry_$790t_contract$_IGuardManager_$1571_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"311:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"322:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"334:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"342:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"350:6:22","type":""}],"src":"170:655:22"}]},"contents":"{\n    { }\n    function validator_revert_contract_ISmartVaultManager(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_ISmartVaultManager_$2644t_contract$_IAssetGroupRegistry_$790t_contract$_IGuardManager_$1571_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_ISmartVaultManager(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_ISmartVaultManager(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_contract_ISmartVaultManager(value_2)\n        value2 := value_2\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{}},"deployedBytecode":{"functionDebugData":{"@_validateSmartVaultGuards_258":{"entryPoint":908,"id":258,"parameterSlots":2,"returnSlots":0},"@_validateSmartVault_230":{"entryPoint":259,"id":230,"parameterSlots":2,"returnSlots":1},"@validateSmartVault_95":{"entryPoint":240,"id":95,"parameterSlots":2,"returnSlots":1},"@validateSmartVaults_136":{"entryPoint":117,"id":136,"parameterSlots":3,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":1709,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_bytes_dyn_fromMemory":{"entryPoint":2221,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_enum_GuardParamType_dyn_fromMemory":{"entryPoint":2105,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_string_fromMemory":{"entryPoint":1938,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes2_fromMemory":{"entryPoint":2081,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":2049,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1337,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1258,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptr":{"entryPoint":1122,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":1720,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_struct$_GuardDefinition_$1503_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":2370,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_SmartVaultFees_$2119_memory_ptr_fromMemory":{"entryPoint":1540,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":1648,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint16_fromMemory":{"entryPoint":1517,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_enum$_RequestType_$2912__to_t_address_t_uint8__fromStack_reversed":{"entryPoint":1879,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1468,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_1834":{"entryPoint":1427,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":1673,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":1366,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x32":{"entryPoint":1315,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1405,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":1098,"id":null,"parameterSlots":1,"returnSlots":0}},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c8063a0c02faf1461003b578063ffa9f16a14610062575b600080fd5b61004e610049366004610462565b610075565b604051901515815260200160405180910390f35b61004e6100703660046104ea565b6100f0565b600081810361009757604051634ec4810560e11b815260040160405180910390fd5b60005b828110156100e5576100d2858585848181106100b8576100b8610523565b90506020020160208101906100cd9190610539565b610103565b50806100dd81610556565b91505061009a565b506001949350505050565b60006100fc8383610103565b9392505050565b6040516302d5048560e51b81526001600160a01b03828116600483015260009182917f00000000000000000000000000000000000000000000000000000000000000001690635aa090a090602401606060405180830381865afa15801561016e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101929190610604565b805190915061ffff16156101b9576040516301e41c4f60e41b815260040160405180910390fd5b602081015161ffff16156101e057604051634dbd83cb60e11b815260040160405180910390fd5b604051633732316b60e11b81526001600160a01b0384811660048301526000917f000000000000000000000000000000000000000000000000000000000000000082169163dd0fe31a917f000000000000000000000000000000000000000000000000000000000000000090911690636e6462d690602401602060405180830381865afa158015610275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102999190610670565b6040518263ffffffff1660e01b81526004016102b791815260200190565b600060405180830381865afa1580156102d4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102fc91908101906106b8565b90508051600114158061033b5750846001600160a01b03168160008151811061032757610327610523565b60200260200101516001600160a01b031614155b1561035957604051631b3b488360e11b815260040160405180910390fd5b61036484600061038c565b61036f84600161038c565b61037a84600261038c565b61038584600361038c565b6100e58460045b6040516328cff47b60e11b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063519fe8f6906103dd9086908690600401610757565b600060405180830381865afa1580156103fa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104229190810190610942565b8051909150156104455760405163e83c0f4f60e01b815260040160405180910390fd5b505050565b6001600160a01b038116811461045f57600080fd5b50565b60008060006040848603121561047757600080fd5b83356104828161044a565b9250602084013567ffffffffffffffff8082111561049f57600080fd5b818601915086601f8301126104b357600080fd5b8135818111156104c257600080fd5b8760208260051b85010111156104d757600080fd5b6020830194508093505050509250925092565b600080604083850312156104fd57600080fd5b82356105088161044a565b915060208301356105188161044a565b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561054b57600080fd5b81356100fc8161044a565b60006001820161057657634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156105b6576105b661057d565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156105e5576105e561057d565b604052919050565b805161ffff811681146105ff57600080fd5b919050565b60006060828403121561061657600080fd5b6040516060810181811067ffffffffffffffff821117156106395761063961057d565b604052610645836105ed565b8152610653602084016105ed565b6020820152610664604084016105ed565b60408201529392505050565b60006020828403121561068257600080fd5b5051919050565b600067ffffffffffffffff8211156106a3576106a361057d565b5060051b60200190565b80516105ff8161044a565b600060208083850312156106cb57600080fd5b825167ffffffffffffffff8111156106e257600080fd5b8301601f810185136106f357600080fd5b805161070661070182610689565b6105bc565b81815260059190911b8201830190838101908783111561072557600080fd5b928401925b8284101561074c57835161073d8161044a565b8252928401929084019061072a565b979650505050505050565b6001600160a01b0383168152604081016005831061078557634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b600067ffffffffffffffff8311156107ac576107ac61057d565b60206107c0601f8501601f191682016105bc565b91508382528484840111156107d457600080fd5b60005b848110156107f0578381015183820183015281016107d7565b506000818584010152509392505050565b600082601f83011261081257600080fd5b6100fc83835160208501610792565b80516001600160f01b0319811681146105ff57600080fd5b600082601f83011261084a57600080fd5b8151602061085a61070183610689565b82815260059290921b8401810191818101908684111561087957600080fd5b8286015b848110156108a2578051600981106108955760008081fd5b835291830191830161087d565b509695505050505050565b600082601f8301126108be57600080fd5b815160206108ce61070183610689565b82815260059290921b840181019181810190868411156108ed57600080fd5b8286015b848110156108a257805167ffffffffffffffff8111156109115760008081fd5b8701603f810189136109235760008081fd5b610934898683015160408401610792565b8452509183019183016108f1565b6000602080838503121561095557600080fd5b825167ffffffffffffffff8082111561096d57600080fd5b818501915085601f83011261098157600080fd5b815161098f61070182610689565b81815260059190911b830184019084810190888311156109ae57600080fd5b8585015b83811015610a97578051858111156109c957600080fd5b860160c0818c03601f190112156109e05760008081fd5b6109e8610593565b88820151878111156109fa5760008081fd5b610a088d8b83860101610801565b8252506040610a188184016106ad565b8a8301526060610a29818501610821565b828401526080915081840151818401525060a08084015189811115610a4e5760008081fd5b610a5c8f8d83880101610839565b838501525060c0840151915088821115610a765760008081fd5b610a848e8c848701016108ad565b90830152508452509186019186016109b2565b509897505050505050505056fea2646970667358221220d1845641e05632941f36d8555ff560f41e1ddd08e62c68906726a33ac4e365f264736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0C02FAF EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFFA9F16A EQ PUSH2 0x62 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x462 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x70 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EA JUMP JUMPDEST PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SUB PUSH2 0x97 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4EC48105 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xE5 JUMPI PUSH2 0xD2 DUP6 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xB8 JUMPI PUSH2 0xB8 PUSH2 0x523 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x539 JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST POP DUP1 PUSH2 0xDD DUP2 PUSH2 0x556 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC DUP4 DUP4 PUSH2 0x103 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2D50485 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x5AA090A0 SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH2 0xFFFF AND ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E41C4F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0xFFFF AND ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4DBD83CB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3732316B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 DUP3 AND SWAP2 PUSH4 0xDD0FE31A SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x6E6462D6 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x275 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2FC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x6B8 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x1 EQ ISZERO DUP1 PUSH2 0x33B JUMPI POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x327 JUMPI PUSH2 0x327 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1B3B4883 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x364 DUP5 PUSH1 0x0 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x36F DUP5 PUSH1 0x1 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x37A DUP5 PUSH1 0x2 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x385 DUP5 PUSH1 0x3 PUSH2 0x38C JUMP JUMPDEST PUSH2 0xE5 DUP5 PUSH1 0x4 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x28CFF47B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x519FE8F6 SWAP1 PUSH2 0x3DD SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x757 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x422 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x942 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE83C0F4F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x482 DUP2 PUSH2 0x44A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x508 DUP2 PUSH2 0x44A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x518 DUP2 PUSH2 0x44A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFC DUP2 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x576 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x5B6 JUMPI PUSH2 0x5B6 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x5E5 JUMPI PUSH2 0x5E5 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x639 JUMPI PUSH2 0x639 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x645 DUP4 PUSH2 0x5ED JUMP JUMPDEST DUP2 MSTORE PUSH2 0x653 PUSH1 0x20 DUP5 ADD PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x664 PUSH1 0x40 DUP5 ADD PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6A3 JUMPI PUSH2 0x6A3 PUSH2 0x57D JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x5FF DUP2 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x6F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x706 PUSH2 0x701 DUP3 PUSH2 0x689 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x74C JUMPI DUP4 MLOAD PUSH2 0x73D DUP2 PUSH2 0x44A JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x72A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x785 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x57D JUMP JUMPDEST PUSH1 0x20 PUSH2 0x7C0 PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH2 0x5BC JUMP JUMPDEST SWAP2 POP DUP4 DUP3 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x7F0 JUMPI DUP4 DUP2 ADD MLOAD DUP4 DUP3 ADD DUP4 ADD MSTORE DUP2 ADD PUSH2 0x7D7 JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP6 DUP5 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC DUP4 DUP4 MLOAD PUSH1 0x20 DUP6 ADD PUSH2 0x792 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x84A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x85A PUSH2 0x701 DUP4 PUSH2 0x689 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x8A2 JUMPI DUP1 MLOAD PUSH1 0x9 DUP2 LT PUSH2 0x895 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x87D JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x8CE PUSH2 0x701 DUP4 PUSH2 0x689 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x8A2 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x911 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP8 ADD PUSH1 0x3F DUP2 ADD DUP10 SGT PUSH2 0x923 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x934 DUP10 DUP7 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD PUSH2 0x792 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x96D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x981 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x98F PUSH2 0x701 DUP3 PUSH2 0x689 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x9AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA97 JUMPI DUP1 MLOAD DUP6 DUP2 GT ISZERO PUSH2 0x9C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0xC0 DUP2 DUP13 SUB PUSH1 0x1F NOT ADD SLT ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x9E8 PUSH2 0x593 JUMP JUMPDEST DUP9 DUP3 ADD MLOAD DUP8 DUP2 GT ISZERO PUSH2 0x9FA JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA08 DUP14 DUP12 DUP4 DUP7 ADD ADD PUSH2 0x801 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x40 PUSH2 0xA18 DUP2 DUP5 ADD PUSH2 0x6AD JUMP JUMPDEST DUP11 DUP4 ADD MSTORE PUSH1 0x60 PUSH2 0xA29 DUP2 DUP6 ADD PUSH2 0x821 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE PUSH1 0x80 SWAP2 POP DUP2 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP1 DUP5 ADD MLOAD DUP10 DUP2 GT ISZERO PUSH2 0xA4E JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA5C DUP16 DUP14 DUP4 DUP9 ADD ADD PUSH2 0x839 JUMP JUMPDEST DUP4 DUP6 ADD MSTORE POP PUSH1 0xC0 DUP5 ADD MLOAD SWAP2 POP DUP9 DUP3 GT ISZERO PUSH2 0xA76 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA84 DUP15 DUP13 DUP5 DUP8 ADD ADD PUSH2 0x8AD JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE POP DUP5 MSTORE POP SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x9B2 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP5 JUMP COINBASE 0xE0 JUMP ORIGIN SWAP5 0x1F CALLDATASIZE 0xD8 SSTORE 0x5F CREATE2 PUSH1 0xF4 0x1E SAR 0xDD ADDMOD 0xE6 0x2C PUSH9 0x906726A33AC4E365F2 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"319:3039:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1540:328;;;;;;:::i;:::-;;:::i;:::-;;;1070:14:22;;1063:22;1045:41;;1033:2;1018:18;1540:328:0;;;;;;;1336:162;;;;;;:::i;:::-;;:::i;1540:328::-;1647:4;1667:23;;;1663:56;;1699:20;;-1:-1:-1;;;1699:20:0;;;;;;;;;;;1663:56;1734:9;1729:112;1745:22;;;1729:112;;;1788:42;1808:5;1815:11;;1827:1;1815:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1788:19;:42::i;:::-;-1:-1:-1;1769:3:0;;;;:::i;:::-;;;;1729:112;;;-1:-1:-1;1857:4:0;;1540:328;-1:-1:-1;;;;1540:328:0:o;1336:162::-;1430:4;1453:38;1473:5;1480:10;1453:19;:38::i;:::-;1446:45;1336:162;-1:-1:-1;;;1336:162:0:o;2028:1072::-;2160:47;;-1:-1:-1;;;2160:47:0;;-1:-1:-1;;;;;2275:32:22;;;2160:47:0;;;2257:51:22;2115:4:0;;;;2160:17;:35;;;;2230:18:22;;2160:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2276:21;;2131:76;;-1:-1:-1;2276:25:0;;;2272:65;;2310:27;;-1:-1:-1;;;2310:27:0;;;;;;;;;;;2272:65;2351:18;;;;:22;;;2347:59;;2382:24;;-1:-1:-1;;;2382:24:0;;;;;;;;;;;2347:59;2481:42;;-1:-1:-1;;;2481:42:0;;-1:-1:-1;;;;;2275:32:22;;;2481:42:0;;;2257:51:22;2416:28:0;;2447:18;:33;;;;;2481:17;:30;;;;;;2230:18:22;;2481:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2447:77;;;;;;;;;;;;;4133:25:22;;4121:2;4106:18;;3987:177;2447:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2447:77:0;;;;;;;;;;;;:::i;:::-;2416:108;;2608:11;:18;2630:1;2608:23;;:50;;;;2653:5;-1:-1:-1;;;;;2635:23:0;:11;2647:1;2635:14;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2635:23:0;;;2608:50;2604:82;;;2667:19;;-1:-1:-1;;;2667:19:0;;;;;;;;;;;2604:82;2730:58;2756:10;2768:19;2730:25;:58::i;:::-;2798:61;2824:10;2836:22;2798:25;:61::i;:::-;2869:62;2895:10;2907:23;2869:25;:62::i;:::-;2941:58;2967:10;2979:19;2941:25;:58::i;:::-;3009:63;3035:10;3047:24;3106:250;3244:48;;-1:-1:-1;;;3244:48:0;;3210:31;;-1:-1:-1;;;;;3244:12:0;:23;;;;:48;;3268:10;;3280:11;;3244:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3244:48:0;;;;;;;;;;;;:::i;:::-;3306:13;;3210:82;;-1:-1:-1;3306:17:0;3302:47;;3332:17;;-1:-1:-1;;;3332:17:0;;;;;;;;;;;3302:47;3200:156;3106:250;;:::o;14:131:22:-;-1:-1:-1;;;;;89:31:22;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:750::-;245:6;253;261;314:2;302:9;293:7;289:23;285:32;282:52;;;330:1;327;320:12;282:52;369:9;356:23;388:31;413:5;388:31;:::i;:::-;438:5;-1:-1:-1;494:2:22;479:18;;466:32;517:18;547:14;;;544:34;;;574:1;571;564:12;544:34;612:6;601:9;597:22;587:32;;657:7;650:4;646:2;642:13;638:27;628:55;;679:1;676;669:12;628:55;719:2;706:16;745:2;737:6;734:14;731:34;;;761:1;758;751:12;731:34;814:7;809:2;799:6;796:1;792:14;788:2;784:23;780:32;777:45;774:65;;;835:1;832;825:12;774:65;866:2;862;858:11;848:21;;888:6;878:16;;;;;150:750;;;;;:::o;1097:388::-;1165:6;1173;1226:2;1214:9;1205:7;1201:23;1197:32;1194:52;;;1242:1;1239;1232:12;1194:52;1281:9;1268:23;1300:31;1325:5;1300:31;:::i;:::-;1350:5;-1:-1:-1;1407:2:22;1392:18;;1379:32;1420:33;1379:32;1420:33;:::i;:::-;1472:7;1462:17;;;1097:388;;;;;:::o;1490:127::-;1551:10;1546:3;1542:20;1539:1;1532:31;1582:4;1579:1;1572:15;1606:4;1603:1;1596:15;1622:247;1681:6;1734:2;1722:9;1713:7;1709:23;1705:32;1702:52;;;1750:1;1747;1740:12;1702:52;1789:9;1776:23;1808:31;1833:5;1808:31;:::i;1874:232::-;1913:3;1934:17;;;1931:140;;1993:10;1988:3;1984:20;1981:1;1974:31;2028:4;2025:1;2018:15;2056:4;2053:1;2046:15;1931:140;-1:-1:-1;2098:1:22;2087:13;;1874:232::o;2319:127::-;2380:10;2375:3;2371:20;2368:1;2361:31;2411:4;2408:1;2401:15;2435:4;2432:1;2425:15;2451:253;2523:2;2517:9;2565:4;2553:17;;2600:18;2585:34;;2621:22;;;2582:62;2579:88;;;2647:18;;:::i;:::-;2683:2;2676:22;2451:253;:::o;2709:275::-;2780:2;2774:9;2845:2;2826:13;;-1:-1:-1;;2822:27:22;2810:40;;2880:18;2865:34;;2901:22;;;2862:62;2859:88;;;2927:18;;:::i;:::-;2963:2;2956:22;2709:275;;-1:-1:-1;2709:275:22:o;2989:163::-;3067:13;;3120:6;3109:18;;3099:29;;3089:57;;3142:1;3139;3132:12;3089:57;2989:163;;;:::o;3157:636::-;3259:6;3312:2;3300:9;3291:7;3287:23;3283:32;3280:52;;;3328:1;3325;3318:12;3280:52;3361:2;3355:9;3403:2;3395:6;3391:15;3472:6;3460:10;3457:22;3436:18;3424:10;3421:34;3418:62;3415:88;;;3483:18;;:::i;:::-;3519:2;3512:22;3558:39;3587:9;3558:39;:::i;:::-;3550:6;3543:55;3631:48;3675:2;3664:9;3660:18;3631:48;:::i;:::-;3626:2;3618:6;3614:15;3607:73;3713:48;3757:2;3746:9;3742:18;3713:48;:::i;:::-;3708:2;3696:15;;3689:73;3700:6;3157:636;-1:-1:-1;;;3157:636:22:o;3798:184::-;3868:6;3921:2;3909:9;3900:7;3896:23;3892:32;3889:52;;;3937:1;3934;3927:12;3889:52;-1:-1:-1;3960:16:22;;3798:184;-1:-1:-1;3798:184:22:o;4169:183::-;4229:4;4262:18;4254:6;4251:30;4248:56;;;4284:18;;:::i;:::-;-1:-1:-1;4329:1:22;4325:14;4341:4;4321:25;;4169:183::o;4357:138::-;4436:13;;4458:31;4436:13;4458:31;:::i;4500:956::-;4595:6;4626:2;4669;4657:9;4648:7;4644:23;4640:32;4637:52;;;4685:1;4682;4675:12;4637:52;4718:9;4712:16;4751:18;4743:6;4740:30;4737:50;;;4783:1;4780;4773:12;4737:50;4806:22;;4859:4;4851:13;;4847:27;-1:-1:-1;4837:55:22;;4888:1;4885;4878:12;4837:55;4917:2;4911:9;4940:60;4956:43;4996:2;4956:43;:::i;:::-;4940:60;:::i;:::-;5034:15;;;5116:1;5112:10;;;;5104:19;;5100:28;;;5065:12;;;;5140:19;;;5137:39;;;5172:1;5169;5162:12;5137:39;5196:11;;;;5216:210;5232:6;5227:3;5224:15;5216:210;;;5305:3;5299:10;5322:31;5347:5;5322:31;:::i;:::-;5366:18;;5249:12;;;;5404;;;;5216:210;;;5445:5;4500:956;-1:-1:-1;;;;;;;4500:956:22:o;5461:441::-;-1:-1:-1;;;;;5667:32:22;;5649:51;;5637:2;5622:18;;5730:1;5719:13;;5709:144;;5775:10;5770:3;5766:20;5763:1;5756:31;5810:4;5807:1;5800:15;5838:4;5835:1;5828:15;5709:144;5889:6;5884:2;5873:9;5869:18;5862:34;5461:441;;;;;:::o;5907:537::-;5983:5;6017:18;6009:6;6006:30;6003:56;;;6039:18;;:::i;:::-;6078:4;6100:55;6145:2;6124:15;;-1:-1:-1;;6120:29:22;6116:38;;6100:55;:::i;:::-;6091:64;;6178:6;6171:5;6164:21;6218:3;6209:6;6204:3;6200:16;6197:25;6194:45;;;6235:1;6232;6225:12;6194:45;6257:1;6267:124;6281:6;6278:1;6275:13;6267:124;;;6368:11;;;6362:18;6342:13;;;6338:22;;6331:50;6296:10;;6267:124;;;6271:3;6436:1;6431:2;6422:6;6415:5;6411:18;6407:27;6400:38;;5907:537;;;;;:::o;6449:237::-;6503:5;6556:3;6549:4;6541:6;6537:17;6533:27;6523:55;;6574:1;6571;6564:12;6523:55;6596:84;6676:3;6667:6;6661:13;6654:4;6646:6;6642:17;6596:84;:::i;6691:172::-;6769:13;;-1:-1:-1;;;;;;6811:27:22;;6801:38;;6791:66;;6853:1;6850;6843:12;6868:825;6945:5;6998:3;6991:4;6983:6;6979:17;6975:27;6965:55;;7016:1;7013;7006:12;6965:55;7045:6;7039:13;7071:4;7095:60;7111:43;7151:2;7111:43;:::i;7095:60::-;7189:15;;;7275:1;7271:10;;;;7259:23;;7255:32;;;7220:12;;;;7299:15;;;7296:35;;;7327:1;7324;7317:12;7296:35;7363:2;7355:6;7351:15;7375:289;7391:6;7386:3;7383:15;7375:289;;;7464:3;7458:10;7501:1;7494:5;7491:12;7481:110;;7545:1;7574:2;7570;7563:14;7481:110;7604:18;;7642:12;;;;7408;;7375:289;;;-1:-1:-1;7682:5:22;6868:825;-1:-1:-1;;;;;;6868:825:22:o;7698:1089::-;7761:5;7814:3;7807:4;7799:6;7795:17;7791:27;7781:55;;7832:1;7829;7822:12;7781:55;7861:6;7855:13;7887:4;7911:60;7927:43;7967:2;7927:43;:::i;7911:60::-;8005:15;;;8091:1;8087:10;;;;8075:23;;8071:32;;;8036:12;;;;8115:15;;;8112:35;;;8143:1;8140;8133:12;8112:35;8179:2;8171:6;8167:15;8191:567;8207:6;8202:3;8199:15;8191:567;;;8286:3;8280:10;8322:18;8309:11;8306:35;8303:125;;;8382:1;8411:2;8407;8400:14;8303:125;8451:24;;8510:2;8502:11;;8498:21;-1:-1:-1;8488:119:22;;8561:1;8590:2;8586;8579:14;8488:119;8632:83;8711:3;8705:2;8701;8697:11;8691:18;8686:2;8682;8678:11;8632:83;:::i;:::-;8620:96;;-1:-1:-1;8736:12:22;;;;8224;;8191:567;;8792:2414;8920:6;8951:2;8994;8982:9;8973:7;8969:23;8965:32;8962:52;;;9010:1;9007;9000:12;8962:52;9043:9;9037:16;9072:18;9113:2;9105:6;9102:14;9099:34;;;9129:1;9126;9119:12;9099:34;9167:6;9156:9;9152:22;9142:32;;9212:7;9205:4;9201:2;9197:13;9193:27;9183:55;;9234:1;9231;9224:12;9183:55;9263:2;9257:9;9286:60;9302:43;9342:2;9302:43;:::i;9286:60::-;9380:15;;;9462:1;9458:10;;;;9450:19;;9446:28;;;9411:12;;;;9486:19;;;9483:39;;;9518:1;9515;9508:12;9483:39;9550:2;9546;9542:11;9562:1614;9578:6;9573:3;9570:15;9562:1614;;;9657:3;9651:10;9693:2;9680:11;9677:19;9674:39;;;9709:1;9706;9699:12;9674:39;9736:20;;9808:4;9780:16;;;-1:-1:-1;;9776:30:22;9772:41;9769:131;;;9854:1;9883:2;9879;9872:14;9769:131;9926:22;;:::i;:::-;9991:2;9987;9983:11;9977:18;10024:2;10014:8;10011:16;10008:106;;;10068:1;10097:2;10093;10086:14;10008:106;10141:65;10198:7;10193:2;10182:8;10178:2;10174:17;10170:26;10141:65;:::i;:::-;10134:5;10127:80;;10230:2;10268:42;10306:2;10302;10298:11;10268:42;:::i;:::-;10263:2;10256:5;10252:14;10245:66;10334:2;10372:41;10409:2;10405;10401:11;10372:41;:::i;:::-;10367:2;10360:5;10356:14;10349:65;10438:3;10427:14;;10491:3;10487:2;10483:12;10477:19;10472:2;10465:5;10461:14;10454:43;;10521:3;10567;10563:2;10559:12;10553:19;10601:2;10591:8;10588:16;10585:109;;;10646:1;10676:3;10671;10664:16;10585:109;10731:88;10811:7;10806:2;10795:8;10791:2;10787:17;10783:26;10731:88;:::i;:::-;10725:3;10718:5;10714:15;10707:113;;10863:4;10859:2;10855:13;10849:20;10833:36;;10898:2;10888:8;10885:16;10882:109;;;10943:1;10973:3;10968;10961:16;10882:109;11028:74;11094:7;11089:2;11078:8;11074:2;11070:17;11066:26;11028:74;:::i;:::-;11011:15;;;11004:99;-1:-1:-1;11116:18:22;;-1:-1:-1;11154:12:22;;;;9595;;9562:1614;;;-1:-1:-1;11195:5:22;8792:2414;-1:-1:-1;;;;;;;;8792:2414:22:o","generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11208:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:86:22","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:22"},"nodeType":"YulFunctionCall","src":"125:12:22"},"nodeType":"YulExpressionStatement","src":"125:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"108:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"113:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"104:3:22"},"nodeType":"YulFunctionCall","src":"104:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"117:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:22"},"nodeType":"YulFunctionCall","src":"100:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:22"},"nodeType":"YulFunctionCall","src":"89:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:22"},"nodeType":"YulFunctionCall","src":"79:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:22"},"nodeType":"YulFunctionCall","src":"72:50:22"},"nodeType":"YulIf","src":"69:70:22"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:22","type":""}],"src":"14:131:22"},{"body":{"nodeType":"YulBlock","src":"272:628:22","statements":[{"body":{"nodeType":"YulBlock","src":"318:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"327:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"330:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"320:6:22"},"nodeType":"YulFunctionCall","src":"320:12:22"},"nodeType":"YulExpressionStatement","src":"320:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"293:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"302:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"289:3:22"},"nodeType":"YulFunctionCall","src":"289:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"314:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"285:3:22"},"nodeType":"YulFunctionCall","src":"285:32:22"},"nodeType":"YulIf","src":"282:52:22"},{"nodeType":"YulVariableDeclaration","src":"343:36:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"369:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"356:12:22"},"nodeType":"YulFunctionCall","src":"356:23:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"347:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"413:5:22"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"388:24:22"},"nodeType":"YulFunctionCall","src":"388:31:22"},"nodeType":"YulExpressionStatement","src":"388:31:22"},{"nodeType":"YulAssignment","src":"428:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"438:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"428:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"452:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"483:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"494:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"479:3:22"},"nodeType":"YulFunctionCall","src":"479:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"466:12:22"},"nodeType":"YulFunctionCall","src":"466:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"456:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"507:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"517:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"511:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"562:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"571:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"574:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"564:6:22"},"nodeType":"YulFunctionCall","src":"564:12:22"},"nodeType":"YulExpressionStatement","src":"564:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"550:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"558:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"547:2:22"},"nodeType":"YulFunctionCall","src":"547:14:22"},"nodeType":"YulIf","src":"544:34:22"},{"nodeType":"YulVariableDeclaration","src":"587:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"601:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"612:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"597:3:22"},"nodeType":"YulFunctionCall","src":"597:22:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"591:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"667:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"676:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"679:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"669:6:22"},"nodeType":"YulFunctionCall","src":"669:12:22"},"nodeType":"YulExpressionStatement","src":"669:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"646:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"650:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"642:3:22"},"nodeType":"YulFunctionCall","src":"642:13:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"657:7:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"638:3:22"},"nodeType":"YulFunctionCall","src":"638:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"631:6:22"},"nodeType":"YulFunctionCall","src":"631:35:22"},"nodeType":"YulIf","src":"628:55:22"},{"nodeType":"YulVariableDeclaration","src":"692:30:22","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"719:2:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"706:12:22"},"nodeType":"YulFunctionCall","src":"706:16:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"696:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"749:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"758:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"761:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"751:6:22"},"nodeType":"YulFunctionCall","src":"751:12:22"},"nodeType":"YulExpressionStatement","src":"751:12:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"737:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"745:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"734:2:22"},"nodeType":"YulFunctionCall","src":"734:14:22"},"nodeType":"YulIf","src":"731:34:22"},{"body":{"nodeType":"YulBlock","src":"823:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"832:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"835:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"825:6:22"},"nodeType":"YulFunctionCall","src":"825:12:22"},"nodeType":"YulExpressionStatement","src":"825:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"788:2:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"796:1:22","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"799:6:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"792:3:22"},"nodeType":"YulFunctionCall","src":"792:14:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"784:3:22"},"nodeType":"YulFunctionCall","src":"784:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"809:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"780:3:22"},"nodeType":"YulFunctionCall","src":"780:32:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"814:7:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"777:2:22"},"nodeType":"YulFunctionCall","src":"777:45:22"},"nodeType":"YulIf","src":"774:65:22"},{"nodeType":"YulAssignment","src":"848:21:22","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"862:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"866:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"858:3:22"},"nodeType":"YulFunctionCall","src":"858:11:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"848:6:22"}]},{"nodeType":"YulAssignment","src":"878:16:22","value":{"name":"length","nodeType":"YulIdentifier","src":"888:6:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"878:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"222:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"233:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"245:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"253:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"261:6:22","type":""}],"src":"150:750:22"},{"body":{"nodeType":"YulBlock","src":"1000:92:22","statements":[{"nodeType":"YulAssignment","src":"1010:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1022:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1033:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1018:3:22"},"nodeType":"YulFunctionCall","src":"1018:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1010:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1052:9:22"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1077:6:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1070:6:22"},"nodeType":"YulFunctionCall","src":"1070:14:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1063:6:22"},"nodeType":"YulFunctionCall","src":"1063:22:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1045:6:22"},"nodeType":"YulFunctionCall","src":"1045:41:22"},"nodeType":"YulExpressionStatement","src":"1045:41:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"969:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"980:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"991:4:22","type":""}],"src":"905:187:22"},{"body":{"nodeType":"YulBlock","src":"1184:301:22","statements":[{"body":{"nodeType":"YulBlock","src":"1230:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1239:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1242:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1232:6:22"},"nodeType":"YulFunctionCall","src":"1232:12:22"},"nodeType":"YulExpressionStatement","src":"1232:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1205:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1214:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1201:3:22"},"nodeType":"YulFunctionCall","src":"1201:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1226:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1197:3:22"},"nodeType":"YulFunctionCall","src":"1197:32:22"},"nodeType":"YulIf","src":"1194:52:22"},{"nodeType":"YulVariableDeclaration","src":"1255:36:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1281:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1268:12:22"},"nodeType":"YulFunctionCall","src":"1268:23:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1259:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1325:5:22"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1300:24:22"},"nodeType":"YulFunctionCall","src":"1300:31:22"},"nodeType":"YulExpressionStatement","src":"1300:31:22"},{"nodeType":"YulAssignment","src":"1340:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"1350:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1340:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"1364:47:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1396:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1407:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1392:3:22"},"nodeType":"YulFunctionCall","src":"1392:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1379:12:22"},"nodeType":"YulFunctionCall","src":"1379:32:22"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1368:7:22","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1445:7:22"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1420:24:22"},"nodeType":"YulFunctionCall","src":"1420:33:22"},"nodeType":"YulExpressionStatement","src":"1420:33:22"},{"nodeType":"YulAssignment","src":"1462:17:22","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1472:7:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1462:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1142:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1153:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1165:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1173:6:22","type":""}],"src":"1097:388:22"},{"body":{"nodeType":"YulBlock","src":"1522:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1546:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1551:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1542:3:22"},"nodeType":"YulFunctionCall","src":"1542:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1532:6:22"},"nodeType":"YulFunctionCall","src":"1532:31:22"},"nodeType":"YulExpressionStatement","src":"1532:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1579:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1582:4:22","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1572:6:22"},"nodeType":"YulFunctionCall","src":"1572:15:22"},"nodeType":"YulExpressionStatement","src":"1572:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1603:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1606:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1596:6:22"},"nodeType":"YulFunctionCall","src":"1596:15:22"},"nodeType":"YulExpressionStatement","src":"1596:15:22"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"1490:127:22"},{"body":{"nodeType":"YulBlock","src":"1692:177:22","statements":[{"body":{"nodeType":"YulBlock","src":"1738:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1747:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1750:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1740:6:22"},"nodeType":"YulFunctionCall","src":"1740:12:22"},"nodeType":"YulExpressionStatement","src":"1740:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1713:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1722:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1709:3:22"},"nodeType":"YulFunctionCall","src":"1709:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1734:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1705:3:22"},"nodeType":"YulFunctionCall","src":"1705:32:22"},"nodeType":"YulIf","src":"1702:52:22"},{"nodeType":"YulVariableDeclaration","src":"1763:36:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1789:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1776:12:22"},"nodeType":"YulFunctionCall","src":"1776:23:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1767:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1833:5:22"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1808:24:22"},"nodeType":"YulFunctionCall","src":"1808:31:22"},"nodeType":"YulExpressionStatement","src":"1808:31:22"},{"nodeType":"YulAssignment","src":"1848:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"1858:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1848:6:22"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1658:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1669:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1681:6:22","type":""}],"src":"1622:247:22"},{"body":{"nodeType":"YulBlock","src":"1921:185:22","statements":[{"body":{"nodeType":"YulBlock","src":"1960:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1981:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1988:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1993:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1984:3:22"},"nodeType":"YulFunctionCall","src":"1984:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1974:6:22"},"nodeType":"YulFunctionCall","src":"1974:31:22"},"nodeType":"YulExpressionStatement","src":"1974:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2028:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2018:6:22"},"nodeType":"YulFunctionCall","src":"2018:15:22"},"nodeType":"YulExpressionStatement","src":"2018:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2053:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2056:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2046:6:22"},"nodeType":"YulFunctionCall","src":"2046:15:22"},"nodeType":"YulExpressionStatement","src":"2046:15:22"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1937:5:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1948:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1944:3:22"},"nodeType":"YulFunctionCall","src":"1944:6:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1934:2:22"},"nodeType":"YulFunctionCall","src":"1934:17:22"},"nodeType":"YulIf","src":"1931:140:22"},{"nodeType":"YulAssignment","src":"2080:20:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2091:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2098:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2087:3:22"},"nodeType":"YulFunctionCall","src":"2087:13:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2080:3:22"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1903:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1913:3:22","type":""}],"src":"1874:232:22"},{"body":{"nodeType":"YulBlock","src":"2212:102:22","statements":[{"nodeType":"YulAssignment","src":"2222:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2234:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2245:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2230:3:22"},"nodeType":"YulFunctionCall","src":"2230:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2222:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2264:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2279:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2295:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2300:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2291:3:22"},"nodeType":"YulFunctionCall","src":"2291:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"2304:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2287:3:22"},"nodeType":"YulFunctionCall","src":"2287:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2275:3:22"},"nodeType":"YulFunctionCall","src":"2275:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2257:6:22"},"nodeType":"YulFunctionCall","src":"2257:51:22"},"nodeType":"YulExpressionStatement","src":"2257:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2181:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2192:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2203:4:22","type":""}],"src":"2111:203:22"},{"body":{"nodeType":"YulBlock","src":"2351:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2368:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2380:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2371:3:22"},"nodeType":"YulFunctionCall","src":"2371:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2361:6:22"},"nodeType":"YulFunctionCall","src":"2361:31:22"},"nodeType":"YulExpressionStatement","src":"2361:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2408:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2411:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2401:6:22"},"nodeType":"YulFunctionCall","src":"2401:15:22"},"nodeType":"YulExpressionStatement","src":"2401:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2432:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2435:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2425:6:22"},"nodeType":"YulFunctionCall","src":"2425:15:22"},"nodeType":"YulExpressionStatement","src":"2425:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2319:127:22"},{"body":{"nodeType":"YulBlock","src":"2497:207:22","statements":[{"nodeType":"YulAssignment","src":"2507:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2523:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2517:5:22"},"nodeType":"YulFunctionCall","src":"2517:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2507:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"2535:35:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2557:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2565:4:22","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2553:3:22"},"nodeType":"YulFunctionCall","src":"2553:17:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2539:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2645:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2647:16:22"},"nodeType":"YulFunctionCall","src":"2647:18:22"},"nodeType":"YulExpressionStatement","src":"2647:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2588:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"2600:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2585:2:22"},"nodeType":"YulFunctionCall","src":"2585:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2624:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2636:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2621:2:22"},"nodeType":"YulFunctionCall","src":"2621:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2582:2:22"},"nodeType":"YulFunctionCall","src":"2582:62:22"},"nodeType":"YulIf","src":"2579:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2683:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2687:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2676:6:22"},"nodeType":"YulFunctionCall","src":"2676:22:22"},"nodeType":"YulExpressionStatement","src":"2676:22:22"}]},"name":"allocate_memory_1834","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2486:6:22","type":""}],"src":"2451:253:22"},{"body":{"nodeType":"YulBlock","src":"2754:230:22","statements":[{"nodeType":"YulAssignment","src":"2764:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2780:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2774:5:22"},"nodeType":"YulFunctionCall","src":"2774:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2764:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"2792:58:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2814:6:22"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2830:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"2836:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2826:3:22"},"nodeType":"YulFunctionCall","src":"2826:13:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2845:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2841:3:22"},"nodeType":"YulFunctionCall","src":"2841:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2822:3:22"},"nodeType":"YulFunctionCall","src":"2822:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2810:3:22"},"nodeType":"YulFunctionCall","src":"2810:40:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2796:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2925:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2927:16:22"},"nodeType":"YulFunctionCall","src":"2927:18:22"},"nodeType":"YulExpressionStatement","src":"2927:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2868:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"2880:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2865:2:22"},"nodeType":"YulFunctionCall","src":"2865:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2904:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2916:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2901:2:22"},"nodeType":"YulFunctionCall","src":"2901:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2862:2:22"},"nodeType":"YulFunctionCall","src":"2862:62:22"},"nodeType":"YulIf","src":"2859:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2963:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2967:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2956:6:22"},"nodeType":"YulFunctionCall","src":"2956:22:22"},"nodeType":"YulExpressionStatement","src":"2956:22:22"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2734:4:22","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2743:6:22","type":""}],"src":"2709:275:22"},{"body":{"nodeType":"YulBlock","src":"3048:104:22","statements":[{"nodeType":"YulAssignment","src":"3058:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3073:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3067:5:22"},"nodeType":"YulFunctionCall","src":"3067:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3058:5:22"}]},{"body":{"nodeType":"YulBlock","src":"3130:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3139:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3142:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3132:6:22"},"nodeType":"YulFunctionCall","src":"3132:12:22"},"nodeType":"YulExpressionStatement","src":"3132:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3102:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3113:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"3120:6:22","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3109:3:22"},"nodeType":"YulFunctionCall","src":"3109:18:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3099:2:22"},"nodeType":"YulFunctionCall","src":"3099:29:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3092:6:22"},"nodeType":"YulFunctionCall","src":"3092:37:22"},"nodeType":"YulIf","src":"3089:57:22"}]},"name":"abi_decode_uint16_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3027:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3038:5:22","type":""}],"src":"2989:163:22"},{"body":{"nodeType":"YulBlock","src":"3270:523:22","statements":[{"body":{"nodeType":"YulBlock","src":"3316:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3325:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3328:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3318:6:22"},"nodeType":"YulFunctionCall","src":"3318:12:22"},"nodeType":"YulExpressionStatement","src":"3318:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3291:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3300:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3287:3:22"},"nodeType":"YulFunctionCall","src":"3287:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3312:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3283:3:22"},"nodeType":"YulFunctionCall","src":"3283:32:22"},"nodeType":"YulIf","src":"3280:52:22"},{"nodeType":"YulVariableDeclaration","src":"3341:23:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3361:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3355:5:22"},"nodeType":"YulFunctionCall","src":"3355:9:22"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3345:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3373:33:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3395:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3403:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3391:3:22"},"nodeType":"YulFunctionCall","src":"3391:15:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3377:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3481:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3483:16:22"},"nodeType":"YulFunctionCall","src":"3483:18:22"},"nodeType":"YulExpressionStatement","src":"3483:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3424:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"3436:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3421:2:22"},"nodeType":"YulFunctionCall","src":"3421:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3460:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3472:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3457:2:22"},"nodeType":"YulFunctionCall","src":"3457:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3418:2:22"},"nodeType":"YulFunctionCall","src":"3418:62:22"},"nodeType":"YulIf","src":"3415:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3519:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3523:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3512:6:22"},"nodeType":"YulFunctionCall","src":"3512:22:22"},"nodeType":"YulExpressionStatement","src":"3512:22:22"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3550:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3587:9:22"}],"functionName":{"name":"abi_decode_uint16_fromMemory","nodeType":"YulIdentifier","src":"3558:28:22"},"nodeType":"YulFunctionCall","src":"3558:39:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3543:6:22"},"nodeType":"YulFunctionCall","src":"3543:55:22"},"nodeType":"YulExpressionStatement","src":"3543:55:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3618:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3626:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3614:3:22"},"nodeType":"YulFunctionCall","src":"3614:15:22"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3664:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3675:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3660:3:22"},"nodeType":"YulFunctionCall","src":"3660:18:22"}],"functionName":{"name":"abi_decode_uint16_fromMemory","nodeType":"YulIdentifier","src":"3631:28:22"},"nodeType":"YulFunctionCall","src":"3631:48:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3607:6:22"},"nodeType":"YulFunctionCall","src":"3607:73:22"},"nodeType":"YulExpressionStatement","src":"3607:73:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3700:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3708:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3696:3:22"},"nodeType":"YulFunctionCall","src":"3696:15:22"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3746:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3757:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3742:3:22"},"nodeType":"YulFunctionCall","src":"3742:18:22"}],"functionName":{"name":"abi_decode_uint16_fromMemory","nodeType":"YulIdentifier","src":"3713:28:22"},"nodeType":"YulFunctionCall","src":"3713:48:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3689:6:22"},"nodeType":"YulFunctionCall","src":"3689:73:22"},"nodeType":"YulExpressionStatement","src":"3689:73:22"},{"nodeType":"YulAssignment","src":"3771:16:22","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3781:6:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3771:6:22"}]}]},"name":"abi_decode_tuple_t_struct$_SmartVaultFees_$2119_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3236:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3247:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3259:6:22","type":""}],"src":"3157:636:22"},{"body":{"nodeType":"YulBlock","src":"3879:103:22","statements":[{"body":{"nodeType":"YulBlock","src":"3925:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3934:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3937:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3927:6:22"},"nodeType":"YulFunctionCall","src":"3927:12:22"},"nodeType":"YulExpressionStatement","src":"3927:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3900:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3909:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3896:3:22"},"nodeType":"YulFunctionCall","src":"3896:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3921:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3892:3:22"},"nodeType":"YulFunctionCall","src":"3892:32:22"},"nodeType":"YulIf","src":"3889:52:22"},{"nodeType":"YulAssignment","src":"3950:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3966:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3960:5:22"},"nodeType":"YulFunctionCall","src":"3960:16:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3950:6:22"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3845:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3856:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3868:6:22","type":""}],"src":"3798:184:22"},{"body":{"nodeType":"YulBlock","src":"4088:76:22","statements":[{"nodeType":"YulAssignment","src":"4098:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4121:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:22"},"nodeType":"YulFunctionCall","src":"4106:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4098:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4140:9:22"},{"name":"value0","nodeType":"YulIdentifier","src":"4151:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4133:6:22"},"nodeType":"YulFunctionCall","src":"4133:25:22"},"nodeType":"YulExpressionStatement","src":"4133:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4057:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4068:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4079:4:22","type":""}],"src":"3987:177:22"},{"body":{"nodeType":"YulBlock","src":"4238:114:22","statements":[{"body":{"nodeType":"YulBlock","src":"4282:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4284:16:22"},"nodeType":"YulFunctionCall","src":"4284:18:22"},"nodeType":"YulExpressionStatement","src":"4284:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4254:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4262:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4251:2:22"},"nodeType":"YulFunctionCall","src":"4251:30:22"},"nodeType":"YulIf","src":"4248:56:22"},{"nodeType":"YulAssignment","src":"4313:33:22","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4329:1:22","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"4332:6:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4325:3:22"},"nodeType":"YulFunctionCall","src":"4325:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"4341:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4321:3:22"},"nodeType":"YulFunctionCall","src":"4321:25:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4313:4:22"}]}]},"name":"array_allocation_size_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4218:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4229:4:22","type":""}],"src":"4169:183:22"},{"body":{"nodeType":"YulBlock","src":"4417:78:22","statements":[{"nodeType":"YulAssignment","src":"4427:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4442:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4436:5:22"},"nodeType":"YulFunctionCall","src":"4436:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4427:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4483:5:22"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4458:24:22"},"nodeType":"YulFunctionCall","src":"4458:31:22"},"nodeType":"YulExpressionStatement","src":"4458:31:22"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4396:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4407:5:22","type":""}],"src":"4357:138:22"},{"body":{"nodeType":"YulBlock","src":"4606:850:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4616:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4626:2:22","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4620:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4673:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4682:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4685:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4675:6:22"},"nodeType":"YulFunctionCall","src":"4675:12:22"},"nodeType":"YulExpressionStatement","src":"4675:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4648:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4657:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4644:3:22"},"nodeType":"YulFunctionCall","src":"4644:23:22"},{"name":"_1","nodeType":"YulIdentifier","src":"4669:2:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4640:3:22"},"nodeType":"YulFunctionCall","src":"4640:32:22"},"nodeType":"YulIf","src":"4637:52:22"},{"nodeType":"YulVariableDeclaration","src":"4698:30:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4718:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4712:5:22"},"nodeType":"YulFunctionCall","src":"4712:16:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4702:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4771:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4780:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4783:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4773:6:22"},"nodeType":"YulFunctionCall","src":"4773:12:22"},"nodeType":"YulExpressionStatement","src":"4773:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4743:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4751:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4740:2:22"},"nodeType":"YulFunctionCall","src":"4740:30:22"},"nodeType":"YulIf","src":"4737:50:22"},{"nodeType":"YulVariableDeclaration","src":"4796:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4810:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4821:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4806:3:22"},"nodeType":"YulFunctionCall","src":"4806:22:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4800:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4876:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4885:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4888:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4878:6:22"},"nodeType":"YulFunctionCall","src":"4878:12:22"},"nodeType":"YulExpressionStatement","src":"4878:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4855:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"4859:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4851:3:22"},"nodeType":"YulFunctionCall","src":"4851:13:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4866:7:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4847:3:22"},"nodeType":"YulFunctionCall","src":"4847:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4840:6:22"},"nodeType":"YulFunctionCall","src":"4840:35:22"},"nodeType":"YulIf","src":"4837:55:22"},{"nodeType":"YulVariableDeclaration","src":"4901:19:22","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4917:2:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4911:5:22"},"nodeType":"YulFunctionCall","src":"4911:9:22"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4905:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4929:71:22","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4996:2:22"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"4956:39:22"},"nodeType":"YulFunctionCall","src":"4956:43:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4940:15:22"},"nodeType":"YulFunctionCall","src":"4940:60:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4933:3:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5009:16:22","value":{"name":"dst","nodeType":"YulIdentifier","src":"5022:3:22"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"5013:5:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5041:3:22"},{"name":"_3","nodeType":"YulIdentifier","src":"5046:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5034:6:22"},"nodeType":"YulFunctionCall","src":"5034:15:22"},"nodeType":"YulExpressionStatement","src":"5034:15:22"},{"nodeType":"YulAssignment","src":"5058:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5069:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5074:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5065:3:22"},"nodeType":"YulFunctionCall","src":"5065:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5058:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"5086:42:22","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5108:2:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5116:1:22","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"5119:2:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5112:3:22"},"nodeType":"YulFunctionCall","src":"5112:10:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5104:3:22"},"nodeType":"YulFunctionCall","src":"5104:19:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5125:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5100:3:22"},"nodeType":"YulFunctionCall","src":"5100:28:22"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5090:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"5160:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5169:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5172:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5162:6:22"},"nodeType":"YulFunctionCall","src":"5162:12:22"},"nodeType":"YulExpressionStatement","src":"5162:12:22"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5143:6:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5151:7:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5140:2:22"},"nodeType":"YulFunctionCall","src":"5140:19:22"},"nodeType":"YulIf","src":"5137:39:22"},{"nodeType":"YulVariableDeclaration","src":"5185:22:22","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5200:2:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5204:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5196:3:22"},"nodeType":"YulFunctionCall","src":"5196:11:22"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5189:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"5272:154:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5286:23:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5305:3:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5299:5:22"},"nodeType":"YulFunctionCall","src":"5299:10:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5290:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5347:5:22"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5322:24:22"},"nodeType":"YulFunctionCall","src":"5322:31:22"},"nodeType":"YulExpressionStatement","src":"5322:31:22"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5373:3:22"},{"name":"value","nodeType":"YulIdentifier","src":"5378:5:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5366:6:22"},"nodeType":"YulFunctionCall","src":"5366:18:22"},"nodeType":"YulExpressionStatement","src":"5366:18:22"},{"nodeType":"YulAssignment","src":"5397:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5408:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5413:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5404:3:22"},"nodeType":"YulFunctionCall","src":"5404:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5397:3:22"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5227:3:22"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5232:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5224:2:22"},"nodeType":"YulFunctionCall","src":"5224:15:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5240:23:22","statements":[{"nodeType":"YulAssignment","src":"5242:19:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5253:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5258:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5249:3:22"},"nodeType":"YulFunctionCall","src":"5249:12:22"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5242:3:22"}]}]},"pre":{"nodeType":"YulBlock","src":"5220:3:22","statements":[]},"src":"5216:210:22"},{"nodeType":"YulAssignment","src":"5435:15:22","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"5445:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5435:6:22"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4572:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4583:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4595:6:22","type":""}],"src":"4500:956:22"},{"body":{"nodeType":"YulBlock","src":"5604:298:22","statements":[{"nodeType":"YulAssignment","src":"5614:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5626:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5637:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5622:3:22"},"nodeType":"YulFunctionCall","src":"5622:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5614:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5656:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5671:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5687:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5692:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5683:3:22"},"nodeType":"YulFunctionCall","src":"5683:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"5696:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5679:3:22"},"nodeType":"YulFunctionCall","src":"5679:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5667:3:22"},"nodeType":"YulFunctionCall","src":"5667:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5649:6:22"},"nodeType":"YulFunctionCall","src":"5649:51:22"},"nodeType":"YulExpressionStatement","src":"5649:51:22"},{"body":{"nodeType":"YulBlock","src":"5742:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5763:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5770:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5775:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5766:3:22"},"nodeType":"YulFunctionCall","src":"5766:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5756:6:22"},"nodeType":"YulFunctionCall","src":"5756:31:22"},"nodeType":"YulExpressionStatement","src":"5756:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5807:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5810:4:22","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5800:6:22"},"nodeType":"YulFunctionCall","src":"5800:15:22"},"nodeType":"YulExpressionStatement","src":"5800:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5835:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5838:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5828:6:22"},"nodeType":"YulFunctionCall","src":"5828:15:22"},"nodeType":"YulExpressionStatement","src":"5828:15:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5722:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"5730:1:22","type":"","value":"5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5719:2:22"},"nodeType":"YulFunctionCall","src":"5719:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5712:6:22"},"nodeType":"YulFunctionCall","src":"5712:21:22"},"nodeType":"YulIf","src":"5709:144:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5873:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5884:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5869:3:22"},"nodeType":"YulFunctionCall","src":"5869:18:22"},{"name":"value1","nodeType":"YulIdentifier","src":"5889:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5862:6:22"},"nodeType":"YulFunctionCall","src":"5862:34:22"},"nodeType":"YulExpressionStatement","src":"5862:34:22"}]},"name":"abi_encode_tuple_t_address_t_enum$_RequestType_$2912__to_t_address_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5565:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5576:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5584:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5595:4:22","type":""}],"src":"5461:441:22"},{"body":{"nodeType":"YulBlock","src":"5993:451:22","statements":[{"body":{"nodeType":"YulBlock","src":"6037:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6039:16:22"},"nodeType":"YulFunctionCall","src":"6039:18:22"},"nodeType":"YulExpressionStatement","src":"6039:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6009:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6017:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6006:2:22"},"nodeType":"YulFunctionCall","src":"6006:30:22"},"nodeType":"YulIf","src":"6003:56:22"},{"nodeType":"YulVariableDeclaration","src":"6068:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6078:4:22","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6072:2:22","type":""}]},{"nodeType":"YulAssignment","src":"6091:64:22","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6128:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6136:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6124:3:22"},"nodeType":"YulFunctionCall","src":"6124:15:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6145:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6141:3:22"},"nodeType":"YulFunctionCall","src":"6141:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6120:3:22"},"nodeType":"YulFunctionCall","src":"6120:29:22"},{"name":"_1","nodeType":"YulIdentifier","src":"6151:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6116:3:22"},"nodeType":"YulFunctionCall","src":"6116:38:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6100:15:22"},"nodeType":"YulFunctionCall","src":"6100:55:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6091:5:22"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6171:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"6178:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6164:6:22"},"nodeType":"YulFunctionCall","src":"6164:21:22"},"nodeType":"YulExpressionStatement","src":"6164:21:22"},{"body":{"nodeType":"YulBlock","src":"6223:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6232:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6235:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6225:6:22"},"nodeType":"YulFunctionCall","src":"6225:12:22"},"nodeType":"YulExpressionStatement","src":"6225:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6204:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"6209:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6200:3:22"},"nodeType":"YulFunctionCall","src":"6200:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"6218:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6197:2:22"},"nodeType":"YulFunctionCall","src":"6197:25:22"},"nodeType":"YulIf","src":"6194:45:22"},{"nodeType":"YulVariableDeclaration","src":"6248:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6257:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6252:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"6317:74:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6346:5:22"},{"name":"i","nodeType":"YulIdentifier","src":"6353:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6342:3:22"},"nodeType":"YulFunctionCall","src":"6342:13:22"},{"name":"_1","nodeType":"YulIdentifier","src":"6357:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6338:3:22"},"nodeType":"YulFunctionCall","src":"6338:22:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6372:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"6377:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6368:3:22"},"nodeType":"YulFunctionCall","src":"6368:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6362:5:22"},"nodeType":"YulFunctionCall","src":"6362:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6331:6:22"},"nodeType":"YulFunctionCall","src":"6331:50:22"},"nodeType":"YulExpressionStatement","src":"6331:50:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6278:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"6281:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6275:2:22"},"nodeType":"YulFunctionCall","src":"6275:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6289:19:22","statements":[{"nodeType":"YulAssignment","src":"6291:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6300:1:22"},{"name":"_1","nodeType":"YulIdentifier","src":"6303:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6296:3:22"},"nodeType":"YulFunctionCall","src":"6296:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6291:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"6271:3:22","statements":[]},"src":"6267:124:22"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6415:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"6422:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6411:3:22"},"nodeType":"YulFunctionCall","src":"6411:18:22"},{"name":"_1","nodeType":"YulIdentifier","src":"6431:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6407:3:22"},"nodeType":"YulFunctionCall","src":"6407:27:22"},{"kind":"number","nodeType":"YulLiteral","src":"6436:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6400:6:22"},"nodeType":"YulFunctionCall","src":"6400:38:22"},"nodeType":"YulExpressionStatement","src":"6400:38:22"}]},"name":"abi_decode_available_length_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5962:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"5967:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"5975:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5983:5:22","type":""}],"src":"5907:537:22"},{"body":{"nodeType":"YulBlock","src":"6513:173:22","statements":[{"body":{"nodeType":"YulBlock","src":"6562:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6571:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6574:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6564:6:22"},"nodeType":"YulFunctionCall","src":"6564:12:22"},"nodeType":"YulExpressionStatement","src":"6564:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6541:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6549:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6537:3:22"},"nodeType":"YulFunctionCall","src":"6537:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"6556:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6533:3:22"},"nodeType":"YulFunctionCall","src":"6533:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6526:6:22"},"nodeType":"YulFunctionCall","src":"6526:35:22"},"nodeType":"YulIf","src":"6523:55:22"},{"nodeType":"YulAssignment","src":"6587:93:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6646:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6654:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6642:3:22"},"nodeType":"YulFunctionCall","src":"6642:17:22"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6667:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6661:5:22"},"nodeType":"YulFunctionCall","src":"6661:13:22"},{"name":"end","nodeType":"YulIdentifier","src":"6676:3:22"}],"functionName":{"name":"abi_decode_available_length_string_fromMemory","nodeType":"YulIdentifier","src":"6596:45:22"},"nodeType":"YulFunctionCall","src":"6596:84:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6587:5:22"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6487:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"6495:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6503:5:22","type":""}],"src":"6449:237:22"},{"body":{"nodeType":"YulBlock","src":"6750:113:22","statements":[{"nodeType":"YulAssignment","src":"6760:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6775:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6769:5:22"},"nodeType":"YulFunctionCall","src":"6769:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6760:5:22"}]},{"body":{"nodeType":"YulBlock","src":"6841:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6850:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6853:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6843:6:22"},"nodeType":"YulFunctionCall","src":"6843:12:22"},"nodeType":"YulExpressionStatement","src":"6843:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6804:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6815:5:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6826:3:22","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"6831:5:22","type":"","value":"65535"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6822:3:22"},"nodeType":"YulFunctionCall","src":"6822:15:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6811:3:22"},"nodeType":"YulFunctionCall","src":"6811:27:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6801:2:22"},"nodeType":"YulFunctionCall","src":"6801:38:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6794:6:22"},"nodeType":"YulFunctionCall","src":"6794:46:22"},"nodeType":"YulIf","src":"6791:66:22"}]},"name":"abi_decode_bytes2_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6729:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6740:5:22","type":""}],"src":"6691:172:22"},{"body":{"nodeType":"YulBlock","src":"6955:738:22","statements":[{"body":{"nodeType":"YulBlock","src":"7004:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7013:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7016:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7006:6:22"},"nodeType":"YulFunctionCall","src":"7006:12:22"},"nodeType":"YulExpressionStatement","src":"7006:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6983:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6991:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6979:3:22"},"nodeType":"YulFunctionCall","src":"6979:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"6998:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6975:3:22"},"nodeType":"YulFunctionCall","src":"6975:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6968:6:22"},"nodeType":"YulFunctionCall","src":"6968:35:22"},"nodeType":"YulIf","src":"6965:55:22"},{"nodeType":"YulVariableDeclaration","src":"7029:23:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7045:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7039:5:22"},"nodeType":"YulFunctionCall","src":"7039:13:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7033:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7061:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7071:4:22","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"7065:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7084:71:22","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7151:2:22"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"7111:39:22"},"nodeType":"YulFunctionCall","src":"7111:43:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7095:15:22"},"nodeType":"YulFunctionCall","src":"7095:60:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7088:3:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7164:16:22","value":{"name":"dst","nodeType":"YulIdentifier","src":"7177:3:22"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"7168:5:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7196:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"7201:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7189:6:22"},"nodeType":"YulFunctionCall","src":"7189:15:22"},"nodeType":"YulExpressionStatement","src":"7189:15:22"},{"nodeType":"YulAssignment","src":"7213:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7224:3:22"},{"name":"_2","nodeType":"YulIdentifier","src":"7229:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7220:3:22"},"nodeType":"YulFunctionCall","src":"7220:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7213:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"7241:46:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7263:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7275:1:22","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"7278:2:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7271:3:22"},"nodeType":"YulFunctionCall","src":"7271:10:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7259:3:22"},"nodeType":"YulFunctionCall","src":"7259:23:22"},{"name":"_2","nodeType":"YulIdentifier","src":"7284:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7255:3:22"},"nodeType":"YulFunctionCall","src":"7255:32:22"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7245:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"7315:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7324:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7327:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7317:6:22"},"nodeType":"YulFunctionCall","src":"7317:12:22"},"nodeType":"YulExpressionStatement","src":"7317:12:22"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7302:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"7310:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7299:2:22"},"nodeType":"YulFunctionCall","src":"7299:15:22"},"nodeType":"YulIf","src":"7296:35:22"},{"nodeType":"YulVariableDeclaration","src":"7340:26:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7355:6:22"},{"name":"_2","nodeType":"YulIdentifier","src":"7363:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7351:3:22"},"nodeType":"YulFunctionCall","src":"7351:15:22"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7344:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"7431:233:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7445:23:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7464:3:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7458:5:22"},"nodeType":"YulFunctionCall","src":"7458:10:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7449:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"7517:74:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7535:11:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7545:1:22","type":"","value":"0"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"7539:2:22","type":""}]},{"expression":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"7570:2:22"},{"name":"_3","nodeType":"YulIdentifier","src":"7574:2:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7563:6:22"},"nodeType":"YulFunctionCall","src":"7563:14:22"},"nodeType":"YulExpressionStatement","src":"7563:14:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7494:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"7501:1:22","type":"","value":"9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7491:2:22"},"nodeType":"YulFunctionCall","src":"7491:12:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7484:6:22"},"nodeType":"YulFunctionCall","src":"7484:20:22"},"nodeType":"YulIf","src":"7481:110:22"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7611:3:22"},{"name":"value","nodeType":"YulIdentifier","src":"7616:5:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7604:6:22"},"nodeType":"YulFunctionCall","src":"7604:18:22"},"nodeType":"YulExpressionStatement","src":"7604:18:22"},{"nodeType":"YulAssignment","src":"7635:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7646:3:22"},{"name":"_2","nodeType":"YulIdentifier","src":"7651:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7642:3:22"},"nodeType":"YulFunctionCall","src":"7642:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7635:3:22"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7386:3:22"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7391:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7383:2:22"},"nodeType":"YulFunctionCall","src":"7383:15:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7399:23:22","statements":[{"nodeType":"YulAssignment","src":"7401:19:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7412:3:22"},{"name":"_2","nodeType":"YulIdentifier","src":"7417:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7408:3:22"},"nodeType":"YulFunctionCall","src":"7408:12:22"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7401:3:22"}]}]},"pre":{"nodeType":"YulBlock","src":"7379:3:22","statements":[]},"src":"7375:289:22"},{"nodeType":"YulAssignment","src":"7673:14:22","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"7682:5:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7673:5:22"}]}]},"name":"abi_decode_array_enum_GuardParamType_dyn_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6929:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"6937:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6945:5:22","type":""}],"src":"6868:825:22"},{"body":{"nodeType":"YulBlock","src":"7771:1016:22","statements":[{"body":{"nodeType":"YulBlock","src":"7820:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7829:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7832:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7822:6:22"},"nodeType":"YulFunctionCall","src":"7822:12:22"},"nodeType":"YulExpressionStatement","src":"7822:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7799:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"7807:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7795:3:22"},"nodeType":"YulFunctionCall","src":"7795:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"7814:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7791:3:22"},"nodeType":"YulFunctionCall","src":"7791:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7784:6:22"},"nodeType":"YulFunctionCall","src":"7784:35:22"},"nodeType":"YulIf","src":"7781:55:22"},{"nodeType":"YulVariableDeclaration","src":"7845:23:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7861:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7855:5:22"},"nodeType":"YulFunctionCall","src":"7855:13:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7849:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7877:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7887:4:22","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"7881:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7900:71:22","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7967:2:22"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"7927:39:22"},"nodeType":"YulFunctionCall","src":"7927:43:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7911:15:22"},"nodeType":"YulFunctionCall","src":"7911:60:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7904:3:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7980:16:22","value":{"name":"dst","nodeType":"YulIdentifier","src":"7993:3:22"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"7984:5:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8012:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"8017:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8005:6:22"},"nodeType":"YulFunctionCall","src":"8005:15:22"},"nodeType":"YulExpressionStatement","src":"8005:15:22"},{"nodeType":"YulAssignment","src":"8029:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8040:3:22"},{"name":"_2","nodeType":"YulIdentifier","src":"8045:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8036:3:22"},"nodeType":"YulFunctionCall","src":"8036:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"8029:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"8057:46:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8079:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8091:1:22","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"8094:2:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8087:3:22"},"nodeType":"YulFunctionCall","src":"8087:10:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8075:3:22"},"nodeType":"YulFunctionCall","src":"8075:23:22"},{"name":"_2","nodeType":"YulIdentifier","src":"8100:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8071:3:22"},"nodeType":"YulFunctionCall","src":"8071:32:22"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"8061:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8131:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8140:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8143:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8133:6:22"},"nodeType":"YulFunctionCall","src":"8133:12:22"},"nodeType":"YulExpressionStatement","src":"8133:12:22"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"8118:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"8126:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8115:2:22"},"nodeType":"YulFunctionCall","src":"8115:15:22"},"nodeType":"YulIf","src":"8112:35:22"},{"nodeType":"YulVariableDeclaration","src":"8156:26:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8171:6:22"},{"name":"_2","nodeType":"YulIdentifier","src":"8179:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:22"},"nodeType":"YulFunctionCall","src":"8167:15:22"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"8160:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8247:511:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8261:29:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8286:3:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8280:5:22"},"nodeType":"YulFunctionCall","src":"8280:10:22"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"8265:11:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8354:74:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8372:11:22","value":{"kind":"number","nodeType":"YulLiteral","src":"8382:1:22","type":"","value":"0"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"8376:2:22","type":""}]},{"expression":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"8407:2:22"},{"name":"_3","nodeType":"YulIdentifier","src":"8411:2:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8400:6:22"},"nodeType":"YulFunctionCall","src":"8400:14:22"},"nodeType":"YulExpressionStatement","src":"8400:14:22"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"8309:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"8322:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8306:2:22"},"nodeType":"YulFunctionCall","src":"8306:35:22"},"nodeType":"YulIf","src":"8303:125:22"},{"nodeType":"YulVariableDeclaration","src":"8441:34:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8455:6:22"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"8463:11:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8451:3:22"},"nodeType":"YulFunctionCall","src":"8451:24:22"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"8445:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8533:74:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8551:11:22","value":{"kind":"number","nodeType":"YulLiteral","src":"8561:1:22","type":"","value":"0"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"8555:2:22","type":""}]},{"expression":{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"8586:2:22"},{"name":"_5","nodeType":"YulIdentifier","src":"8590:2:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8579:6:22"},"nodeType":"YulFunctionCall","src":"8579:14:22"},"nodeType":"YulExpressionStatement","src":"8579:14:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"8506:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"8510:2:22","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8502:3:22"},"nodeType":"YulFunctionCall","src":"8502:11:22"},{"name":"end","nodeType":"YulIdentifier","src":"8515:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8498:3:22"},"nodeType":"YulFunctionCall","src":"8498:21:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8491:6:22"},"nodeType":"YulFunctionCall","src":"8491:29:22"},"nodeType":"YulIf","src":"8488:119:22"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8627:3:22"},{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"8682:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"8686:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8678:3:22"},"nodeType":"YulFunctionCall","src":"8678:11:22"},{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"8701:2:22"},{"name":"_2","nodeType":"YulIdentifier","src":"8705:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8697:3:22"},"nodeType":"YulFunctionCall","src":"8697:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8691:5:22"},"nodeType":"YulFunctionCall","src":"8691:18:22"},{"name":"end","nodeType":"YulIdentifier","src":"8711:3:22"}],"functionName":{"name":"abi_decode_available_length_string_fromMemory","nodeType":"YulIdentifier","src":"8632:45:22"},"nodeType":"YulFunctionCall","src":"8632:83:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8620:6:22"},"nodeType":"YulFunctionCall","src":"8620:96:22"},"nodeType":"YulExpressionStatement","src":"8620:96:22"},{"nodeType":"YulAssignment","src":"8729:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8740:3:22"},{"name":"_2","nodeType":"YulIdentifier","src":"8745:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8736:3:22"},"nodeType":"YulFunctionCall","src":"8736:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"8729:3:22"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8202:3:22"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"8207:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8199:2:22"},"nodeType":"YulFunctionCall","src":"8199:15:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8215:23:22","statements":[{"nodeType":"YulAssignment","src":"8217:19:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8228:3:22"},{"name":"_2","nodeType":"YulIdentifier","src":"8233:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:22"},"nodeType":"YulFunctionCall","src":"8224:12:22"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"8217:3:22"}]}]},"pre":{"nodeType":"YulBlock","src":"8195:3:22","statements":[]},"src":"8191:567:22"},{"nodeType":"YulAssignment","src":"8767:14:22","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"8776:5:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8767:5:22"}]}]},"name":"abi_decode_array_bytes_dyn_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7745:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"7753:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7761:5:22","type":""}],"src":"7698:1089:22"},{"body":{"nodeType":"YulBlock","src":"8931:2275:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8941:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"8951:2:22","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8945:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8998:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9007:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9010:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9000:6:22"},"nodeType":"YulFunctionCall","src":"9000:12:22"},"nodeType":"YulExpressionStatement","src":"9000:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8973:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"8982:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8969:3:22"},"nodeType":"YulFunctionCall","src":"8969:23:22"},{"name":"_1","nodeType":"YulIdentifier","src":"8994:2:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8965:3:22"},"nodeType":"YulFunctionCall","src":"8965:32:22"},"nodeType":"YulIf","src":"8962:52:22"},{"nodeType":"YulVariableDeclaration","src":"9023:30:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9043:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9037:5:22"},"nodeType":"YulFunctionCall","src":"9037:16:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9027:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9062:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9072:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"9066:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9117:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9126:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9129:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9119:6:22"},"nodeType":"YulFunctionCall","src":"9119:12:22"},"nodeType":"YulExpressionStatement","src":"9119:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9105:6:22"},{"name":"_2","nodeType":"YulIdentifier","src":"9113:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9102:2:22"},"nodeType":"YulFunctionCall","src":"9102:14:22"},"nodeType":"YulIf","src":"9099:34:22"},{"nodeType":"YulVariableDeclaration","src":"9142:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9156:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"9167:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9152:3:22"},"nodeType":"YulFunctionCall","src":"9152:22:22"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"9146:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9222:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9231:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9234:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9224:6:22"},"nodeType":"YulFunctionCall","src":"9224:12:22"},"nodeType":"YulExpressionStatement","src":"9224:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9201:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"9205:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9197:3:22"},"nodeType":"YulFunctionCall","src":"9197:13:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9212:7:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9193:3:22"},"nodeType":"YulFunctionCall","src":"9193:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9186:6:22"},"nodeType":"YulFunctionCall","src":"9186:35:22"},"nodeType":"YulIf","src":"9183:55:22"},{"nodeType":"YulVariableDeclaration","src":"9247:19:22","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9263:2:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9257:5:22"},"nodeType":"YulFunctionCall","src":"9257:9:22"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"9251:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9275:71:22","value":{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"9342:2:22"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"9302:39:22"},"nodeType":"YulFunctionCall","src":"9302:43:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"9286:15:22"},"nodeType":"YulFunctionCall","src":"9286:60:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"9279:3:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9355:16:22","value":{"name":"dst","nodeType":"YulIdentifier","src":"9368:3:22"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"9359:5:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9387:3:22"},{"name":"_4","nodeType":"YulIdentifier","src":"9392:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9380:6:22"},"nodeType":"YulFunctionCall","src":"9380:15:22"},"nodeType":"YulExpressionStatement","src":"9380:15:22"},{"nodeType":"YulAssignment","src":"9404:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9415:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"9420:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9411:3:22"},"nodeType":"YulFunctionCall","src":"9411:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9404:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"9432:42:22","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9454:2:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9462:1:22","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"9465:2:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9458:3:22"},"nodeType":"YulFunctionCall","src":"9458:10:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9450:3:22"},"nodeType":"YulFunctionCall","src":"9450:19:22"},{"name":"_1","nodeType":"YulIdentifier","src":"9471:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9446:3:22"},"nodeType":"YulFunctionCall","src":"9446:28:22"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"9436:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9506:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9515:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9518:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9508:6:22"},"nodeType":"YulFunctionCall","src":"9508:12:22"},"nodeType":"YulExpressionStatement","src":"9508:12:22"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"9489:6:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9497:7:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9486:2:22"},"nodeType":"YulFunctionCall","src":"9486:19:22"},"nodeType":"YulIf","src":"9483:39:22"},{"nodeType":"YulVariableDeclaration","src":"9531:22:22","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9546:2:22"},{"name":"_1","nodeType":"YulIdentifier","src":"9550:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9542:3:22"},"nodeType":"YulFunctionCall","src":"9542:11:22"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"9535:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9618:1558:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9632:29:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9657:3:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9651:5:22"},"nodeType":"YulFunctionCall","src":"9651:10:22"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"9636:11:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9697:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9706:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9709:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9699:6:22"},"nodeType":"YulFunctionCall","src":"9699:12:22"},"nodeType":"YulExpressionStatement","src":"9699:12:22"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"9680:11:22"},{"name":"_2","nodeType":"YulIdentifier","src":"9693:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9677:2:22"},"nodeType":"YulFunctionCall","src":"9677:19:22"},"nodeType":"YulIf","src":"9674:39:22"},{"nodeType":"YulVariableDeclaration","src":"9726:30:22","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9740:2:22"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"9744:11:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9736:3:22"},"nodeType":"YulFunctionCall","src":"9736:20:22"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"9730:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9826:74:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9844:11:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9854:1:22","type":"","value":"0"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"9848:2:22","type":""}]},{"expression":{"arguments":[{"name":"_6","nodeType":"YulIdentifier","src":"9879:2:22"},{"name":"_6","nodeType":"YulIdentifier","src":"9883:2:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9872:6:22"},"nodeType":"YulFunctionCall","src":"9872:14:22"},"nodeType":"YulExpressionStatement","src":"9872:14:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9784:7:22"},{"name":"_5","nodeType":"YulIdentifier","src":"9793:2:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9780:3:22"},"nodeType":"YulFunctionCall","src":"9780:16:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9802:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9798:3:22"},"nodeType":"YulFunctionCall","src":"9798:7:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9776:3:22"},"nodeType":"YulFunctionCall","src":"9776:30:22"},{"kind":"number","nodeType":"YulLiteral","src":"9808:4:22","type":"","value":"0xc0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9772:3:22"},"nodeType":"YulFunctionCall","src":"9772:41:22"},"nodeType":"YulIf","src":"9769:131:22"},{"nodeType":"YulVariableDeclaration","src":"9913:35:22","value":{"arguments":[],"functionName":{"name":"allocate_memory_1834","nodeType":"YulIdentifier","src":"9926:20:22"},"nodeType":"YulFunctionCall","src":"9926:22:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9917:5:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9961:34:22","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"9987:2:22"},{"name":"_1","nodeType":"YulIdentifier","src":"9991:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9983:3:22"},"nodeType":"YulFunctionCall","src":"9983:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9977:5:22"},"nodeType":"YulFunctionCall","src":"9977:18:22"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"9965:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"10040:74:22","statements":[{"nodeType":"YulVariableDeclaration","src":"10058:11:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10068:1:22","type":"","value":"0"},"variables":[{"name":"_7","nodeType":"YulTypedName","src":"10062:2:22","type":""}]},{"expression":{"arguments":[{"name":"_7","nodeType":"YulIdentifier","src":"10093:2:22"},{"name":"_7","nodeType":"YulIdentifier","src":"10097:2:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10086:6:22"},"nodeType":"YulFunctionCall","src":"10086:14:22"},"nodeType":"YulExpressionStatement","src":"10086:14:22"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"10014:8:22"},{"name":"_2","nodeType":"YulIdentifier","src":"10024:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10011:2:22"},"nodeType":"YulFunctionCall","src":"10011:16:22"},"nodeType":"YulIf","src":"10008:106:22"},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10134:5:22"},{"arguments":[{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"10178:2:22"},{"name":"offset_1","nodeType":"YulIdentifier","src":"10182:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10174:3:22"},"nodeType":"YulFunctionCall","src":"10174:17:22"},{"name":"_1","nodeType":"YulIdentifier","src":"10193:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10170:3:22"},"nodeType":"YulFunctionCall","src":"10170:26:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10198:7:22"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"10141:28:22"},"nodeType":"YulFunctionCall","src":"10141:65:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10127:6:22"},"nodeType":"YulFunctionCall","src":"10127:80:22"},"nodeType":"YulExpressionStatement","src":"10127:80:22"},{"nodeType":"YulVariableDeclaration","src":"10220:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10230:2:22","type":"","value":"64"},"variables":[{"name":"_8","nodeType":"YulTypedName","src":"10224:2:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10256:5:22"},{"name":"_1","nodeType":"YulIdentifier","src":"10263:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10252:3:22"},"nodeType":"YulFunctionCall","src":"10252:14:22"},{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"10302:2:22"},{"name":"_8","nodeType":"YulIdentifier","src":"10306:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10298:3:22"},"nodeType":"YulFunctionCall","src":"10298:11:22"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"10268:29:22"},"nodeType":"YulFunctionCall","src":"10268:42:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10245:6:22"},"nodeType":"YulFunctionCall","src":"10245:66:22"},"nodeType":"YulExpressionStatement","src":"10245:66:22"},{"nodeType":"YulVariableDeclaration","src":"10324:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10334:2:22","type":"","value":"96"},"variables":[{"name":"_9","nodeType":"YulTypedName","src":"10328:2:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10360:5:22"},{"name":"_8","nodeType":"YulIdentifier","src":"10367:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10356:3:22"},"nodeType":"YulFunctionCall","src":"10356:14:22"},{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"10405:2:22"},{"name":"_9","nodeType":"YulIdentifier","src":"10409:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10401:3:22"},"nodeType":"YulFunctionCall","src":"10401:11:22"}],"functionName":{"name":"abi_decode_bytes2_fromMemory","nodeType":"YulIdentifier","src":"10372:28:22"},"nodeType":"YulFunctionCall","src":"10372:41:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10349:6:22"},"nodeType":"YulFunctionCall","src":"10349:65:22"},"nodeType":"YulExpressionStatement","src":"10349:65:22"},{"nodeType":"YulVariableDeclaration","src":"10427:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10438:3:22","type":"","value":"128"},"variables":[{"name":"_10","nodeType":"YulTypedName","src":"10431:3:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10465:5:22"},{"name":"_9","nodeType":"YulIdentifier","src":"10472:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10461:3:22"},"nodeType":"YulFunctionCall","src":"10461:14:22"},{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"10487:2:22"},{"name":"_10","nodeType":"YulIdentifier","src":"10491:3:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10483:3:22"},"nodeType":"YulFunctionCall","src":"10483:12:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10477:5:22"},"nodeType":"YulFunctionCall","src":"10477:19:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10454:6:22"},"nodeType":"YulFunctionCall","src":"10454:43:22"},"nodeType":"YulExpressionStatement","src":"10454:43:22"},{"nodeType":"YulVariableDeclaration","src":"10510:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10521:3:22","type":"","value":"160"},"variables":[{"name":"_11","nodeType":"YulTypedName","src":"10514:3:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10537:35:22","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"10563:2:22"},{"name":"_11","nodeType":"YulIdentifier","src":"10567:3:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10559:3:22"},"nodeType":"YulFunctionCall","src":"10559:12:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10553:5:22"},"nodeType":"YulFunctionCall","src":"10553:19:22"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"10541:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"10617:77:22","statements":[{"nodeType":"YulVariableDeclaration","src":"10635:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10646:1:22","type":"","value":"0"},"variables":[{"name":"_12","nodeType":"YulTypedName","src":"10639:3:22","type":""}]},{"expression":{"arguments":[{"name":"_12","nodeType":"YulIdentifier","src":"10671:3:22"},{"name":"_12","nodeType":"YulIdentifier","src":"10676:3:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10664:6:22"},"nodeType":"YulFunctionCall","src":"10664:16:22"},"nodeType":"YulExpressionStatement","src":"10664:16:22"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"10591:8:22"},{"name":"_2","nodeType":"YulIdentifier","src":"10601:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10588:2:22"},"nodeType":"YulFunctionCall","src":"10588:16:22"},"nodeType":"YulIf","src":"10585:109:22"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10718:5:22"},{"name":"_10","nodeType":"YulIdentifier","src":"10725:3:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10714:3:22"},"nodeType":"YulFunctionCall","src":"10714:15:22"},{"arguments":[{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"10791:2:22"},{"name":"offset_2","nodeType":"YulIdentifier","src":"10795:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10787:3:22"},"nodeType":"YulFunctionCall","src":"10787:17:22"},{"name":"_1","nodeType":"YulIdentifier","src":"10806:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10783:3:22"},"nodeType":"YulFunctionCall","src":"10783:26:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10811:7:22"}],"functionName":{"name":"abi_decode_array_enum_GuardParamType_dyn_fromMemory","nodeType":"YulIdentifier","src":"10731:51:22"},"nodeType":"YulFunctionCall","src":"10731:88:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10707:6:22"},"nodeType":"YulFunctionCall","src":"10707:113:22"},"nodeType":"YulExpressionStatement","src":"10707:113:22"},{"nodeType":"YulVariableDeclaration","src":"10833:36:22","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"10859:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"10863:4:22","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10855:3:22"},"nodeType":"YulFunctionCall","src":"10855:13:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10849:5:22"},"nodeType":"YulFunctionCall","src":"10849:20:22"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"10837:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"10914:77:22","statements":[{"nodeType":"YulVariableDeclaration","src":"10932:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10943:1:22","type":"","value":"0"},"variables":[{"name":"_13","nodeType":"YulTypedName","src":"10936:3:22","type":""}]},{"expression":{"arguments":[{"name":"_13","nodeType":"YulIdentifier","src":"10968:3:22"},{"name":"_13","nodeType":"YulIdentifier","src":"10973:3:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10961:6:22"},"nodeType":"YulFunctionCall","src":"10961:16:22"},"nodeType":"YulExpressionStatement","src":"10961:16:22"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"10888:8:22"},{"name":"_2","nodeType":"YulIdentifier","src":"10898:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10885:2:22"},"nodeType":"YulFunctionCall","src":"10885:16:22"},"nodeType":"YulIf","src":"10882:109:22"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11015:5:22"},{"name":"_11","nodeType":"YulIdentifier","src":"11022:3:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11011:3:22"},"nodeType":"YulFunctionCall","src":"11011:15:22"},{"arguments":[{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"11074:2:22"},{"name":"offset_3","nodeType":"YulIdentifier","src":"11078:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11070:3:22"},"nodeType":"YulFunctionCall","src":"11070:17:22"},{"name":"_1","nodeType":"YulIdentifier","src":"11089:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11066:3:22"},"nodeType":"YulFunctionCall","src":"11066:26:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11094:7:22"}],"functionName":{"name":"abi_decode_array_bytes_dyn_fromMemory","nodeType":"YulIdentifier","src":"11028:37:22"},"nodeType":"YulFunctionCall","src":"11028:74:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11004:6:22"},"nodeType":"YulFunctionCall","src":"11004:99:22"},"nodeType":"YulExpressionStatement","src":"11004:99:22"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11123:3:22"},{"name":"value","nodeType":"YulIdentifier","src":"11128:5:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11116:6:22"},"nodeType":"YulFunctionCall","src":"11116:18:22"},"nodeType":"YulExpressionStatement","src":"11116:18:22"},{"nodeType":"YulAssignment","src":"11147:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11158:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"11163:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11154:3:22"},"nodeType":"YulFunctionCall","src":"11154:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"11147:3:22"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9573:3:22"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"9578:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9570:2:22"},"nodeType":"YulFunctionCall","src":"9570:15:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9586:23:22","statements":[{"nodeType":"YulAssignment","src":"9588:19:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9599:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"9604:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9595:3:22"},"nodeType":"YulFunctionCall","src":"9595:12:22"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"9588:3:22"}]}]},"pre":{"nodeType":"YulBlock","src":"9566:3:22","statements":[]},"src":"9562:1614:22"},{"nodeType":"YulAssignment","src":"11185:15:22","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"11195:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11185:6:22"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_GuardDefinition_$1503_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8897:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8908:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8920:6:22","type":""}],"src":"8792:2414:22"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_1834() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xc0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_uint16_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_SmartVaultFees_$2119_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 96)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, abi_decode_uint16_fromMemory(headStart))\n        mstore(add(memPtr, 32), abi_decode_uint16_fromMemory(add(headStart, 32)))\n        mstore(add(memPtr, 64), abi_decode_uint16_fromMemory(add(headStart, 64)))\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_encode_tuple_t_address_t_enum$_RequestType_$2912__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        if iszero(lt(value1, 5))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_available_length_string_fromMemory(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let _1 := 0x20\n        array := allocate_memory(add(and(add(length, 31), not(31)), _1))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(array, i), _1), mload(add(src, i)))\n        }\n        mstore(add(add(array, length), _1), 0)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string_fromMemory(add(offset, 0x20), mload(offset), end)\n    }\n    function abi_decode_bytes2_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, shl(240, 65535)))) { revert(0, 0) }\n    }\n    function abi_decode_array_enum_GuardParamType_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := mload(src)\n            if iszero(lt(value, 9))\n            {\n                let _3 := 0\n                revert(_3, _3)\n            }\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_bytes_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff)\n            {\n                let _3 := 0\n                revert(_3, _3)\n            }\n            let _4 := add(offset, innerOffset)\n            if iszero(slt(add(_4, 63), end))\n            {\n                let _5 := 0\n                revert(_5, _5)\n            }\n            mstore(dst, abi_decode_available_length_string_fromMemory(add(_4, 64), mload(add(_4, _2)), end))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_struct$_GuardDefinition_$1503_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, shl(5, _4)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let innerOffset := mload(src)\n            if gt(innerOffset, _2) { revert(0, 0) }\n            let _5 := add(_3, innerOffset)\n            if slt(add(sub(dataEnd, _5), not(31)), 0xc0)\n            {\n                let _6 := 0\n                revert(_6, _6)\n            }\n            let value := allocate_memory_1834()\n            let offset_1 := mload(add(_5, _1))\n            if gt(offset_1, _2)\n            {\n                let _7 := 0\n                revert(_7, _7)\n            }\n            mstore(value, abi_decode_string_fromMemory(add(add(_5, offset_1), _1), dataEnd))\n            let _8 := 64\n            mstore(add(value, _1), abi_decode_address_fromMemory(add(_5, _8)))\n            let _9 := 96\n            mstore(add(value, _8), abi_decode_bytes2_fromMemory(add(_5, _9)))\n            let _10 := 128\n            mstore(add(value, _9), mload(add(_5, _10)))\n            let _11 := 160\n            let offset_2 := mload(add(_5, _11))\n            if gt(offset_2, _2)\n            {\n                let _12 := 0\n                revert(_12, _12)\n            }\n            mstore(add(value, _10), abi_decode_array_enum_GuardParamType_dyn_fromMemory(add(add(_5, offset_2), _1), dataEnd))\n            let offset_3 := mload(add(_5, 0xc0))\n            if gt(offset_3, _2)\n            {\n                let _13 := 0\n                revert(_13, _13)\n            }\n            mstore(add(value, _11), abi_decode_array_bytes_dyn_fromMemory(add(add(_5, offset_3), _1), dataEnd))\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"immutableReferences":{"13":[{"start":295,"length":32},{"start":556,"length":32}],"17":[{"start":514,"length":32}],"21":[{"start":934,"length":32}]}},"methodIdentifiers":{"validateSmartVault(address,address)":"ffa9f16a","validateSmartVaults(address,address[])":"a0c02faf"}}}},"src/MetaVaultGuard.sol":{"MetaVaultGuard":{"abi":[{"type":"constructor","inputs":[{"name":"smartVaultManager_","type":"address","internalType":"contract ISmartVaultManager"},{"name":"assetGroupRegistry_","type":"address","internalType":"contract IAssetGroupRegistry"},{"name":"guardManager_","type":"address","internalType":"contract IGuardManager"}],"stateMutability":"nonpayable"},{"type":"function","name":"validateSmartVault","inputs":[{"name":"asset","type":"address","internalType":"address"},{"name":"smartVault","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"validateSmartVaults","inputs":[{"name":"asset","type":"address","internalType":"address"},{"name":"smartVaults","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"error","name":"ConfigurationAddressZero","inputs":[]},{"type":"error","name":"InvalidArrayLength","inputs":[]},{"type":"error","name":"InvalidVaultAsset","inputs":[]},{"type":"error","name":"InvalidVaultDepositFee","inputs":[]},{"type":"error","name":"InvalidVaultManagementFee","inputs":[]},{"type":"error","name":"NoGuardsAllowed","inputs":[]}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISmartVaultManager\",\"name\":\"smartVaultManager_\",\"type\":\"address\"},{\"internalType\":\"contract IAssetGroupRegistry\",\"name\":\"assetGroupRegistry_\",\"type\":\"address\"},{\"internalType\":\"contract IGuardManager\",\"name\":\"guardManager_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ConfigurationAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVaultAsset\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVaultDepositFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVaultManagementFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoGuardsAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"validateSmartVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"smartVaults\",\"type\":\"address[]\"}],\"name\":\"validateSmartVaults\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidVaultAsset()\":[{\"details\":\"Only SmartVaults with the same underlying assets are supported\"}],\"InvalidVaultDepositFee()\":[{\"details\":\"Only SmartVaults with zero deposit fee are supported\"}],\"InvalidVaultManagementFee()\":[{\"details\":\"Only SmartVaults with zero management fee are supported\"}],\"NoGuardsAllowed()\":[{\"details\":\"Any guard on SmartVault is prohibited\"}]},\"kind\":\"dev\",\"methods\":{\"validateSmartVault(address,address)\":{\"params\":{\"asset\":\"for MetaVault\",\"smartVault\":\"to validate\"}},\"validateSmartVaults(address,address[])\":{\"params\":{\"asset\":\"for MetaVault\",\"smartVaults\":\"to validate\"}}},\"stateVariables\":{\"assetGroupRegistry\":{\"details\":\"AssetGroupRegistry contract\"},\"guardManager\":{\"details\":\"GuardManager contract\"},\"smartVaultManager\":{\"details\":\"SmartVaultManager contract\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ConfigurationAddressZero()\":[{\"notice\":\"Used when configuring an address with a zero address.\"}],\"InvalidArrayLength()\":[{\"notice\":\"Used when an array has invalid length.\"}]},\"kind\":\"user\",\"methods\":{\"validateSmartVault(address,address)\":{\"notice\":\"Check if given smart vault can be managed by MetaVault\"},\"validateSmartVaults(address,address[])\":{\"notice\":\"Check if given smart vault can be managed by MetaVault\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MetaVaultGuard.sol\":\"MetaVaultGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/MetaVaultGuard.sol\":{\"keccak256\":\"0xfb7801ef865f1d2335f3cfcd81e89b0d55814f43af2f4b3eb6e1dd795b481ce0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a233ac358b572eed03f9d1eb569ae834b995fd9b621889f747b147cd4456dd5b\",\"dweb:/ipfs/QmV8BW1X9e3FFWPLzfQnA2RwwoZZ1cCWaTeV3QUdWx2wVG\"]},\"src/interfaces/CommonErrors.sol\":{\"keccak256\":\"0x549682971ab825895972b2e54192641668e7c5297f9a91da7da8eac460291ef5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://dd849f9e1198705d67052d58e54d2ff27b5737b0186f258514ab30e4c54c4082\",\"dweb:/ipfs/QmY6PT6JiP6TUyxXkFdnZfcFYxuy42MHEdkv6F8HFibDHe\"]},\"src/interfaces/Constants.sol\":{\"keccak256\":\"0x14098998da750616c31e480b982f25c37d0cb60a1c7cebafe2d17b4670a41176\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://501f5aead8ee02766e81074fa96a2584006ce26c00a9d0881bd5217a7da209eb\",\"dweb:/ipfs/QmQMHVArLXpsqyTt4XBTef9d6wkYuRPJdizrpugkdYW4G2\"]},\"src/interfaces/IAssetGroupRegistry.sol\":{\"keccak256\":\"0x86edbe236205028d1976661910e6427ffb7682b0c0469597bcb9f2f46dea241b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fa0f0363dfaebae4aaecd64e3897193768eaa9f2332836e51e292cb10707edfe\",\"dweb:/ipfs/QmNRPhsL19Td4LoyCnyfsqanDqnp3CyRfaL5Djt9r8koQk\"]},\"src/interfaces/IDAI.sol\":{\"keccak256\":\"0xdd6fc9f1d0d2bf0805cc26c4ea166268e29b75c0499754b9a4dfe9f0e8e73344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d9ead64be6897ae4983520664283012228a64b9bd308efa4009228044efd1d2\",\"dweb:/ipfs/QmaWxR4uj3zoa8FCTBnfRtKHMPkGiisgpRKpD5q28P5cMz\"]},\"src/interfaces/IDepositManager.sol\":{\"keccak256\":\"0xb48577b668b117d0ada011bfe742e5b78e2ae3e55847e200204332ef1b9abd6f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a21d1175bc5b6b92f97afe23e1de3fea6d2c1569d250da7425c3d9075251881a\",\"dweb:/ipfs/QmYB3R18Js9H3J1Pp6YNpp983MfdBqBLAQbyriqS3GYRPn\"]},\"src/interfaces/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0x62d7d4155bf57a6f6a4d3e0c1440ab7fc4b9ad8362cd2742d63e7407ba37b025\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62323e9ef7bb540b7510b5bb2612cbf03234ed91be7e34af4c3834e2431f679a\",\"dweb:/ipfs/QmaKda4NqgrX9ebw9nxwSpDAUoS5iYXR9a9AKygknoxnWg\"]},\"src/interfaces/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0x150142a3c305ac63201dd0d9c1be646e1f5ece9e768cefa41df1058bd9beecfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://908c19d8641f6072aeaa7bdaa29c204e60cad1fae33a91d222d2961301ff14dc\",\"dweb:/ipfs/QmUwFzaXmy97frCT9XdCkEr6ZcYFyQnM3kivqj1Lpq1Mfe\"]},\"src/interfaces/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xa1cf4a47b24f01053daa96f12d69b286f78944d5308051f3af480d2bed7d64c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbda5e13c955dc55963a5f7ce8ef17604b4bb35ae69b75e1550ea9d9b9ffd14e\",\"dweb:/ipfs/QmNMStubfavSKKsKJKjzXXY6FYQ69tRJdftFdq7jXtLrqE\"]},\"src/interfaces/IERC165Upgradeable.sol\":{\"keccak256\":\"0x781c3dfeacfed81d9f30ee1445f27a9c41f090ffbff6036e3f006f44281af864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7b9a2b8260eb971740c8ce4e67b30699990804f5bb4c4e80584700df7838c7\",\"dweb:/ipfs/QmWwtgynBvZre8JP42EoxDmmujnFS3Eiejd9gNK8peUB1X\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x0d3ff2c9021ae4bdb7e7b72c25841cd0ff42827509e3785eebe874fd7d03f99a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c28c3b8accead50bebed2cbd586c36c7febbca51dad31c2a560d510419b8593\",\"dweb:/ipfs/QmbdJD5RNE7HxPyg8S4PN6pAXktjXCrtLE6PZXDfig1xMZ\"]},\"src/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0x22fffb4f5262e1ae532edeaccdedc85e449af7b50754b4a1be4a6ecd170120c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8581149cafbbec49bd361c3c50cf76d1f678644c7f87c66e66ba4a6efca5956c\",\"dweb:/ipfs/QmekQhe8dpzebJQBs5Ah13iHjdd1r8ysns7q3Ef8DGW6Lo\"]},\"src/interfaces/IGuardManager.sol\":{\"keccak256\":\"0x439ed52cdf6b1886aec16f32ea6d9b8116e73cc95dbaa9b4e5111099292e840f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://81d5772d41e86bb02228cb1994dc9c0713502d53b7e56800b621d4221e1649b7\",\"dweb:/ipfs/QmX6JnSPXsnV5AHuvEv5iEf3eZtbqvUZLFPiSkQAKvpLZx\"]},\"src/interfaces/IMetaVault.sol\":{\"keccak256\":\"0x6f4513c42a46611da94a1ad2730ace80a8aadf6ef589afee99b1e4dbf128a875\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6c13bcd52615f6867c01f6b01693b11927f913e7e280a34599b7a86563d5eb39\",\"dweb:/ipfs/QmT1257NAWmrdZcULm752MybuFUWRHDBEotwxoWr1d6PJU\"]},\"src/interfaces/IMetaVaultGuard.sol\":{\"keccak256\":\"0x8f19a145b28b0e60ba18582dcadaeec69857366d3cffe0cb74ce0db39ddc536c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d0c93a33c9b43e47875acc213f125e7398741291e7ff0239cd74c99d5c7f6fe6\",\"dweb:/ipfs/QmSBSrNTgxpCb8eqkQ2THFRZDbf1m55dft5Rvy5L2jTqta\"]},\"src/interfaces/ISmartVault.sol\":{\"keccak256\":\"0xffc16686d0a28150aecd4811ed6d221f692f1897b5922561b1268a8a659eb19c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://760fb247c4c5ee5d660299ddd43d0ab088d02d12c567d6e994f8b3080e5d75d1\",\"dweb:/ipfs/Qmcg1t7WvQ4TTyufhLKWDmRukcCDhpS5jfrxwCbQqGMJfP\"]},\"src/interfaces/ISmartVaultManager.sol\":{\"keccak256\":\"0xe5074aa2199629ac655b5ade12bf64a9d170f024334638e3b22e432a122067c3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ac87a8f615bd325143c1f6f9c96ef1eee3be42a267f459a6f3da36f89e7cc86d\",\"dweb:/ipfs/QmW1G2vaiSFD4MefYCJQBBViiCYCxR6HAFUt9aNeUqc1Yr\"]},\"src/interfaces/ISwapper.sol\":{\"keccak256\":\"0x52bf0742ec1e3d68209f09622618f7f6b7adcc559c1e453dd3ee1c1537b1acde\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://498d832f14e6c8e4b316225f3a4a86fbf8172a85bd7aa090aeab3d9dbecba696\",\"dweb:/ipfs/QmSntDHhXLu1exqsbEufwVQd4QxfkjyTy71sitdtuPEWkr\"]},\"src/interfaces/IWithdrawalManager.sol\":{\"keccak256\":\"0xfa98436bff85e1abda8d43df82bdbbe6aa830f9c73f65a636c6c798dab019178\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b93b1831cd287ae3cd8b81edab326d1a99b851f89253e6a4cfd211276e422f33\",\"dweb:/ipfs/Qmbw92Mgbnim6uMncRxd47N2Gm8nLxnRVDW1zTVLUxnqb5\"]},\"src/interfaces/RequestType.sol\":{\"keccak256\":\"0xbbaf3f2dc27061b50dcd5469de28a40796da8dd5b518e13b5e893c3860ce2ce4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7f366b76d388720de2dc37b57cda39b3e483dd649a21f11a9f37cc66b8ae0751\",\"dweb:/ipfs/QmTg3TDzM7zzKbWoYTeqEki7dDhEQNzD2kzDTunMbQfoy8\"]},\"src/interfaces/uint16a16Lib.sol\":{\"keccak256\":\"0x6c8aa38e7d3d3c9ebffbfe08a5264d4e8c76ec4ef68caa4a909253ca31d2e151\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40485649f9288e095945277b23b709c4d52e9d8d50fb278ee4c1d79fef185061\",\"dweb:/ipfs/QmNeLD1UWDwzS3pht1GSVhqhUrdNSXXBbhbRcdrxTNMcUb\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"functionDebugData":{"@_339":{"entryPoint":null,"id":339,"parameterSlots":3,"returnSlots":0},"abi_decode_tuple_t_contract$_ISmartVaultManager_$2644t_contract$_IAssetGroupRegistry_$790t_contract$_IGuardManager_$1571_fromMemory":{"entryPoint":177,"id":null,"parameterSlots":2,"returnSlots":3},"validator_revert_contract_ISmartVaultManager":{"entryPoint":153,"id":null,"parameterSlots":1,"returnSlots":0}},"object":"60e060405234801561001057600080fd5b50604051610c0e380380610c0e83398101604081905261002f916100b1565b6001600160a01b038316158061004c57506001600160a01b038216155b8061005e57506001600160a01b038116155b1561007c5760405163bb0e4c3560e01b815260040160405180910390fd5b6001600160a01b0392831660805290821660a0521660c0526100fe565b6001600160a01b03811681146100ae57600080fd5b50565b6000806000606084860312156100c657600080fd5b83516100d181610099565b60208501519093506100e281610099565b60408501519092506100f381610099565b809150509250925092565b60805160a05160c051610ada61013460003960006103a601526000610202015260008181610127015261022c0152610ada6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a0c02faf1461003b578063ffa9f16a14610062575b600080fd5b61004e610049366004610462565b610075565b604051901515815260200160405180910390f35b61004e6100703660046104ea565b6100f0565b600081810361009757604051634ec4810560e11b815260040160405180910390fd5b60005b828110156100e5576100d2858585848181106100b8576100b8610523565b90506020020160208101906100cd9190610539565b610103565b50806100dd81610556565b91505061009a565b506001949350505050565b60006100fc8383610103565b9392505050565b6040516302d5048560e51b81526001600160a01b03828116600483015260009182917f00000000000000000000000000000000000000000000000000000000000000001690635aa090a090602401606060405180830381865afa15801561016e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101929190610604565b805190915061ffff16156101b9576040516301e41c4f60e41b815260040160405180910390fd5b602081015161ffff16156101e057604051634dbd83cb60e11b815260040160405180910390fd5b604051633732316b60e11b81526001600160a01b0384811660048301526000917f000000000000000000000000000000000000000000000000000000000000000082169163dd0fe31a917f000000000000000000000000000000000000000000000000000000000000000090911690636e6462d690602401602060405180830381865afa158015610275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102999190610670565b6040518263ffffffff1660e01b81526004016102b791815260200190565b600060405180830381865afa1580156102d4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102fc91908101906106b8565b90508051600114158061033b5750846001600160a01b03168160008151811061032757610327610523565b60200260200101516001600160a01b031614155b1561035957604051631b3b488360e11b815260040160405180910390fd5b61036484600061038c565b61036f84600161038c565b61037a84600261038c565b61038584600361038c565b6100e58460045b6040516328cff47b60e11b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063519fe8f6906103dd9086908690600401610757565b600060405180830381865afa1580156103fa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104229190810190610942565b8051909150156104455760405163e83c0f4f60e01b815260040160405180910390fd5b505050565b6001600160a01b038116811461045f57600080fd5b50565b60008060006040848603121561047757600080fd5b83356104828161044a565b9250602084013567ffffffffffffffff8082111561049f57600080fd5b818601915086601f8301126104b357600080fd5b8135818111156104c257600080fd5b8760208260051b85010111156104d757600080fd5b6020830194508093505050509250925092565b600080604083850312156104fd57600080fd5b82356105088161044a565b915060208301356105188161044a565b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561054b57600080fd5b81356100fc8161044a565b60006001820161057657634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156105b6576105b661057d565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156105e5576105e561057d565b604052919050565b805161ffff811681146105ff57600080fd5b919050565b60006060828403121561061657600080fd5b6040516060810181811067ffffffffffffffff821117156106395761063961057d565b604052610645836105ed565b8152610653602084016105ed565b6020820152610664604084016105ed565b60408201529392505050565b60006020828403121561068257600080fd5b5051919050565b600067ffffffffffffffff8211156106a3576106a361057d565b5060051b60200190565b80516105ff8161044a565b600060208083850312156106cb57600080fd5b825167ffffffffffffffff8111156106e257600080fd5b8301601f810185136106f357600080fd5b805161070661070182610689565b6105bc565b81815260059190911b8201830190838101908783111561072557600080fd5b928401925b8284101561074c57835161073d8161044a565b8252928401929084019061072a565b979650505050505050565b6001600160a01b0383168152604081016005831061078557634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b600067ffffffffffffffff8311156107ac576107ac61057d565b60206107c0601f8501601f191682016105bc565b91508382528484840111156107d457600080fd5b60005b848110156107f0578381015183820183015281016107d7565b506000818584010152509392505050565b600082601f83011261081257600080fd5b6100fc83835160208501610792565b80516001600160f01b0319811681146105ff57600080fd5b600082601f83011261084a57600080fd5b8151602061085a61070183610689565b82815260059290921b8401810191818101908684111561087957600080fd5b8286015b848110156108a2578051600981106108955760008081fd5b835291830191830161087d565b509695505050505050565b600082601f8301126108be57600080fd5b815160206108ce61070183610689565b82815260059290921b840181019181810190868411156108ed57600080fd5b8286015b848110156108a257805167ffffffffffffffff8111156109115760008081fd5b8701603f810189136109235760008081fd5b610934898683015160408401610792565b8452509183019183016108f1565b6000602080838503121561095557600080fd5b825167ffffffffffffffff8082111561096d57600080fd5b818501915085601f83011261098157600080fd5b815161098f61070182610689565b81815260059190911b830184019084810190888311156109ae57600080fd5b8585015b83811015610a97578051858111156109c957600080fd5b860160c0818c03601f190112156109e05760008081fd5b6109e8610593565b88820151878111156109fa5760008081fd5b610a088d8b83860101610801565b8252506040610a188184016106ad565b8a8301526060610a29818501610821565b828401526080915081840151818401525060a08084015189811115610a4e5760008081fd5b610a5c8f8d83880101610839565b838501525060c0840151915088821115610a765760008081fd5b610a848e8c848701016108ad565b90830152508452509186019186016109b2565b509897505050505050505056fea2646970667358221220a5d521bb56043869a2bd42bb94836be29f26fbba980e140660985483325d417464736f6c63430008110033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC0E CODESIZE SUB DUP1 PUSH2 0xC0E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 PUSH2 0x4C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO JUMPDEST DUP1 PUSH2 0x5E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0x7C JUMPI PUSH1 0x40 MLOAD PUSH4 0xBB0E4C35 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x80 MSTORE SWAP1 DUP3 AND PUSH1 0xA0 MSTORE AND PUSH1 0xC0 MSTORE PUSH2 0xFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH2 0xD1 DUP2 PUSH2 0x99 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0xE2 DUP2 PUSH2 0x99 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0xF3 DUP2 PUSH2 0x99 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0xADA PUSH2 0x134 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x3A6 ADD MSTORE PUSH1 0x0 PUSH2 0x202 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x127 ADD MSTORE PUSH2 0x22C ADD MSTORE PUSH2 0xADA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0C02FAF EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFFA9F16A EQ PUSH2 0x62 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x462 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x70 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EA JUMP JUMPDEST PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SUB PUSH2 0x97 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4EC48105 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xE5 JUMPI PUSH2 0xD2 DUP6 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xB8 JUMPI PUSH2 0xB8 PUSH2 0x523 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x539 JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST POP DUP1 PUSH2 0xDD DUP2 PUSH2 0x556 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC DUP4 DUP4 PUSH2 0x103 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2D50485 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x5AA090A0 SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH2 0xFFFF AND ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E41C4F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0xFFFF AND ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4DBD83CB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3732316B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 DUP3 AND SWAP2 PUSH4 0xDD0FE31A SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x6E6462D6 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x275 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2FC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x6B8 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x1 EQ ISZERO DUP1 PUSH2 0x33B JUMPI POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x327 JUMPI PUSH2 0x327 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1B3B4883 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x364 DUP5 PUSH1 0x0 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x36F DUP5 PUSH1 0x1 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x37A DUP5 PUSH1 0x2 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x385 DUP5 PUSH1 0x3 PUSH2 0x38C JUMP JUMPDEST PUSH2 0xE5 DUP5 PUSH1 0x4 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x28CFF47B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x519FE8F6 SWAP1 PUSH2 0x3DD SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x757 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x422 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x942 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE83C0F4F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x482 DUP2 PUSH2 0x44A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x508 DUP2 PUSH2 0x44A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x518 DUP2 PUSH2 0x44A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFC DUP2 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x576 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x5B6 JUMPI PUSH2 0x5B6 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x5E5 JUMPI PUSH2 0x5E5 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x639 JUMPI PUSH2 0x639 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x645 DUP4 PUSH2 0x5ED JUMP JUMPDEST DUP2 MSTORE PUSH2 0x653 PUSH1 0x20 DUP5 ADD PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x664 PUSH1 0x40 DUP5 ADD PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6A3 JUMPI PUSH2 0x6A3 PUSH2 0x57D JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x5FF DUP2 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x6F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x706 PUSH2 0x701 DUP3 PUSH2 0x689 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x74C JUMPI DUP4 MLOAD PUSH2 0x73D DUP2 PUSH2 0x44A JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x72A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x785 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x57D JUMP JUMPDEST PUSH1 0x20 PUSH2 0x7C0 PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH2 0x5BC JUMP JUMPDEST SWAP2 POP DUP4 DUP3 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x7F0 JUMPI DUP4 DUP2 ADD MLOAD DUP4 DUP3 ADD DUP4 ADD MSTORE DUP2 ADD PUSH2 0x7D7 JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP6 DUP5 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC DUP4 DUP4 MLOAD PUSH1 0x20 DUP6 ADD PUSH2 0x792 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x84A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x85A PUSH2 0x701 DUP4 PUSH2 0x689 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x8A2 JUMPI DUP1 MLOAD PUSH1 0x9 DUP2 LT PUSH2 0x895 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x87D JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x8CE PUSH2 0x701 DUP4 PUSH2 0x689 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x8A2 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x911 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP8 ADD PUSH1 0x3F DUP2 ADD DUP10 SGT PUSH2 0x923 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x934 DUP10 DUP7 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD PUSH2 0x792 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x96D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x981 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x98F PUSH2 0x701 DUP3 PUSH2 0x689 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x9AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA97 JUMPI DUP1 MLOAD DUP6 DUP2 GT ISZERO PUSH2 0x9C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0xC0 DUP2 DUP13 SUB PUSH1 0x1F NOT ADD SLT ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x9E8 PUSH2 0x593 JUMP JUMPDEST DUP9 DUP3 ADD MLOAD DUP8 DUP2 GT ISZERO PUSH2 0x9FA JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA08 DUP14 DUP12 DUP4 DUP7 ADD ADD PUSH2 0x801 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x40 PUSH2 0xA18 DUP2 DUP5 ADD PUSH2 0x6AD JUMP JUMPDEST DUP11 DUP4 ADD MSTORE PUSH1 0x60 PUSH2 0xA29 DUP2 DUP6 ADD PUSH2 0x821 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE PUSH1 0x80 SWAP2 POP DUP2 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP1 DUP5 ADD MLOAD DUP10 DUP2 GT ISZERO PUSH2 0xA4E JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA5C DUP16 DUP14 DUP4 DUP9 ADD ADD PUSH2 0x839 JUMP JUMPDEST DUP4 DUP6 ADD MSTORE POP PUSH1 0xC0 DUP5 ADD MLOAD SWAP2 POP DUP9 DUP3 GT ISZERO PUSH2 0xA76 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA84 DUP15 DUP13 DUP5 DUP8 ADD ADD PUSH2 0x8AD JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE POP DUP5 MSTORE POP SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x9B2 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xD5 0x21 0xBB JUMP DIV CODESIZE PUSH10 0xA2BD42BB94836BE29F26 0xFB 0xBA SWAP9 0xE EQ MOD PUSH1 0x98 SLOAD DUP4 ORIGIN 0x5D COINBASE PUSH21 0x64736F6C6343000811003300000000000000000000 ","sourceMap":"319:3032:1:-:0;;;779:508;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;957:41:1;;;;:87;;-1:-1:-1;;;;;;1002:42:1;;;957:87;:143;;;-1:-1:-1;;;;;;1064:36:1;;;957:143;940:204;;;1118:26;;-1:-1:-1;;;1118:26:1;;;;;;;;;;;940:204;-1:-1:-1;;;;;1154:38:1;;;;;1202:40;;;;;1252:28;;;319:3032;;14:151:22;-1:-1:-1;;;;;109:31:22;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:655::-;334:6;342;350;403:2;391:9;382:7;378:23;374:32;371:52;;;419:1;416;409:12;371:52;451:9;445:16;470:51;515:5;470:51;:::i;:::-;590:2;575:18;;569:25;540:5;;-1:-1:-1;603:53:22;569:25;603:53;:::i;:::-;727:2;712:18;;706:25;675:7;;-1:-1:-1;740:53:22;706:25;740:53;:::i;:::-;812:7;802:17;;;170:655;;;;;:::o;:::-;319:3032:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:827:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"79:86:22","statements":[{"body":{"nodeType":"YulBlock","src":"143:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"152:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"145:6:22"},"nodeType":"YulFunctionCall","src":"145:12:22"},"nodeType":"YulExpressionStatement","src":"145:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"102:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"113:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"128:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"133:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"124:3:22"},"nodeType":"YulFunctionCall","src":"124:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"137:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"120:3:22"},"nodeType":"YulFunctionCall","src":"120:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"109:3:22"},"nodeType":"YulFunctionCall","src":"109:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"99:2:22"},"nodeType":"YulFunctionCall","src":"99:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"92:6:22"},"nodeType":"YulFunctionCall","src":"92:50:22"},"nodeType":"YulIf","src":"89:70:22"}]},"name":"validator_revert_contract_ISmartVaultManager","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"68:5:22","type":""}],"src":"14:151:22"},{"body":{"nodeType":"YulBlock","src":"361:464:22","statements":[{"body":{"nodeType":"YulBlock","src":"407:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"416:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"419:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"409:6:22"},"nodeType":"YulFunctionCall","src":"409:12:22"},"nodeType":"YulExpressionStatement","src":"409:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"382:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"391:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"378:3:22"},"nodeType":"YulFunctionCall","src":"378:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"403:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"374:3:22"},"nodeType":"YulFunctionCall","src":"374:32:22"},"nodeType":"YulIf","src":"371:52:22"},{"nodeType":"YulVariableDeclaration","src":"432:29:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"451:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"445:5:22"},"nodeType":"YulFunctionCall","src":"445:16:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"436:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"515:5:22"}],"functionName":{"name":"validator_revert_contract_ISmartVaultManager","nodeType":"YulIdentifier","src":"470:44:22"},"nodeType":"YulFunctionCall","src":"470:51:22"},"nodeType":"YulExpressionStatement","src":"470:51:22"},{"nodeType":"YulAssignment","src":"530:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"540:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"530:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"554:40:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"579:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"590:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"575:3:22"},"nodeType":"YulFunctionCall","src":"575:18:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"569:5:22"},"nodeType":"YulFunctionCall","src":"569:25:22"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"558:7:22","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"648:7:22"}],"functionName":{"name":"validator_revert_contract_ISmartVaultManager","nodeType":"YulIdentifier","src":"603:44:22"},"nodeType":"YulFunctionCall","src":"603:53:22"},"nodeType":"YulExpressionStatement","src":"603:53:22"},{"nodeType":"YulAssignment","src":"665:17:22","value":{"name":"value_1","nodeType":"YulIdentifier","src":"675:7:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"665:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"691:40:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"716:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"727:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"712:3:22"},"nodeType":"YulFunctionCall","src":"712:18:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"706:5:22"},"nodeType":"YulFunctionCall","src":"706:25:22"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"695:7:22","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"785:7:22"}],"functionName":{"name":"validator_revert_contract_ISmartVaultManager","nodeType":"YulIdentifier","src":"740:44:22"},"nodeType":"YulFunctionCall","src":"740:53:22"},"nodeType":"YulExpressionStatement","src":"740:53:22"},{"nodeType":"YulAssignment","src":"802:17:22","value":{"name":"value_2","nodeType":"YulIdentifier","src":"812:7:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"802:6:22"}]}]},"name":"abi_decode_tuple_t_contract$_ISmartVaultManager_$2644t_contract$_IAssetGroupRegistry_$790t_contract$_IGuardManager_$1571_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"311:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"322:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"334:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"342:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"350:6:22","type":""}],"src":"170:655:22"}]},"contents":"{\n    { }\n    function validator_revert_contract_ISmartVaultManager(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_ISmartVaultManager_$2644t_contract$_IAssetGroupRegistry_$790t_contract$_IGuardManager_$1571_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_ISmartVaultManager(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_ISmartVaultManager(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_contract_ISmartVaultManager(value_2)\n        value2 := value_2\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{}},"deployedBytecode":{"functionDebugData":{"@_validateSmartVaultGuards_518":{"entryPoint":908,"id":518,"parameterSlots":2,"returnSlots":0},"@_validateSmartVault_490":{"entryPoint":259,"id":490,"parameterSlots":2,"returnSlots":1},"@validateSmartVault_355":{"entryPoint":240,"id":355,"parameterSlots":2,"returnSlots":1},"@validateSmartVaults_396":{"entryPoint":117,"id":396,"parameterSlots":3,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":1709,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_bytes_dyn_fromMemory":{"entryPoint":2221,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_enum_GuardParamType_dyn_fromMemory":{"entryPoint":2105,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_string_fromMemory":{"entryPoint":1938,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes2_fromMemory":{"entryPoint":2081,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":2049,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1337,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1258,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptr":{"entryPoint":1122,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":1720,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_struct$_GuardDefinition_$1503_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":2370,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_SmartVaultFees_$2119_memory_ptr_fromMemory":{"entryPoint":1540,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":1648,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint16_fromMemory":{"entryPoint":1517,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_enum$_RequestType_$2912__to_t_address_t_uint8__fromStack_reversed":{"entryPoint":1879,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1468,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_1834":{"entryPoint":1427,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":1673,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":1366,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x32":{"entryPoint":1315,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1405,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":1098,"id":null,"parameterSlots":1,"returnSlots":0}},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c8063a0c02faf1461003b578063ffa9f16a14610062575b600080fd5b61004e610049366004610462565b610075565b604051901515815260200160405180910390f35b61004e6100703660046104ea565b6100f0565b600081810361009757604051634ec4810560e11b815260040160405180910390fd5b60005b828110156100e5576100d2858585848181106100b8576100b8610523565b90506020020160208101906100cd9190610539565b610103565b50806100dd81610556565b91505061009a565b506001949350505050565b60006100fc8383610103565b9392505050565b6040516302d5048560e51b81526001600160a01b03828116600483015260009182917f00000000000000000000000000000000000000000000000000000000000000001690635aa090a090602401606060405180830381865afa15801561016e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101929190610604565b805190915061ffff16156101b9576040516301e41c4f60e41b815260040160405180910390fd5b602081015161ffff16156101e057604051634dbd83cb60e11b815260040160405180910390fd5b604051633732316b60e11b81526001600160a01b0384811660048301526000917f000000000000000000000000000000000000000000000000000000000000000082169163dd0fe31a917f000000000000000000000000000000000000000000000000000000000000000090911690636e6462d690602401602060405180830381865afa158015610275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102999190610670565b6040518263ffffffff1660e01b81526004016102b791815260200190565b600060405180830381865afa1580156102d4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102fc91908101906106b8565b90508051600114158061033b5750846001600160a01b03168160008151811061032757610327610523565b60200260200101516001600160a01b031614155b1561035957604051631b3b488360e11b815260040160405180910390fd5b61036484600061038c565b61036f84600161038c565b61037a84600261038c565b61038584600361038c565b6100e58460045b6040516328cff47b60e11b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063519fe8f6906103dd9086908690600401610757565b600060405180830381865afa1580156103fa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104229190810190610942565b8051909150156104455760405163e83c0f4f60e01b815260040160405180910390fd5b505050565b6001600160a01b038116811461045f57600080fd5b50565b60008060006040848603121561047757600080fd5b83356104828161044a565b9250602084013567ffffffffffffffff8082111561049f57600080fd5b818601915086601f8301126104b357600080fd5b8135818111156104c257600080fd5b8760208260051b85010111156104d757600080fd5b6020830194508093505050509250925092565b600080604083850312156104fd57600080fd5b82356105088161044a565b915060208301356105188161044a565b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561054b57600080fd5b81356100fc8161044a565b60006001820161057657634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156105b6576105b661057d565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156105e5576105e561057d565b604052919050565b805161ffff811681146105ff57600080fd5b919050565b60006060828403121561061657600080fd5b6040516060810181811067ffffffffffffffff821117156106395761063961057d565b604052610645836105ed565b8152610653602084016105ed565b6020820152610664604084016105ed565b60408201529392505050565b60006020828403121561068257600080fd5b5051919050565b600067ffffffffffffffff8211156106a3576106a361057d565b5060051b60200190565b80516105ff8161044a565b600060208083850312156106cb57600080fd5b825167ffffffffffffffff8111156106e257600080fd5b8301601f810185136106f357600080fd5b805161070661070182610689565b6105bc565b81815260059190911b8201830190838101908783111561072557600080fd5b928401925b8284101561074c57835161073d8161044a565b8252928401929084019061072a565b979650505050505050565b6001600160a01b0383168152604081016005831061078557634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b600067ffffffffffffffff8311156107ac576107ac61057d565b60206107c0601f8501601f191682016105bc565b91508382528484840111156107d457600080fd5b60005b848110156107f0578381015183820183015281016107d7565b506000818584010152509392505050565b600082601f83011261081257600080fd5b6100fc83835160208501610792565b80516001600160f01b0319811681146105ff57600080fd5b600082601f83011261084a57600080fd5b8151602061085a61070183610689565b82815260059290921b8401810191818101908684111561087957600080fd5b8286015b848110156108a2578051600981106108955760008081fd5b835291830191830161087d565b509695505050505050565b600082601f8301126108be57600080fd5b815160206108ce61070183610689565b82815260059290921b840181019181810190868411156108ed57600080fd5b8286015b848110156108a257805167ffffffffffffffff8111156109115760008081fd5b8701603f810189136109235760008081fd5b610934898683015160408401610792565b8452509183019183016108f1565b6000602080838503121561095557600080fd5b825167ffffffffffffffff8082111561096d57600080fd5b818501915085601f83011261098157600080fd5b815161098f61070182610689565b81815260059190911b830184019084810190888311156109ae57600080fd5b8585015b83811015610a97578051858111156109c957600080fd5b860160c0818c03601f190112156109e05760008081fd5b6109e8610593565b88820151878111156109fa5760008081fd5b610a088d8b83860101610801565b8252506040610a188184016106ad565b8a8301526060610a29818501610821565b828401526080915081840151818401525060a08084015189811115610a4e5760008081fd5b610a5c8f8d83880101610839565b838501525060c0840151915088821115610a765760008081fd5b610a848e8c848701016108ad565b90830152508452509186019186016109b2565b509897505050505050505056fea2646970667358221220a5d521bb56043869a2bd42bb94836be29f26fbba980e140660985483325d417464736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA0C02FAF EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xFFA9F16A EQ PUSH2 0x62 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x462 JUMP JUMPDEST PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x70 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EA JUMP JUMPDEST PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SUB PUSH2 0x97 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4EC48105 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xE5 JUMPI PUSH2 0xD2 DUP6 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0xB8 JUMPI PUSH2 0xB8 PUSH2 0x523 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x539 JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST POP DUP1 PUSH2 0xDD DUP2 PUSH2 0x556 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC DUP4 DUP4 PUSH2 0x103 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2D50485 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x5AA090A0 SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x604 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH2 0xFFFF AND ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E41C4F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0xFFFF AND ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4DBD83CB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3732316B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 DUP3 AND SWAP2 PUSH4 0xDD0FE31A SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x6E6462D6 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x275 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2FC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x6B8 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x1 EQ ISZERO DUP1 PUSH2 0x33B JUMPI POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x327 JUMPI PUSH2 0x327 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1B3B4883 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x364 DUP5 PUSH1 0x0 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x36F DUP5 PUSH1 0x1 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x37A DUP5 PUSH1 0x2 PUSH2 0x38C JUMP JUMPDEST PUSH2 0x385 DUP5 PUSH1 0x3 PUSH2 0x38C JUMP JUMPDEST PUSH2 0xE5 DUP5 PUSH1 0x4 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x28CFF47B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x519FE8F6 SWAP1 PUSH2 0x3DD SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x757 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x422 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x942 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE83C0F4F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x45F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x482 DUP2 PUSH2 0x44A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x508 DUP2 PUSH2 0x44A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x518 DUP2 PUSH2 0x44A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFC DUP2 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x576 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x5B6 JUMPI PUSH2 0x5B6 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x5E5 JUMPI PUSH2 0x5E5 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x639 JUMPI PUSH2 0x639 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x645 DUP4 PUSH2 0x5ED JUMP JUMPDEST DUP2 MSTORE PUSH2 0x653 PUSH1 0x20 DUP5 ADD PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x664 PUSH1 0x40 DUP5 ADD PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x6A3 JUMPI PUSH2 0x6A3 PUSH2 0x57D JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x5FF DUP2 PUSH2 0x44A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x6F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x706 PUSH2 0x701 DUP3 PUSH2 0x689 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x74C JUMPI DUP4 MLOAD PUSH2 0x73D DUP2 PUSH2 0x44A JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x72A JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x785 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x7AC PUSH2 0x57D JUMP JUMPDEST PUSH1 0x20 PUSH2 0x7C0 PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH2 0x5BC JUMP JUMPDEST SWAP2 POP DUP4 DUP3 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x7F0 JUMPI DUP4 DUP2 ADD MLOAD DUP4 DUP3 ADD DUP4 ADD MSTORE DUP2 ADD PUSH2 0x7D7 JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP6 DUP5 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFC DUP4 DUP4 MLOAD PUSH1 0x20 DUP6 ADD PUSH2 0x792 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x84A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x85A PUSH2 0x701 DUP4 PUSH2 0x689 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x8A2 JUMPI DUP1 MLOAD PUSH1 0x9 DUP2 LT PUSH2 0x895 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x87D JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x8CE PUSH2 0x701 DUP4 PUSH2 0x689 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x8A2 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x911 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP8 ADD PUSH1 0x3F DUP2 ADD DUP10 SGT PUSH2 0x923 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x934 DUP10 DUP7 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD PUSH2 0x792 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x96D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x981 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x98F PUSH2 0x701 DUP3 PUSH2 0x689 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x9AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA97 JUMPI DUP1 MLOAD DUP6 DUP2 GT ISZERO PUSH2 0x9C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0xC0 DUP2 DUP13 SUB PUSH1 0x1F NOT ADD SLT ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x9E8 PUSH2 0x593 JUMP JUMPDEST DUP9 DUP3 ADD MLOAD DUP8 DUP2 GT ISZERO PUSH2 0x9FA JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA08 DUP14 DUP12 DUP4 DUP7 ADD ADD PUSH2 0x801 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x40 PUSH2 0xA18 DUP2 DUP5 ADD PUSH2 0x6AD JUMP JUMPDEST DUP11 DUP4 ADD MSTORE PUSH1 0x60 PUSH2 0xA29 DUP2 DUP6 ADD PUSH2 0x821 JUMP JUMPDEST DUP3 DUP5 ADD MSTORE PUSH1 0x80 SWAP2 POP DUP2 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP1 DUP5 ADD MLOAD DUP10 DUP2 GT ISZERO PUSH2 0xA4E JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA5C DUP16 DUP14 DUP4 DUP9 ADD ADD PUSH2 0x839 JUMP JUMPDEST DUP4 DUP6 ADD MSTORE POP PUSH1 0xC0 DUP5 ADD MLOAD SWAP2 POP DUP9 DUP3 GT ISZERO PUSH2 0xA76 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xA84 DUP15 DUP13 DUP5 DUP8 ADD ADD PUSH2 0x8AD JUMP JUMPDEST SWAP1 DUP4 ADD MSTORE POP DUP5 MSTORE POP SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x9B2 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xD5 0x21 0xBB JUMP DIV CODESIZE PUSH10 0xA2BD42BB94836BE29F26 0xFB 0xBA SWAP9 0xE EQ MOD PUSH1 0x98 SLOAD DUP4 ORIGIN 0x5D COINBASE PUSH21 0x64736F6C6343000811003300000000000000000000 ","sourceMap":"319:3032:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1533:328;;;;;;:::i;:::-;;:::i;:::-;;;1070:14:22;;1063:22;1045:41;;1033:2;1018:18;1533:328:1;;;;;;;1329:162;;;;;;:::i;:::-;;:::i;1533:328::-;1640:4;1660:23;;;1656:56;;1692:20;;-1:-1:-1;;;1692:20:1;;;;;;;;;;;1656:56;1727:9;1722:112;1738:22;;;1722:112;;;1781:42;1801:5;1808:11;;1820:1;1808:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1781:19;:42::i;:::-;-1:-1:-1;1762:3:1;;;;:::i;:::-;;;;1722:112;;;-1:-1:-1;1850:4:1;;1533:328;-1:-1:-1;;;;1533:328:1:o;1329:162::-;1423:4;1446:38;1466:5;1473:10;1446:19;:38::i;:::-;1439:45;1329:162;-1:-1:-1;;;1329:162:1:o;2021:1072::-;2153:47;;-1:-1:-1;;;2153:47:1;;-1:-1:-1;;;;;2275:32:22;;;2153:47:1;;;2257:51:22;2108:4:1;;;;2153:17;:35;;;;2230:18:22;;2153:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2269:21;;2124:76;;-1:-1:-1;2269:25:1;;;2265:65;;2303:27;;-1:-1:-1;;;2303:27:1;;;;;;;;;;;2265:65;2344:18;;;;:22;;;2340:59;;2375:24;;-1:-1:-1;;;2375:24:1;;;;;;;;;;;2340:59;2474:42;;-1:-1:-1;;;2474:42:1;;-1:-1:-1;;;;;2275:32:22;;;2474:42:1;;;2257:51:22;2409:28:1;;2440:18;:33;;;;;2474:17;:30;;;;;;2230:18:22;;2474:42:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2440:77;;;;;;;;;;;;;4133:25:22;;4121:2;4106:18;;3987:177;2440:77:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2440:77:1;;;;;;;;;;;;:::i;:::-;2409:108;;2601:11;:18;2623:1;2601:23;;:50;;;;2646:5;-1:-1:-1;;;;;2628:23:1;:11;2640:1;2628:14;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2628:23:1;;;2601:50;2597:82;;;2660:19;;-1:-1:-1;;;2660:19:1;;;;;;;;;;;2597:82;2723:58;2749:10;2761:19;2723:25;:58::i;:::-;2791:61;2817:10;2829:22;2791:25;:61::i;:::-;2862:62;2888:10;2900:23;2862:25;:62::i;:::-;2934:58;2960:10;2972:19;2934:25;:58::i;:::-;3002:63;3028:10;3040:24;3099:250;3237:48;;-1:-1:-1;;;3237:48:1;;3203:31;;-1:-1:-1;;;;;3237:12:1;:23;;;;:48;;3261:10;;3273:11;;3237:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3237:48:1;;;;;;;;;;;;:::i;:::-;3299:13;;3203:82;;-1:-1:-1;3299:17:1;3295:47;;3325:17;;-1:-1:-1;;;3325:17:1;;;;;;;;;;;3295:47;3193:156;3099:250;;:::o;14:131:22:-;-1:-1:-1;;;;;89:31:22;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:750::-;245:6;253;261;314:2;302:9;293:7;289:23;285:32;282:52;;;330:1;327;320:12;282:52;369:9;356:23;388:31;413:5;388:31;:::i;:::-;438:5;-1:-1:-1;494:2:22;479:18;;466:32;517:18;547:14;;;544:34;;;574:1;571;564:12;544:34;612:6;601:9;597:22;587:32;;657:7;650:4;646:2;642:13;638:27;628:55;;679:1;676;669:12;628:55;719:2;706:16;745:2;737:6;734:14;731:34;;;761:1;758;751:12;731:34;814:7;809:2;799:6;796:1;792:14;788:2;784:23;780:32;777:45;774:65;;;835:1;832;825:12;774:65;866:2;862;858:11;848:21;;888:6;878:16;;;;;150:750;;;;;:::o;1097:388::-;1165:6;1173;1226:2;1214:9;1205:7;1201:23;1197:32;1194:52;;;1242:1;1239;1232:12;1194:52;1281:9;1268:23;1300:31;1325:5;1300:31;:::i;:::-;1350:5;-1:-1:-1;1407:2:22;1392:18;;1379:32;1420:33;1379:32;1420:33;:::i;:::-;1472:7;1462:17;;;1097:388;;;;;:::o;1490:127::-;1551:10;1546:3;1542:20;1539:1;1532:31;1582:4;1579:1;1572:15;1606:4;1603:1;1596:15;1622:247;1681:6;1734:2;1722:9;1713:7;1709:23;1705:32;1702:52;;;1750:1;1747;1740:12;1702:52;1789:9;1776:23;1808:31;1833:5;1808:31;:::i;1874:232::-;1913:3;1934:17;;;1931:140;;1993:10;1988:3;1984:20;1981:1;1974:31;2028:4;2025:1;2018:15;2056:4;2053:1;2046:15;1931:140;-1:-1:-1;2098:1:22;2087:13;;1874:232::o;2319:127::-;2380:10;2375:3;2371:20;2368:1;2361:31;2411:4;2408:1;2401:15;2435:4;2432:1;2425:15;2451:253;2523:2;2517:9;2565:4;2553:17;;2600:18;2585:34;;2621:22;;;2582:62;2579:88;;;2647:18;;:::i;:::-;2683:2;2676:22;2451:253;:::o;2709:275::-;2780:2;2774:9;2845:2;2826:13;;-1:-1:-1;;2822:27:22;2810:40;;2880:18;2865:34;;2901:22;;;2862:62;2859:88;;;2927:18;;:::i;:::-;2963:2;2956:22;2709:275;;-1:-1:-1;2709:275:22:o;2989:163::-;3067:13;;3120:6;3109:18;;3099:29;;3089:57;;3142:1;3139;3132:12;3089:57;2989:163;;;:::o;3157:636::-;3259:6;3312:2;3300:9;3291:7;3287:23;3283:32;3280:52;;;3328:1;3325;3318:12;3280:52;3361:2;3355:9;3403:2;3395:6;3391:15;3472:6;3460:10;3457:22;3436:18;3424:10;3421:34;3418:62;3415:88;;;3483:18;;:::i;:::-;3519:2;3512:22;3558:39;3587:9;3558:39;:::i;:::-;3550:6;3543:55;3631:48;3675:2;3664:9;3660:18;3631:48;:::i;:::-;3626:2;3618:6;3614:15;3607:73;3713:48;3757:2;3746:9;3742:18;3713:48;:::i;:::-;3708:2;3696:15;;3689:73;3700:6;3157:636;-1:-1:-1;;;3157:636:22:o;3798:184::-;3868:6;3921:2;3909:9;3900:7;3896:23;3892:32;3889:52;;;3937:1;3934;3927:12;3889:52;-1:-1:-1;3960:16:22;;3798:184;-1:-1:-1;3798:184:22:o;4169:183::-;4229:4;4262:18;4254:6;4251:30;4248:56;;;4284:18;;:::i;:::-;-1:-1:-1;4329:1:22;4325:14;4341:4;4321:25;;4169:183::o;4357:138::-;4436:13;;4458:31;4436:13;4458:31;:::i;4500:956::-;4595:6;4626:2;4669;4657:9;4648:7;4644:23;4640:32;4637:52;;;4685:1;4682;4675:12;4637:52;4718:9;4712:16;4751:18;4743:6;4740:30;4737:50;;;4783:1;4780;4773:12;4737:50;4806:22;;4859:4;4851:13;;4847:27;-1:-1:-1;4837:55:22;;4888:1;4885;4878:12;4837:55;4917:2;4911:9;4940:60;4956:43;4996:2;4956:43;:::i;:::-;4940:60;:::i;:::-;5034:15;;;5116:1;5112:10;;;;5104:19;;5100:28;;;5065:12;;;;5140:19;;;5137:39;;;5172:1;5169;5162:12;5137:39;5196:11;;;;5216:210;5232:6;5227:3;5224:15;5216:210;;;5305:3;5299:10;5322:31;5347:5;5322:31;:::i;:::-;5366:18;;5249:12;;;;5404;;;;5216:210;;;5445:5;4500:956;-1:-1:-1;;;;;;;4500:956:22:o;5461:441::-;-1:-1:-1;;;;;5667:32:22;;5649:51;;5637:2;5622:18;;5730:1;5719:13;;5709:144;;5775:10;5770:3;5766:20;5763:1;5756:31;5810:4;5807:1;5800:15;5838:4;5835:1;5828:15;5709:144;5889:6;5884:2;5873:9;5869:18;5862:34;5461:441;;;;;:::o;5907:537::-;5983:5;6017:18;6009:6;6006:30;6003:56;;;6039:18;;:::i;:::-;6078:4;6100:55;6145:2;6124:15;;-1:-1:-1;;6120:29:22;6116:38;;6100:55;:::i;:::-;6091:64;;6178:6;6171:5;6164:21;6218:3;6209:6;6204:3;6200:16;6197:25;6194:45;;;6235:1;6232;6225:12;6194:45;6257:1;6267:124;6281:6;6278:1;6275:13;6267:124;;;6368:11;;;6362:18;6342:13;;;6338:22;;6331:50;6296:10;;6267:124;;;6271:3;6436:1;6431:2;6422:6;6415:5;6411:18;6407:27;6400:38;;5907:537;;;;;:::o;6449:237::-;6503:5;6556:3;6549:4;6541:6;6537:17;6533:27;6523:55;;6574:1;6571;6564:12;6523:55;6596:84;6676:3;6667:6;6661:13;6654:4;6646:6;6642:17;6596:84;:::i;6691:172::-;6769:13;;-1:-1:-1;;;;;;6811:27:22;;6801:38;;6791:66;;6853:1;6850;6843:12;6868:825;6945:5;6998:3;6991:4;6983:6;6979:17;6975:27;6965:55;;7016:1;7013;7006:12;6965:55;7045:6;7039:13;7071:4;7095:60;7111:43;7151:2;7111:43;:::i;7095:60::-;7189:15;;;7275:1;7271:10;;;;7259:23;;7255:32;;;7220:12;;;;7299:15;;;7296:35;;;7327:1;7324;7317:12;7296:35;7363:2;7355:6;7351:15;7375:289;7391:6;7386:3;7383:15;7375:289;;;7464:3;7458:10;7501:1;7494:5;7491:12;7481:110;;7545:1;7574:2;7570;7563:14;7481:110;7604:18;;7642:12;;;;7408;;7375:289;;;-1:-1:-1;7682:5:22;6868:825;-1:-1:-1;;;;;;6868:825:22:o;7698:1089::-;7761:5;7814:3;7807:4;7799:6;7795:17;7791:27;7781:55;;7832:1;7829;7822:12;7781:55;7861:6;7855:13;7887:4;7911:60;7927:43;7967:2;7927:43;:::i;7911:60::-;8005:15;;;8091:1;8087:10;;;;8075:23;;8071:32;;;8036:12;;;;8115:15;;;8112:35;;;8143:1;8140;8133:12;8112:35;8179:2;8171:6;8167:15;8191:567;8207:6;8202:3;8199:15;8191:567;;;8286:3;8280:10;8322:18;8309:11;8306:35;8303:125;;;8382:1;8411:2;8407;8400:14;8303:125;8451:24;;8510:2;8502:11;;8498:21;-1:-1:-1;8488:119:22;;8561:1;8590:2;8586;8579:14;8488:119;8632:83;8711:3;8705:2;8701;8697:11;8691:18;8686:2;8682;8678:11;8632:83;:::i;:::-;8620:96;;-1:-1:-1;8736:12:22;;;;8224;;8191:567;;8792:2414;8920:6;8951:2;8994;8982:9;8973:7;8969:23;8965:32;8962:52;;;9010:1;9007;9000:12;8962:52;9043:9;9037:16;9072:18;9113:2;9105:6;9102:14;9099:34;;;9129:1;9126;9119:12;9099:34;9167:6;9156:9;9152:22;9142:32;;9212:7;9205:4;9201:2;9197:13;9193:27;9183:55;;9234:1;9231;9224:12;9183:55;9263:2;9257:9;9286:60;9302:43;9342:2;9302:43;:::i;9286:60::-;9380:15;;;9462:1;9458:10;;;;9450:19;;9446:28;;;9411:12;;;;9486:19;;;9483:39;;;9518:1;9515;9508:12;9483:39;9550:2;9546;9542:11;9562:1614;9578:6;9573:3;9570:15;9562:1614;;;9657:3;9651:10;9693:2;9680:11;9677:19;9674:39;;;9709:1;9706;9699:12;9674:39;9736:20;;9808:4;9780:16;;;-1:-1:-1;;9776:30:22;9772:41;9769:131;;;9854:1;9883:2;9879;9872:14;9769:131;9926:22;;:::i;:::-;9991:2;9987;9983:11;9977:18;10024:2;10014:8;10011:16;10008:106;;;10068:1;10097:2;10093;10086:14;10008:106;10141:65;10198:7;10193:2;10182:8;10178:2;10174:17;10170:26;10141:65;:::i;:::-;10134:5;10127:80;;10230:2;10268:42;10306:2;10302;10298:11;10268:42;:::i;:::-;10263:2;10256:5;10252:14;10245:66;10334:2;10372:41;10409:2;10405;10401:11;10372:41;:::i;:::-;10367:2;10360:5;10356:14;10349:65;10438:3;10427:14;;10491:3;10487:2;10483:12;10477:19;10472:2;10465:5;10461:14;10454:43;;10521:3;10567;10563:2;10559:12;10553:19;10601:2;10591:8;10588:16;10585:109;;;10646:1;10676:3;10671;10664:16;10585:109;10731:88;10811:7;10806:2;10795:8;10791:2;10787:17;10783:26;10731:88;:::i;:::-;10725:3;10718:5;10714:15;10707:113;;10863:4;10859:2;10855:13;10849:20;10833:36;;10898:2;10888:8;10885:16;10882:109;;;10943:1;10973:3;10968;10961:16;10882:109;11028:74;11094:7;11089:2;11078:8;11074:2;11070:17;11066:26;11028:74;:::i;:::-;11011:15;;;11004:99;-1:-1:-1;11116:18:22;;-1:-1:-1;11154:12:22;;;;9595;;9562:1614;;;-1:-1:-1;11195:5:22;8792:2414;-1:-1:-1;;;;;;;;8792:2414:22:o","generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11208:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"59:86:22","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:22"},"nodeType":"YulFunctionCall","src":"125:12:22"},"nodeType":"YulExpressionStatement","src":"125:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"82:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"108:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"113:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"104:3:22"},"nodeType":"YulFunctionCall","src":"104:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"117:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:22"},"nodeType":"YulFunctionCall","src":"100:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"89:3:22"},"nodeType":"YulFunctionCall","src":"89:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"79:2:22"},"nodeType":"YulFunctionCall","src":"79:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"72:6:22"},"nodeType":"YulFunctionCall","src":"72:50:22"},"nodeType":"YulIf","src":"69:70:22"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"48:5:22","type":""}],"src":"14:131:22"},{"body":{"nodeType":"YulBlock","src":"272:628:22","statements":[{"body":{"nodeType":"YulBlock","src":"318:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"327:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"330:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"320:6:22"},"nodeType":"YulFunctionCall","src":"320:12:22"},"nodeType":"YulExpressionStatement","src":"320:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"293:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"302:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"289:3:22"},"nodeType":"YulFunctionCall","src":"289:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"314:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"285:3:22"},"nodeType":"YulFunctionCall","src":"285:32:22"},"nodeType":"YulIf","src":"282:52:22"},{"nodeType":"YulVariableDeclaration","src":"343:36:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"369:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"356:12:22"},"nodeType":"YulFunctionCall","src":"356:23:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"347:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"413:5:22"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"388:24:22"},"nodeType":"YulFunctionCall","src":"388:31:22"},"nodeType":"YulExpressionStatement","src":"388:31:22"},{"nodeType":"YulAssignment","src":"428:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"438:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"428:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"452:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"483:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"494:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"479:3:22"},"nodeType":"YulFunctionCall","src":"479:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"466:12:22"},"nodeType":"YulFunctionCall","src":"466:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"456:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"507:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"517:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"511:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"562:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"571:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"574:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"564:6:22"},"nodeType":"YulFunctionCall","src":"564:12:22"},"nodeType":"YulExpressionStatement","src":"564:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"550:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"558:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"547:2:22"},"nodeType":"YulFunctionCall","src":"547:14:22"},"nodeType":"YulIf","src":"544:34:22"},{"nodeType":"YulVariableDeclaration","src":"587:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"601:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"612:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"597:3:22"},"nodeType":"YulFunctionCall","src":"597:22:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"591:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"667:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"676:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"679:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"669:6:22"},"nodeType":"YulFunctionCall","src":"669:12:22"},"nodeType":"YulExpressionStatement","src":"669:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"646:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"650:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"642:3:22"},"nodeType":"YulFunctionCall","src":"642:13:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"657:7:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"638:3:22"},"nodeType":"YulFunctionCall","src":"638:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"631:6:22"},"nodeType":"YulFunctionCall","src":"631:35:22"},"nodeType":"YulIf","src":"628:55:22"},{"nodeType":"YulVariableDeclaration","src":"692:30:22","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"719:2:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"706:12:22"},"nodeType":"YulFunctionCall","src":"706:16:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"696:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"749:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"758:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"761:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"751:6:22"},"nodeType":"YulFunctionCall","src":"751:12:22"},"nodeType":"YulExpressionStatement","src":"751:12:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"737:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"745:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"734:2:22"},"nodeType":"YulFunctionCall","src":"734:14:22"},"nodeType":"YulIf","src":"731:34:22"},{"body":{"nodeType":"YulBlock","src":"823:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"832:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"835:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"825:6:22"},"nodeType":"YulFunctionCall","src":"825:12:22"},"nodeType":"YulExpressionStatement","src":"825:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"788:2:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"796:1:22","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"799:6:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"792:3:22"},"nodeType":"YulFunctionCall","src":"792:14:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"784:3:22"},"nodeType":"YulFunctionCall","src":"784:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"809:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"780:3:22"},"nodeType":"YulFunctionCall","src":"780:32:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"814:7:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"777:2:22"},"nodeType":"YulFunctionCall","src":"777:45:22"},"nodeType":"YulIf","src":"774:65:22"},{"nodeType":"YulAssignment","src":"848:21:22","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"862:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"866:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"858:3:22"},"nodeType":"YulFunctionCall","src":"858:11:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"848:6:22"}]},{"nodeType":"YulAssignment","src":"878:16:22","value":{"name":"length","nodeType":"YulIdentifier","src":"888:6:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"878:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"222:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"233:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"245:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"253:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"261:6:22","type":""}],"src":"150:750:22"},{"body":{"nodeType":"YulBlock","src":"1000:92:22","statements":[{"nodeType":"YulAssignment","src":"1010:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1022:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1033:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1018:3:22"},"nodeType":"YulFunctionCall","src":"1018:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1010:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1052:9:22"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1077:6:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1070:6:22"},"nodeType":"YulFunctionCall","src":"1070:14:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1063:6:22"},"nodeType":"YulFunctionCall","src":"1063:22:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1045:6:22"},"nodeType":"YulFunctionCall","src":"1045:41:22"},"nodeType":"YulExpressionStatement","src":"1045:41:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"969:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"980:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"991:4:22","type":""}],"src":"905:187:22"},{"body":{"nodeType":"YulBlock","src":"1184:301:22","statements":[{"body":{"nodeType":"YulBlock","src":"1230:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1239:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1242:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1232:6:22"},"nodeType":"YulFunctionCall","src":"1232:12:22"},"nodeType":"YulExpressionStatement","src":"1232:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1205:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1214:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1201:3:22"},"nodeType":"YulFunctionCall","src":"1201:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1226:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1197:3:22"},"nodeType":"YulFunctionCall","src":"1197:32:22"},"nodeType":"YulIf","src":"1194:52:22"},{"nodeType":"YulVariableDeclaration","src":"1255:36:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1281:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1268:12:22"},"nodeType":"YulFunctionCall","src":"1268:23:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1259:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1325:5:22"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1300:24:22"},"nodeType":"YulFunctionCall","src":"1300:31:22"},"nodeType":"YulExpressionStatement","src":"1300:31:22"},{"nodeType":"YulAssignment","src":"1340:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"1350:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1340:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"1364:47:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1396:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1407:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1392:3:22"},"nodeType":"YulFunctionCall","src":"1392:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1379:12:22"},"nodeType":"YulFunctionCall","src":"1379:32:22"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1368:7:22","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1445:7:22"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1420:24:22"},"nodeType":"YulFunctionCall","src":"1420:33:22"},"nodeType":"YulExpressionStatement","src":"1420:33:22"},{"nodeType":"YulAssignment","src":"1462:17:22","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1472:7:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1462:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1142:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1153:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1165:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1173:6:22","type":""}],"src":"1097:388:22"},{"body":{"nodeType":"YulBlock","src":"1522:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1546:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1551:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1542:3:22"},"nodeType":"YulFunctionCall","src":"1542:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1532:6:22"},"nodeType":"YulFunctionCall","src":"1532:31:22"},"nodeType":"YulExpressionStatement","src":"1532:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1579:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1582:4:22","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1572:6:22"},"nodeType":"YulFunctionCall","src":"1572:15:22"},"nodeType":"YulExpressionStatement","src":"1572:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1603:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1606:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1596:6:22"},"nodeType":"YulFunctionCall","src":"1596:15:22"},"nodeType":"YulExpressionStatement","src":"1596:15:22"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"1490:127:22"},{"body":{"nodeType":"YulBlock","src":"1692:177:22","statements":[{"body":{"nodeType":"YulBlock","src":"1738:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1747:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1750:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1740:6:22"},"nodeType":"YulFunctionCall","src":"1740:12:22"},"nodeType":"YulExpressionStatement","src":"1740:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1713:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1722:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1709:3:22"},"nodeType":"YulFunctionCall","src":"1709:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1734:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1705:3:22"},"nodeType":"YulFunctionCall","src":"1705:32:22"},"nodeType":"YulIf","src":"1702:52:22"},{"nodeType":"YulVariableDeclaration","src":"1763:36:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1789:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1776:12:22"},"nodeType":"YulFunctionCall","src":"1776:23:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1767:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1833:5:22"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1808:24:22"},"nodeType":"YulFunctionCall","src":"1808:31:22"},"nodeType":"YulExpressionStatement","src":"1808:31:22"},{"nodeType":"YulAssignment","src":"1848:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"1858:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1848:6:22"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1658:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1669:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1681:6:22","type":""}],"src":"1622:247:22"},{"body":{"nodeType":"YulBlock","src":"1921:185:22","statements":[{"body":{"nodeType":"YulBlock","src":"1960:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1981:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1988:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1993:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1984:3:22"},"nodeType":"YulFunctionCall","src":"1984:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1974:6:22"},"nodeType":"YulFunctionCall","src":"1974:31:22"},"nodeType":"YulExpressionStatement","src":"1974:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2028:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2018:6:22"},"nodeType":"YulFunctionCall","src":"2018:15:22"},"nodeType":"YulExpressionStatement","src":"2018:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2053:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2056:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2046:6:22"},"nodeType":"YulFunctionCall","src":"2046:15:22"},"nodeType":"YulExpressionStatement","src":"2046:15:22"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1937:5:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1948:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1944:3:22"},"nodeType":"YulFunctionCall","src":"1944:6:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1934:2:22"},"nodeType":"YulFunctionCall","src":"1934:17:22"},"nodeType":"YulIf","src":"1931:140:22"},{"nodeType":"YulAssignment","src":"2080:20:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2091:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2098:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2087:3:22"},"nodeType":"YulFunctionCall","src":"2087:13:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2080:3:22"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1903:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1913:3:22","type":""}],"src":"1874:232:22"},{"body":{"nodeType":"YulBlock","src":"2212:102:22","statements":[{"nodeType":"YulAssignment","src":"2222:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2234:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2245:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2230:3:22"},"nodeType":"YulFunctionCall","src":"2230:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2222:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2264:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2279:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2295:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2300:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2291:3:22"},"nodeType":"YulFunctionCall","src":"2291:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"2304:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2287:3:22"},"nodeType":"YulFunctionCall","src":"2287:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2275:3:22"},"nodeType":"YulFunctionCall","src":"2275:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2257:6:22"},"nodeType":"YulFunctionCall","src":"2257:51:22"},"nodeType":"YulExpressionStatement","src":"2257:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2181:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2192:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2203:4:22","type":""}],"src":"2111:203:22"},{"body":{"nodeType":"YulBlock","src":"2351:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2368:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2380:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2371:3:22"},"nodeType":"YulFunctionCall","src":"2371:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2361:6:22"},"nodeType":"YulFunctionCall","src":"2361:31:22"},"nodeType":"YulExpressionStatement","src":"2361:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2408:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2411:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2401:6:22"},"nodeType":"YulFunctionCall","src":"2401:15:22"},"nodeType":"YulExpressionStatement","src":"2401:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2432:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2435:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2425:6:22"},"nodeType":"YulFunctionCall","src":"2425:15:22"},"nodeType":"YulExpressionStatement","src":"2425:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2319:127:22"},{"body":{"nodeType":"YulBlock","src":"2497:207:22","statements":[{"nodeType":"YulAssignment","src":"2507:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2523:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2517:5:22"},"nodeType":"YulFunctionCall","src":"2517:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2507:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"2535:35:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2557:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2565:4:22","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2553:3:22"},"nodeType":"YulFunctionCall","src":"2553:17:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2539:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2645:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2647:16:22"},"nodeType":"YulFunctionCall","src":"2647:18:22"},"nodeType":"YulExpressionStatement","src":"2647:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2588:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"2600:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2585:2:22"},"nodeType":"YulFunctionCall","src":"2585:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2624:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2636:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2621:2:22"},"nodeType":"YulFunctionCall","src":"2621:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2582:2:22"},"nodeType":"YulFunctionCall","src":"2582:62:22"},"nodeType":"YulIf","src":"2579:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2683:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2687:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2676:6:22"},"nodeType":"YulFunctionCall","src":"2676:22:22"},"nodeType":"YulExpressionStatement","src":"2676:22:22"}]},"name":"allocate_memory_1834","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2486:6:22","type":""}],"src":"2451:253:22"},{"body":{"nodeType":"YulBlock","src":"2754:230:22","statements":[{"nodeType":"YulAssignment","src":"2764:19:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2780:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2774:5:22"},"nodeType":"YulFunctionCall","src":"2774:9:22"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2764:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"2792:58:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2814:6:22"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2830:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"2836:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2826:3:22"},"nodeType":"YulFunctionCall","src":"2826:13:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2845:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2841:3:22"},"nodeType":"YulFunctionCall","src":"2841:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2822:3:22"},"nodeType":"YulFunctionCall","src":"2822:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2810:3:22"},"nodeType":"YulFunctionCall","src":"2810:40:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2796:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2925:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2927:16:22"},"nodeType":"YulFunctionCall","src":"2927:18:22"},"nodeType":"YulExpressionStatement","src":"2927:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2868:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"2880:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2865:2:22"},"nodeType":"YulFunctionCall","src":"2865:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2904:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2916:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2901:2:22"},"nodeType":"YulFunctionCall","src":"2901:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2862:2:22"},"nodeType":"YulFunctionCall","src":"2862:62:22"},"nodeType":"YulIf","src":"2859:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2963:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2967:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2956:6:22"},"nodeType":"YulFunctionCall","src":"2956:22:22"},"nodeType":"YulExpressionStatement","src":"2956:22:22"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2734:4:22","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2743:6:22","type":""}],"src":"2709:275:22"},{"body":{"nodeType":"YulBlock","src":"3048:104:22","statements":[{"nodeType":"YulAssignment","src":"3058:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3073:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3067:5:22"},"nodeType":"YulFunctionCall","src":"3067:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3058:5:22"}]},{"body":{"nodeType":"YulBlock","src":"3130:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3139:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3142:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3132:6:22"},"nodeType":"YulFunctionCall","src":"3132:12:22"},"nodeType":"YulExpressionStatement","src":"3132:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3102:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3113:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"3120:6:22","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3109:3:22"},"nodeType":"YulFunctionCall","src":"3109:18:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3099:2:22"},"nodeType":"YulFunctionCall","src":"3099:29:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3092:6:22"},"nodeType":"YulFunctionCall","src":"3092:37:22"},"nodeType":"YulIf","src":"3089:57:22"}]},"name":"abi_decode_uint16_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3027:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3038:5:22","type":""}],"src":"2989:163:22"},{"body":{"nodeType":"YulBlock","src":"3270:523:22","statements":[{"body":{"nodeType":"YulBlock","src":"3316:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3325:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3328:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3318:6:22"},"nodeType":"YulFunctionCall","src":"3318:12:22"},"nodeType":"YulExpressionStatement","src":"3318:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3291:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3300:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3287:3:22"},"nodeType":"YulFunctionCall","src":"3287:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3312:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3283:3:22"},"nodeType":"YulFunctionCall","src":"3283:32:22"},"nodeType":"YulIf","src":"3280:52:22"},{"nodeType":"YulVariableDeclaration","src":"3341:23:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3361:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3355:5:22"},"nodeType":"YulFunctionCall","src":"3355:9:22"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3345:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3373:33:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3395:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3403:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3391:3:22"},"nodeType":"YulFunctionCall","src":"3391:15:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3377:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3481:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3483:16:22"},"nodeType":"YulFunctionCall","src":"3483:18:22"},"nodeType":"YulExpressionStatement","src":"3483:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3424:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"3436:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3421:2:22"},"nodeType":"YulFunctionCall","src":"3421:34:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3460:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3472:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3457:2:22"},"nodeType":"YulFunctionCall","src":"3457:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3418:2:22"},"nodeType":"YulFunctionCall","src":"3418:62:22"},"nodeType":"YulIf","src":"3415:88:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3519:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3523:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3512:6:22"},"nodeType":"YulFunctionCall","src":"3512:22:22"},"nodeType":"YulExpressionStatement","src":"3512:22:22"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3550:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3587:9:22"}],"functionName":{"name":"abi_decode_uint16_fromMemory","nodeType":"YulIdentifier","src":"3558:28:22"},"nodeType":"YulFunctionCall","src":"3558:39:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3543:6:22"},"nodeType":"YulFunctionCall","src":"3543:55:22"},"nodeType":"YulExpressionStatement","src":"3543:55:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3618:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3626:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3614:3:22"},"nodeType":"YulFunctionCall","src":"3614:15:22"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3664:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3675:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3660:3:22"},"nodeType":"YulFunctionCall","src":"3660:18:22"}],"functionName":{"name":"abi_decode_uint16_fromMemory","nodeType":"YulIdentifier","src":"3631:28:22"},"nodeType":"YulFunctionCall","src":"3631:48:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3607:6:22"},"nodeType":"YulFunctionCall","src":"3607:73:22"},"nodeType":"YulExpressionStatement","src":"3607:73:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3700:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3708:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3696:3:22"},"nodeType":"YulFunctionCall","src":"3696:15:22"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3746:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3757:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3742:3:22"},"nodeType":"YulFunctionCall","src":"3742:18:22"}],"functionName":{"name":"abi_decode_uint16_fromMemory","nodeType":"YulIdentifier","src":"3713:28:22"},"nodeType":"YulFunctionCall","src":"3713:48:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3689:6:22"},"nodeType":"YulFunctionCall","src":"3689:73:22"},"nodeType":"YulExpressionStatement","src":"3689:73:22"},{"nodeType":"YulAssignment","src":"3771:16:22","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3781:6:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3771:6:22"}]}]},"name":"abi_decode_tuple_t_struct$_SmartVaultFees_$2119_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3236:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3247:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3259:6:22","type":""}],"src":"3157:636:22"},{"body":{"nodeType":"YulBlock","src":"3879:103:22","statements":[{"body":{"nodeType":"YulBlock","src":"3925:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3934:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3937:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3927:6:22"},"nodeType":"YulFunctionCall","src":"3927:12:22"},"nodeType":"YulExpressionStatement","src":"3927:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3900:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3909:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3896:3:22"},"nodeType":"YulFunctionCall","src":"3896:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3921:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3892:3:22"},"nodeType":"YulFunctionCall","src":"3892:32:22"},"nodeType":"YulIf","src":"3889:52:22"},{"nodeType":"YulAssignment","src":"3950:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3966:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3960:5:22"},"nodeType":"YulFunctionCall","src":"3960:16:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3950:6:22"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3845:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3856:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3868:6:22","type":""}],"src":"3798:184:22"},{"body":{"nodeType":"YulBlock","src":"4088:76:22","statements":[{"nodeType":"YulAssignment","src":"4098:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4121:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:22"},"nodeType":"YulFunctionCall","src":"4106:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4098:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4140:9:22"},{"name":"value0","nodeType":"YulIdentifier","src":"4151:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4133:6:22"},"nodeType":"YulFunctionCall","src":"4133:25:22"},"nodeType":"YulExpressionStatement","src":"4133:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4057:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4068:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4079:4:22","type":""}],"src":"3987:177:22"},{"body":{"nodeType":"YulBlock","src":"4238:114:22","statements":[{"body":{"nodeType":"YulBlock","src":"4282:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4284:16:22"},"nodeType":"YulFunctionCall","src":"4284:18:22"},"nodeType":"YulExpressionStatement","src":"4284:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4254:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4262:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4251:2:22"},"nodeType":"YulFunctionCall","src":"4251:30:22"},"nodeType":"YulIf","src":"4248:56:22"},{"nodeType":"YulAssignment","src":"4313:33:22","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4329:1:22","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"4332:6:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4325:3:22"},"nodeType":"YulFunctionCall","src":"4325:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"4341:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4321:3:22"},"nodeType":"YulFunctionCall","src":"4321:25:22"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4313:4:22"}]}]},"name":"array_allocation_size_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4218:6:22","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4229:4:22","type":""}],"src":"4169:183:22"},{"body":{"nodeType":"YulBlock","src":"4417:78:22","statements":[{"nodeType":"YulAssignment","src":"4427:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4442:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4436:5:22"},"nodeType":"YulFunctionCall","src":"4436:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4427:5:22"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4483:5:22"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4458:24:22"},"nodeType":"YulFunctionCall","src":"4458:31:22"},"nodeType":"YulExpressionStatement","src":"4458:31:22"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4396:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4407:5:22","type":""}],"src":"4357:138:22"},{"body":{"nodeType":"YulBlock","src":"4606:850:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4616:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4626:2:22","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4620:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4673:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4682:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4685:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4675:6:22"},"nodeType":"YulFunctionCall","src":"4675:12:22"},"nodeType":"YulExpressionStatement","src":"4675:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4648:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4657:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4644:3:22"},"nodeType":"YulFunctionCall","src":"4644:23:22"},{"name":"_1","nodeType":"YulIdentifier","src":"4669:2:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4640:3:22"},"nodeType":"YulFunctionCall","src":"4640:32:22"},"nodeType":"YulIf","src":"4637:52:22"},{"nodeType":"YulVariableDeclaration","src":"4698:30:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4718:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4712:5:22"},"nodeType":"YulFunctionCall","src":"4712:16:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4702:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4771:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4780:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4783:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4773:6:22"},"nodeType":"YulFunctionCall","src":"4773:12:22"},"nodeType":"YulExpressionStatement","src":"4773:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4743:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4751:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4740:2:22"},"nodeType":"YulFunctionCall","src":"4740:30:22"},"nodeType":"YulIf","src":"4737:50:22"},{"nodeType":"YulVariableDeclaration","src":"4796:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4810:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4821:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4806:3:22"},"nodeType":"YulFunctionCall","src":"4806:22:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4800:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4876:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4885:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4888:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4878:6:22"},"nodeType":"YulFunctionCall","src":"4878:12:22"},"nodeType":"YulExpressionStatement","src":"4878:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4855:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"4859:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4851:3:22"},"nodeType":"YulFunctionCall","src":"4851:13:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4866:7:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4847:3:22"},"nodeType":"YulFunctionCall","src":"4847:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4840:6:22"},"nodeType":"YulFunctionCall","src":"4840:35:22"},"nodeType":"YulIf","src":"4837:55:22"},{"nodeType":"YulVariableDeclaration","src":"4901:19:22","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4917:2:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4911:5:22"},"nodeType":"YulFunctionCall","src":"4911:9:22"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4905:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4929:71:22","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4996:2:22"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"4956:39:22"},"nodeType":"YulFunctionCall","src":"4956:43:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4940:15:22"},"nodeType":"YulFunctionCall","src":"4940:60:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4933:3:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5009:16:22","value":{"name":"dst","nodeType":"YulIdentifier","src":"5022:3:22"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"5013:5:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5041:3:22"},{"name":"_3","nodeType":"YulIdentifier","src":"5046:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5034:6:22"},"nodeType":"YulFunctionCall","src":"5034:15:22"},"nodeType":"YulExpressionStatement","src":"5034:15:22"},{"nodeType":"YulAssignment","src":"5058:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5069:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5074:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5065:3:22"},"nodeType":"YulFunctionCall","src":"5065:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5058:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"5086:42:22","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5108:2:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5116:1:22","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"5119:2:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5112:3:22"},"nodeType":"YulFunctionCall","src":"5112:10:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5104:3:22"},"nodeType":"YulFunctionCall","src":"5104:19:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5125:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5100:3:22"},"nodeType":"YulFunctionCall","src":"5100:28:22"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5090:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"5160:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5169:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5172:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5162:6:22"},"nodeType":"YulFunctionCall","src":"5162:12:22"},"nodeType":"YulExpressionStatement","src":"5162:12:22"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5143:6:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5151:7:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5140:2:22"},"nodeType":"YulFunctionCall","src":"5140:19:22"},"nodeType":"YulIf","src":"5137:39:22"},{"nodeType":"YulVariableDeclaration","src":"5185:22:22","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5200:2:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5204:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5196:3:22"},"nodeType":"YulFunctionCall","src":"5196:11:22"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5189:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"5272:154:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5286:23:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5305:3:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5299:5:22"},"nodeType":"YulFunctionCall","src":"5299:10:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5290:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5347:5:22"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5322:24:22"},"nodeType":"YulFunctionCall","src":"5322:31:22"},"nodeType":"YulExpressionStatement","src":"5322:31:22"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5373:3:22"},{"name":"value","nodeType":"YulIdentifier","src":"5378:5:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5366:6:22"},"nodeType":"YulFunctionCall","src":"5366:18:22"},"nodeType":"YulExpressionStatement","src":"5366:18:22"},{"nodeType":"YulAssignment","src":"5397:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5408:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5413:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5404:3:22"},"nodeType":"YulFunctionCall","src":"5404:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5397:3:22"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5227:3:22"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5232:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5224:2:22"},"nodeType":"YulFunctionCall","src":"5224:15:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5240:23:22","statements":[{"nodeType":"YulAssignment","src":"5242:19:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5253:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5258:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5249:3:22"},"nodeType":"YulFunctionCall","src":"5249:12:22"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5242:3:22"}]}]},"pre":{"nodeType":"YulBlock","src":"5220:3:22","statements":[]},"src":"5216:210:22"},{"nodeType":"YulAssignment","src":"5435:15:22","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"5445:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5435:6:22"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4572:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4583:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4595:6:22","type":""}],"src":"4500:956:22"},{"body":{"nodeType":"YulBlock","src":"5604:298:22","statements":[{"nodeType":"YulAssignment","src":"5614:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5626:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5637:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5622:3:22"},"nodeType":"YulFunctionCall","src":"5622:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5614:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5656:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5671:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5687:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5692:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5683:3:22"},"nodeType":"YulFunctionCall","src":"5683:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"5696:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5679:3:22"},"nodeType":"YulFunctionCall","src":"5679:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5667:3:22"},"nodeType":"YulFunctionCall","src":"5667:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5649:6:22"},"nodeType":"YulFunctionCall","src":"5649:51:22"},"nodeType":"YulExpressionStatement","src":"5649:51:22"},{"body":{"nodeType":"YulBlock","src":"5742:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5763:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5770:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5775:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5766:3:22"},"nodeType":"YulFunctionCall","src":"5766:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5756:6:22"},"nodeType":"YulFunctionCall","src":"5756:31:22"},"nodeType":"YulExpressionStatement","src":"5756:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5807:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5810:4:22","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5800:6:22"},"nodeType":"YulFunctionCall","src":"5800:15:22"},"nodeType":"YulExpressionStatement","src":"5800:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5835:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5838:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5828:6:22"},"nodeType":"YulFunctionCall","src":"5828:15:22"},"nodeType":"YulExpressionStatement","src":"5828:15:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5722:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"5730:1:22","type":"","value":"5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5719:2:22"},"nodeType":"YulFunctionCall","src":"5719:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5712:6:22"},"nodeType":"YulFunctionCall","src":"5712:21:22"},"nodeType":"YulIf","src":"5709:144:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5873:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5884:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5869:3:22"},"nodeType":"YulFunctionCall","src":"5869:18:22"},{"name":"value1","nodeType":"YulIdentifier","src":"5889:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5862:6:22"},"nodeType":"YulFunctionCall","src":"5862:34:22"},"nodeType":"YulExpressionStatement","src":"5862:34:22"}]},"name":"abi_encode_tuple_t_address_t_enum$_RequestType_$2912__to_t_address_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5565:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5576:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5584:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5595:4:22","type":""}],"src":"5461:441:22"},{"body":{"nodeType":"YulBlock","src":"5993:451:22","statements":[{"body":{"nodeType":"YulBlock","src":"6037:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6039:16:22"},"nodeType":"YulFunctionCall","src":"6039:18:22"},"nodeType":"YulExpressionStatement","src":"6039:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6009:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6017:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6006:2:22"},"nodeType":"YulFunctionCall","src":"6006:30:22"},"nodeType":"YulIf","src":"6003:56:22"},{"nodeType":"YulVariableDeclaration","src":"6068:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6078:4:22","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6072:2:22","type":""}]},{"nodeType":"YulAssignment","src":"6091:64:22","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6128:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6136:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6124:3:22"},"nodeType":"YulFunctionCall","src":"6124:15:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6145:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6141:3:22"},"nodeType":"YulFunctionCall","src":"6141:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6120:3:22"},"nodeType":"YulFunctionCall","src":"6120:29:22"},{"name":"_1","nodeType":"YulIdentifier","src":"6151:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6116:3:22"},"nodeType":"YulFunctionCall","src":"6116:38:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6100:15:22"},"nodeType":"YulFunctionCall","src":"6100:55:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6091:5:22"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6171:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"6178:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6164:6:22"},"nodeType":"YulFunctionCall","src":"6164:21:22"},"nodeType":"YulExpressionStatement","src":"6164:21:22"},{"body":{"nodeType":"YulBlock","src":"6223:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6232:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6235:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6225:6:22"},"nodeType":"YulFunctionCall","src":"6225:12:22"},"nodeType":"YulExpressionStatement","src":"6225:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6204:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"6209:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6200:3:22"},"nodeType":"YulFunctionCall","src":"6200:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"6218:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6197:2:22"},"nodeType":"YulFunctionCall","src":"6197:25:22"},"nodeType":"YulIf","src":"6194:45:22"},{"nodeType":"YulVariableDeclaration","src":"6248:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"6257:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6252:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"6317:74:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6346:5:22"},{"name":"i","nodeType":"YulIdentifier","src":"6353:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6342:3:22"},"nodeType":"YulFunctionCall","src":"6342:13:22"},{"name":"_1","nodeType":"YulIdentifier","src":"6357:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6338:3:22"},"nodeType":"YulFunctionCall","src":"6338:22:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6372:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"6377:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6368:3:22"},"nodeType":"YulFunctionCall","src":"6368:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6362:5:22"},"nodeType":"YulFunctionCall","src":"6362:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6331:6:22"},"nodeType":"YulFunctionCall","src":"6331:50:22"},"nodeType":"YulExpressionStatement","src":"6331:50:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6278:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"6281:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6275:2:22"},"nodeType":"YulFunctionCall","src":"6275:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6289:19:22","statements":[{"nodeType":"YulAssignment","src":"6291:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6300:1:22"},{"name":"_1","nodeType":"YulIdentifier","src":"6303:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6296:3:22"},"nodeType":"YulFunctionCall","src":"6296:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6291:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"6271:3:22","statements":[]},"src":"6267:124:22"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6415:5:22"},{"name":"length","nodeType":"YulIdentifier","src":"6422:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6411:3:22"},"nodeType":"YulFunctionCall","src":"6411:18:22"},{"name":"_1","nodeType":"YulIdentifier","src":"6431:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6407:3:22"},"nodeType":"YulFunctionCall","src":"6407:27:22"},{"kind":"number","nodeType":"YulLiteral","src":"6436:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6400:6:22"},"nodeType":"YulFunctionCall","src":"6400:38:22"},"nodeType":"YulExpressionStatement","src":"6400:38:22"}]},"name":"abi_decode_available_length_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5962:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"5967:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"5975:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5983:5:22","type":""}],"src":"5907:537:22"},{"body":{"nodeType":"YulBlock","src":"6513:173:22","statements":[{"body":{"nodeType":"YulBlock","src":"6562:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6571:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6574:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6564:6:22"},"nodeType":"YulFunctionCall","src":"6564:12:22"},"nodeType":"YulExpressionStatement","src":"6564:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6541:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6549:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6537:3:22"},"nodeType":"YulFunctionCall","src":"6537:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"6556:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6533:3:22"},"nodeType":"YulFunctionCall","src":"6533:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6526:6:22"},"nodeType":"YulFunctionCall","src":"6526:35:22"},"nodeType":"YulIf","src":"6523:55:22"},{"nodeType":"YulAssignment","src":"6587:93:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6646:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6654:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6642:3:22"},"nodeType":"YulFunctionCall","src":"6642:17:22"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6667:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6661:5:22"},"nodeType":"YulFunctionCall","src":"6661:13:22"},{"name":"end","nodeType":"YulIdentifier","src":"6676:3:22"}],"functionName":{"name":"abi_decode_available_length_string_fromMemory","nodeType":"YulIdentifier","src":"6596:45:22"},"nodeType":"YulFunctionCall","src":"6596:84:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6587:5:22"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6487:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"6495:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6503:5:22","type":""}],"src":"6449:237:22"},{"body":{"nodeType":"YulBlock","src":"6750:113:22","statements":[{"nodeType":"YulAssignment","src":"6760:22:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6775:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6769:5:22"},"nodeType":"YulFunctionCall","src":"6769:13:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6760:5:22"}]},{"body":{"nodeType":"YulBlock","src":"6841:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6850:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6853:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6843:6:22"},"nodeType":"YulFunctionCall","src":"6843:12:22"},"nodeType":"YulExpressionStatement","src":"6843:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6804:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6815:5:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6826:3:22","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"6831:5:22","type":"","value":"65535"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6822:3:22"},"nodeType":"YulFunctionCall","src":"6822:15:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6811:3:22"},"nodeType":"YulFunctionCall","src":"6811:27:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6801:2:22"},"nodeType":"YulFunctionCall","src":"6801:38:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6794:6:22"},"nodeType":"YulFunctionCall","src":"6794:46:22"},"nodeType":"YulIf","src":"6791:66:22"}]},"name":"abi_decode_bytes2_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6729:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6740:5:22","type":""}],"src":"6691:172:22"},{"body":{"nodeType":"YulBlock","src":"6955:738:22","statements":[{"body":{"nodeType":"YulBlock","src":"7004:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7013:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7016:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7006:6:22"},"nodeType":"YulFunctionCall","src":"7006:12:22"},"nodeType":"YulExpressionStatement","src":"7006:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6983:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6991:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6979:3:22"},"nodeType":"YulFunctionCall","src":"6979:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"6998:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6975:3:22"},"nodeType":"YulFunctionCall","src":"6975:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6968:6:22"},"nodeType":"YulFunctionCall","src":"6968:35:22"},"nodeType":"YulIf","src":"6965:55:22"},{"nodeType":"YulVariableDeclaration","src":"7029:23:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7045:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7039:5:22"},"nodeType":"YulFunctionCall","src":"7039:13:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7033:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7061:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7071:4:22","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"7065:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7084:71:22","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7151:2:22"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"7111:39:22"},"nodeType":"YulFunctionCall","src":"7111:43:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7095:15:22"},"nodeType":"YulFunctionCall","src":"7095:60:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7088:3:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7164:16:22","value":{"name":"dst","nodeType":"YulIdentifier","src":"7177:3:22"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"7168:5:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7196:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"7201:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7189:6:22"},"nodeType":"YulFunctionCall","src":"7189:15:22"},"nodeType":"YulExpressionStatement","src":"7189:15:22"},{"nodeType":"YulAssignment","src":"7213:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7224:3:22"},{"name":"_2","nodeType":"YulIdentifier","src":"7229:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7220:3:22"},"nodeType":"YulFunctionCall","src":"7220:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7213:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"7241:46:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7263:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7275:1:22","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"7278:2:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7271:3:22"},"nodeType":"YulFunctionCall","src":"7271:10:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7259:3:22"},"nodeType":"YulFunctionCall","src":"7259:23:22"},{"name":"_2","nodeType":"YulIdentifier","src":"7284:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7255:3:22"},"nodeType":"YulFunctionCall","src":"7255:32:22"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7245:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"7315:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7324:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7327:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7317:6:22"},"nodeType":"YulFunctionCall","src":"7317:12:22"},"nodeType":"YulExpressionStatement","src":"7317:12:22"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7302:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"7310:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7299:2:22"},"nodeType":"YulFunctionCall","src":"7299:15:22"},"nodeType":"YulIf","src":"7296:35:22"},{"nodeType":"YulVariableDeclaration","src":"7340:26:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7355:6:22"},{"name":"_2","nodeType":"YulIdentifier","src":"7363:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7351:3:22"},"nodeType":"YulFunctionCall","src":"7351:15:22"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7344:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"7431:233:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7445:23:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7464:3:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7458:5:22"},"nodeType":"YulFunctionCall","src":"7458:10:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7449:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"7517:74:22","statements":[{"nodeType":"YulVariableDeclaration","src":"7535:11:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7545:1:22","type":"","value":"0"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"7539:2:22","type":""}]},{"expression":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"7570:2:22"},{"name":"_3","nodeType":"YulIdentifier","src":"7574:2:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7563:6:22"},"nodeType":"YulFunctionCall","src":"7563:14:22"},"nodeType":"YulExpressionStatement","src":"7563:14:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7494:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"7501:1:22","type":"","value":"9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7491:2:22"},"nodeType":"YulFunctionCall","src":"7491:12:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7484:6:22"},"nodeType":"YulFunctionCall","src":"7484:20:22"},"nodeType":"YulIf","src":"7481:110:22"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7611:3:22"},{"name":"value","nodeType":"YulIdentifier","src":"7616:5:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7604:6:22"},"nodeType":"YulFunctionCall","src":"7604:18:22"},"nodeType":"YulExpressionStatement","src":"7604:18:22"},{"nodeType":"YulAssignment","src":"7635:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7646:3:22"},{"name":"_2","nodeType":"YulIdentifier","src":"7651:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7642:3:22"},"nodeType":"YulFunctionCall","src":"7642:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7635:3:22"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7386:3:22"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7391:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7383:2:22"},"nodeType":"YulFunctionCall","src":"7383:15:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7399:23:22","statements":[{"nodeType":"YulAssignment","src":"7401:19:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7412:3:22"},{"name":"_2","nodeType":"YulIdentifier","src":"7417:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7408:3:22"},"nodeType":"YulFunctionCall","src":"7408:12:22"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7401:3:22"}]}]},"pre":{"nodeType":"YulBlock","src":"7379:3:22","statements":[]},"src":"7375:289:22"},{"nodeType":"YulAssignment","src":"7673:14:22","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"7682:5:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7673:5:22"}]}]},"name":"abi_decode_array_enum_GuardParamType_dyn_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6929:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"6937:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6945:5:22","type":""}],"src":"6868:825:22"},{"body":{"nodeType":"YulBlock","src":"7771:1016:22","statements":[{"body":{"nodeType":"YulBlock","src":"7820:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7829:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7832:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7822:6:22"},"nodeType":"YulFunctionCall","src":"7822:12:22"},"nodeType":"YulExpressionStatement","src":"7822:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7799:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"7807:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7795:3:22"},"nodeType":"YulFunctionCall","src":"7795:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"7814:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7791:3:22"},"nodeType":"YulFunctionCall","src":"7791:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7784:6:22"},"nodeType":"YulFunctionCall","src":"7784:35:22"},"nodeType":"YulIf","src":"7781:55:22"},{"nodeType":"YulVariableDeclaration","src":"7845:23:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7861:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7855:5:22"},"nodeType":"YulFunctionCall","src":"7855:13:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7849:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7877:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"7887:4:22","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"7881:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7900:71:22","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7967:2:22"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"7927:39:22"},"nodeType":"YulFunctionCall","src":"7927:43:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7911:15:22"},"nodeType":"YulFunctionCall","src":"7911:60:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7904:3:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7980:16:22","value":{"name":"dst","nodeType":"YulIdentifier","src":"7993:3:22"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"7984:5:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8012:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"8017:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8005:6:22"},"nodeType":"YulFunctionCall","src":"8005:15:22"},"nodeType":"YulExpressionStatement","src":"8005:15:22"},{"nodeType":"YulAssignment","src":"8029:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8040:3:22"},{"name":"_2","nodeType":"YulIdentifier","src":"8045:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8036:3:22"},"nodeType":"YulFunctionCall","src":"8036:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"8029:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"8057:46:22","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8079:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8091:1:22","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"8094:2:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8087:3:22"},"nodeType":"YulFunctionCall","src":"8087:10:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8075:3:22"},"nodeType":"YulFunctionCall","src":"8075:23:22"},{"name":"_2","nodeType":"YulIdentifier","src":"8100:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8071:3:22"},"nodeType":"YulFunctionCall","src":"8071:32:22"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"8061:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8131:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8140:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8143:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8133:6:22"},"nodeType":"YulFunctionCall","src":"8133:12:22"},"nodeType":"YulExpressionStatement","src":"8133:12:22"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"8118:6:22"},{"name":"end","nodeType":"YulIdentifier","src":"8126:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8115:2:22"},"nodeType":"YulFunctionCall","src":"8115:15:22"},"nodeType":"YulIf","src":"8112:35:22"},{"nodeType":"YulVariableDeclaration","src":"8156:26:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8171:6:22"},{"name":"_2","nodeType":"YulIdentifier","src":"8179:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:22"},"nodeType":"YulFunctionCall","src":"8167:15:22"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"8160:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8247:511:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8261:29:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8286:3:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8280:5:22"},"nodeType":"YulFunctionCall","src":"8280:10:22"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"8265:11:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8354:74:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8372:11:22","value":{"kind":"number","nodeType":"YulLiteral","src":"8382:1:22","type":"","value":"0"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"8376:2:22","type":""}]},{"expression":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"8407:2:22"},{"name":"_3","nodeType":"YulIdentifier","src":"8411:2:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8400:6:22"},"nodeType":"YulFunctionCall","src":"8400:14:22"},"nodeType":"YulExpressionStatement","src":"8400:14:22"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"8309:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"8322:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8306:2:22"},"nodeType":"YulFunctionCall","src":"8306:35:22"},"nodeType":"YulIf","src":"8303:125:22"},{"nodeType":"YulVariableDeclaration","src":"8441:34:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8455:6:22"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"8463:11:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8451:3:22"},"nodeType":"YulFunctionCall","src":"8451:24:22"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"8445:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8533:74:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8551:11:22","value":{"kind":"number","nodeType":"YulLiteral","src":"8561:1:22","type":"","value":"0"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"8555:2:22","type":""}]},{"expression":{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"8586:2:22"},{"name":"_5","nodeType":"YulIdentifier","src":"8590:2:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8579:6:22"},"nodeType":"YulFunctionCall","src":"8579:14:22"},"nodeType":"YulExpressionStatement","src":"8579:14:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"8506:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"8510:2:22","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8502:3:22"},"nodeType":"YulFunctionCall","src":"8502:11:22"},{"name":"end","nodeType":"YulIdentifier","src":"8515:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8498:3:22"},"nodeType":"YulFunctionCall","src":"8498:21:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8491:6:22"},"nodeType":"YulFunctionCall","src":"8491:29:22"},"nodeType":"YulIf","src":"8488:119:22"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8627:3:22"},{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"8682:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"8686:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8678:3:22"},"nodeType":"YulFunctionCall","src":"8678:11:22"},{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"8701:2:22"},{"name":"_2","nodeType":"YulIdentifier","src":"8705:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8697:3:22"},"nodeType":"YulFunctionCall","src":"8697:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8691:5:22"},"nodeType":"YulFunctionCall","src":"8691:18:22"},{"name":"end","nodeType":"YulIdentifier","src":"8711:3:22"}],"functionName":{"name":"abi_decode_available_length_string_fromMemory","nodeType":"YulIdentifier","src":"8632:45:22"},"nodeType":"YulFunctionCall","src":"8632:83:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8620:6:22"},"nodeType":"YulFunctionCall","src":"8620:96:22"},"nodeType":"YulExpressionStatement","src":"8620:96:22"},{"nodeType":"YulAssignment","src":"8729:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8740:3:22"},{"name":"_2","nodeType":"YulIdentifier","src":"8745:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8736:3:22"},"nodeType":"YulFunctionCall","src":"8736:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"8729:3:22"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8202:3:22"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"8207:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8199:2:22"},"nodeType":"YulFunctionCall","src":"8199:15:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8215:23:22","statements":[{"nodeType":"YulAssignment","src":"8217:19:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8228:3:22"},{"name":"_2","nodeType":"YulIdentifier","src":"8233:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:22"},"nodeType":"YulFunctionCall","src":"8224:12:22"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"8217:3:22"}]}]},"pre":{"nodeType":"YulBlock","src":"8195:3:22","statements":[]},"src":"8191:567:22"},{"nodeType":"YulAssignment","src":"8767:14:22","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"8776:5:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8767:5:22"}]}]},"name":"abi_decode_array_bytes_dyn_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7745:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"7753:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7761:5:22","type":""}],"src":"7698:1089:22"},{"body":{"nodeType":"YulBlock","src":"8931:2275:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8941:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"8951:2:22","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8945:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8998:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9007:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9010:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9000:6:22"},"nodeType":"YulFunctionCall","src":"9000:12:22"},"nodeType":"YulExpressionStatement","src":"9000:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8973:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"8982:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8969:3:22"},"nodeType":"YulFunctionCall","src":"8969:23:22"},{"name":"_1","nodeType":"YulIdentifier","src":"8994:2:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8965:3:22"},"nodeType":"YulFunctionCall","src":"8965:32:22"},"nodeType":"YulIf","src":"8962:52:22"},{"nodeType":"YulVariableDeclaration","src":"9023:30:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9043:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9037:5:22"},"nodeType":"YulFunctionCall","src":"9037:16:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9027:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9062:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9072:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"9066:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9117:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9126:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9129:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9119:6:22"},"nodeType":"YulFunctionCall","src":"9119:12:22"},"nodeType":"YulExpressionStatement","src":"9119:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9105:6:22"},{"name":"_2","nodeType":"YulIdentifier","src":"9113:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9102:2:22"},"nodeType":"YulFunctionCall","src":"9102:14:22"},"nodeType":"YulIf","src":"9099:34:22"},{"nodeType":"YulVariableDeclaration","src":"9142:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9156:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"9167:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9152:3:22"},"nodeType":"YulFunctionCall","src":"9152:22:22"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"9146:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9222:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9231:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9234:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9224:6:22"},"nodeType":"YulFunctionCall","src":"9224:12:22"},"nodeType":"YulExpressionStatement","src":"9224:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9201:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"9205:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9197:3:22"},"nodeType":"YulFunctionCall","src":"9197:13:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9212:7:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9193:3:22"},"nodeType":"YulFunctionCall","src":"9193:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9186:6:22"},"nodeType":"YulFunctionCall","src":"9186:35:22"},"nodeType":"YulIf","src":"9183:55:22"},{"nodeType":"YulVariableDeclaration","src":"9247:19:22","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9263:2:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9257:5:22"},"nodeType":"YulFunctionCall","src":"9257:9:22"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"9251:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9275:71:22","value":{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"9342:2:22"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"9302:39:22"},"nodeType":"YulFunctionCall","src":"9302:43:22"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"9286:15:22"},"nodeType":"YulFunctionCall","src":"9286:60:22"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"9279:3:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9355:16:22","value":{"name":"dst","nodeType":"YulIdentifier","src":"9368:3:22"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"9359:5:22","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9387:3:22"},{"name":"_4","nodeType":"YulIdentifier","src":"9392:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9380:6:22"},"nodeType":"YulFunctionCall","src":"9380:15:22"},"nodeType":"YulExpressionStatement","src":"9380:15:22"},{"nodeType":"YulAssignment","src":"9404:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9415:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"9420:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9411:3:22"},"nodeType":"YulFunctionCall","src":"9411:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9404:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"9432:42:22","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9454:2:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9462:1:22","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"9465:2:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9458:3:22"},"nodeType":"YulFunctionCall","src":"9458:10:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9450:3:22"},"nodeType":"YulFunctionCall","src":"9450:19:22"},{"name":"_1","nodeType":"YulIdentifier","src":"9471:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9446:3:22"},"nodeType":"YulFunctionCall","src":"9446:28:22"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"9436:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9506:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9515:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9518:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9508:6:22"},"nodeType":"YulFunctionCall","src":"9508:12:22"},"nodeType":"YulExpressionStatement","src":"9508:12:22"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"9489:6:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9497:7:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9486:2:22"},"nodeType":"YulFunctionCall","src":"9486:19:22"},"nodeType":"YulIf","src":"9483:39:22"},{"nodeType":"YulVariableDeclaration","src":"9531:22:22","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9546:2:22"},{"name":"_1","nodeType":"YulIdentifier","src":"9550:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9542:3:22"},"nodeType":"YulFunctionCall","src":"9542:11:22"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"9535:3:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9618:1558:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9632:29:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9657:3:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9651:5:22"},"nodeType":"YulFunctionCall","src":"9651:10:22"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"9636:11:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9697:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9706:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9709:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9699:6:22"},"nodeType":"YulFunctionCall","src":"9699:12:22"},"nodeType":"YulExpressionStatement","src":"9699:12:22"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"9680:11:22"},{"name":"_2","nodeType":"YulIdentifier","src":"9693:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9677:2:22"},"nodeType":"YulFunctionCall","src":"9677:19:22"},"nodeType":"YulIf","src":"9674:39:22"},{"nodeType":"YulVariableDeclaration","src":"9726:30:22","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9740:2:22"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"9744:11:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9736:3:22"},"nodeType":"YulFunctionCall","src":"9736:20:22"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"9730:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9826:74:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9844:11:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9854:1:22","type":"","value":"0"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"9848:2:22","type":""}]},{"expression":{"arguments":[{"name":"_6","nodeType":"YulIdentifier","src":"9879:2:22"},{"name":"_6","nodeType":"YulIdentifier","src":"9883:2:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9872:6:22"},"nodeType":"YulFunctionCall","src":"9872:14:22"},"nodeType":"YulExpressionStatement","src":"9872:14:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9784:7:22"},{"name":"_5","nodeType":"YulIdentifier","src":"9793:2:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9780:3:22"},"nodeType":"YulFunctionCall","src":"9780:16:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9802:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9798:3:22"},"nodeType":"YulFunctionCall","src":"9798:7:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9776:3:22"},"nodeType":"YulFunctionCall","src":"9776:30:22"},{"kind":"number","nodeType":"YulLiteral","src":"9808:4:22","type":"","value":"0xc0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9772:3:22"},"nodeType":"YulFunctionCall","src":"9772:41:22"},"nodeType":"YulIf","src":"9769:131:22"},{"nodeType":"YulVariableDeclaration","src":"9913:35:22","value":{"arguments":[],"functionName":{"name":"allocate_memory_1834","nodeType":"YulIdentifier","src":"9926:20:22"},"nodeType":"YulFunctionCall","src":"9926:22:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9917:5:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9961:34:22","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"9987:2:22"},{"name":"_1","nodeType":"YulIdentifier","src":"9991:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9983:3:22"},"nodeType":"YulFunctionCall","src":"9983:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9977:5:22"},"nodeType":"YulFunctionCall","src":"9977:18:22"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"9965:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"10040:74:22","statements":[{"nodeType":"YulVariableDeclaration","src":"10058:11:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10068:1:22","type":"","value":"0"},"variables":[{"name":"_7","nodeType":"YulTypedName","src":"10062:2:22","type":""}]},{"expression":{"arguments":[{"name":"_7","nodeType":"YulIdentifier","src":"10093:2:22"},{"name":"_7","nodeType":"YulIdentifier","src":"10097:2:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10086:6:22"},"nodeType":"YulFunctionCall","src":"10086:14:22"},"nodeType":"YulExpressionStatement","src":"10086:14:22"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"10014:8:22"},{"name":"_2","nodeType":"YulIdentifier","src":"10024:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10011:2:22"},"nodeType":"YulFunctionCall","src":"10011:16:22"},"nodeType":"YulIf","src":"10008:106:22"},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10134:5:22"},{"arguments":[{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"10178:2:22"},{"name":"offset_1","nodeType":"YulIdentifier","src":"10182:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10174:3:22"},"nodeType":"YulFunctionCall","src":"10174:17:22"},{"name":"_1","nodeType":"YulIdentifier","src":"10193:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10170:3:22"},"nodeType":"YulFunctionCall","src":"10170:26:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10198:7:22"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"10141:28:22"},"nodeType":"YulFunctionCall","src":"10141:65:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10127:6:22"},"nodeType":"YulFunctionCall","src":"10127:80:22"},"nodeType":"YulExpressionStatement","src":"10127:80:22"},{"nodeType":"YulVariableDeclaration","src":"10220:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10230:2:22","type":"","value":"64"},"variables":[{"name":"_8","nodeType":"YulTypedName","src":"10224:2:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10256:5:22"},{"name":"_1","nodeType":"YulIdentifier","src":"10263:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10252:3:22"},"nodeType":"YulFunctionCall","src":"10252:14:22"},{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"10302:2:22"},{"name":"_8","nodeType":"YulIdentifier","src":"10306:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10298:3:22"},"nodeType":"YulFunctionCall","src":"10298:11:22"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"10268:29:22"},"nodeType":"YulFunctionCall","src":"10268:42:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10245:6:22"},"nodeType":"YulFunctionCall","src":"10245:66:22"},"nodeType":"YulExpressionStatement","src":"10245:66:22"},{"nodeType":"YulVariableDeclaration","src":"10324:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10334:2:22","type":"","value":"96"},"variables":[{"name":"_9","nodeType":"YulTypedName","src":"10328:2:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10360:5:22"},{"name":"_8","nodeType":"YulIdentifier","src":"10367:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10356:3:22"},"nodeType":"YulFunctionCall","src":"10356:14:22"},{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"10405:2:22"},{"name":"_9","nodeType":"YulIdentifier","src":"10409:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10401:3:22"},"nodeType":"YulFunctionCall","src":"10401:11:22"}],"functionName":{"name":"abi_decode_bytes2_fromMemory","nodeType":"YulIdentifier","src":"10372:28:22"},"nodeType":"YulFunctionCall","src":"10372:41:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10349:6:22"},"nodeType":"YulFunctionCall","src":"10349:65:22"},"nodeType":"YulExpressionStatement","src":"10349:65:22"},{"nodeType":"YulVariableDeclaration","src":"10427:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10438:3:22","type":"","value":"128"},"variables":[{"name":"_10","nodeType":"YulTypedName","src":"10431:3:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10465:5:22"},{"name":"_9","nodeType":"YulIdentifier","src":"10472:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10461:3:22"},"nodeType":"YulFunctionCall","src":"10461:14:22"},{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"10487:2:22"},{"name":"_10","nodeType":"YulIdentifier","src":"10491:3:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10483:3:22"},"nodeType":"YulFunctionCall","src":"10483:12:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10477:5:22"},"nodeType":"YulFunctionCall","src":"10477:19:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10454:6:22"},"nodeType":"YulFunctionCall","src":"10454:43:22"},"nodeType":"YulExpressionStatement","src":"10454:43:22"},{"nodeType":"YulVariableDeclaration","src":"10510:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10521:3:22","type":"","value":"160"},"variables":[{"name":"_11","nodeType":"YulTypedName","src":"10514:3:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10537:35:22","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"10563:2:22"},{"name":"_11","nodeType":"YulIdentifier","src":"10567:3:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10559:3:22"},"nodeType":"YulFunctionCall","src":"10559:12:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10553:5:22"},"nodeType":"YulFunctionCall","src":"10553:19:22"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"10541:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"10617:77:22","statements":[{"nodeType":"YulVariableDeclaration","src":"10635:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10646:1:22","type":"","value":"0"},"variables":[{"name":"_12","nodeType":"YulTypedName","src":"10639:3:22","type":""}]},{"expression":{"arguments":[{"name":"_12","nodeType":"YulIdentifier","src":"10671:3:22"},{"name":"_12","nodeType":"YulIdentifier","src":"10676:3:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10664:6:22"},"nodeType":"YulFunctionCall","src":"10664:16:22"},"nodeType":"YulExpressionStatement","src":"10664:16:22"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"10591:8:22"},{"name":"_2","nodeType":"YulIdentifier","src":"10601:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10588:2:22"},"nodeType":"YulFunctionCall","src":"10588:16:22"},"nodeType":"YulIf","src":"10585:109:22"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10718:5:22"},{"name":"_10","nodeType":"YulIdentifier","src":"10725:3:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10714:3:22"},"nodeType":"YulFunctionCall","src":"10714:15:22"},{"arguments":[{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"10791:2:22"},{"name":"offset_2","nodeType":"YulIdentifier","src":"10795:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10787:3:22"},"nodeType":"YulFunctionCall","src":"10787:17:22"},{"name":"_1","nodeType":"YulIdentifier","src":"10806:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10783:3:22"},"nodeType":"YulFunctionCall","src":"10783:26:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10811:7:22"}],"functionName":{"name":"abi_decode_array_enum_GuardParamType_dyn_fromMemory","nodeType":"YulIdentifier","src":"10731:51:22"},"nodeType":"YulFunctionCall","src":"10731:88:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10707:6:22"},"nodeType":"YulFunctionCall","src":"10707:113:22"},"nodeType":"YulExpressionStatement","src":"10707:113:22"},{"nodeType":"YulVariableDeclaration","src":"10833:36:22","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"10859:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"10863:4:22","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10855:3:22"},"nodeType":"YulFunctionCall","src":"10855:13:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10849:5:22"},"nodeType":"YulFunctionCall","src":"10849:20:22"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"10837:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"10914:77:22","statements":[{"nodeType":"YulVariableDeclaration","src":"10932:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10943:1:22","type":"","value":"0"},"variables":[{"name":"_13","nodeType":"YulTypedName","src":"10936:3:22","type":""}]},{"expression":{"arguments":[{"name":"_13","nodeType":"YulIdentifier","src":"10968:3:22"},{"name":"_13","nodeType":"YulIdentifier","src":"10973:3:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10961:6:22"},"nodeType":"YulFunctionCall","src":"10961:16:22"},"nodeType":"YulExpressionStatement","src":"10961:16:22"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"10888:8:22"},{"name":"_2","nodeType":"YulIdentifier","src":"10898:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10885:2:22"},"nodeType":"YulFunctionCall","src":"10885:16:22"},"nodeType":"YulIf","src":"10882:109:22"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11015:5:22"},{"name":"_11","nodeType":"YulIdentifier","src":"11022:3:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11011:3:22"},"nodeType":"YulFunctionCall","src":"11011:15:22"},{"arguments":[{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"11074:2:22"},{"name":"offset_3","nodeType":"YulIdentifier","src":"11078:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11070:3:22"},"nodeType":"YulFunctionCall","src":"11070:17:22"},{"name":"_1","nodeType":"YulIdentifier","src":"11089:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11066:3:22"},"nodeType":"YulFunctionCall","src":"11066:26:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11094:7:22"}],"functionName":{"name":"abi_decode_array_bytes_dyn_fromMemory","nodeType":"YulIdentifier","src":"11028:37:22"},"nodeType":"YulFunctionCall","src":"11028:74:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11004:6:22"},"nodeType":"YulFunctionCall","src":"11004:99:22"},"nodeType":"YulExpressionStatement","src":"11004:99:22"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11123:3:22"},{"name":"value","nodeType":"YulIdentifier","src":"11128:5:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11116:6:22"},"nodeType":"YulFunctionCall","src":"11116:18:22"},"nodeType":"YulExpressionStatement","src":"11116:18:22"},{"nodeType":"YulAssignment","src":"11147:19:22","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11158:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"11163:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11154:3:22"},"nodeType":"YulFunctionCall","src":"11154:12:22"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"11147:3:22"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9573:3:22"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"9578:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9570:2:22"},"nodeType":"YulFunctionCall","src":"9570:15:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9586:23:22","statements":[{"nodeType":"YulAssignment","src":"9588:19:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9599:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"9604:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9595:3:22"},"nodeType":"YulFunctionCall","src":"9595:12:22"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"9588:3:22"}]}]},"pre":{"nodeType":"YulBlock","src":"9566:3:22","statements":[]},"src":"9562:1614:22"},{"nodeType":"YulAssignment","src":"11185:15:22","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"11195:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11185:6:22"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_GuardDefinition_$1503_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8897:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8908:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8920:6:22","type":""}],"src":"8792:2414:22"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_1834() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xc0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_uint16_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_SmartVaultFees_$2119_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 96)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, abi_decode_uint16_fromMemory(headStart))\n        mstore(add(memPtr, 32), abi_decode_uint16_fromMemory(add(headStart, 32)))\n        mstore(add(memPtr, 64), abi_decode_uint16_fromMemory(add(headStart, 64)))\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_encode_tuple_t_address_t_enum$_RequestType_$2912__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        if iszero(lt(value1, 5))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_available_length_string_fromMemory(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let _1 := 0x20\n        array := allocate_memory(add(and(add(length, 31), not(31)), _1))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(array, i), _1), mload(add(src, i)))\n        }\n        mstore(add(add(array, length), _1), 0)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string_fromMemory(add(offset, 0x20), mload(offset), end)\n    }\n    function abi_decode_bytes2_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, shl(240, 65535)))) { revert(0, 0) }\n    }\n    function abi_decode_array_enum_GuardParamType_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := mload(src)\n            if iszero(lt(value, 9))\n            {\n                let _3 := 0\n                revert(_3, _3)\n            }\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_bytes_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff)\n            {\n                let _3 := 0\n                revert(_3, _3)\n            }\n            let _4 := add(offset, innerOffset)\n            if iszero(slt(add(_4, 63), end))\n            {\n                let _5 := 0\n                revert(_5, _5)\n            }\n            mstore(dst, abi_decode_available_length_string_fromMemory(add(_4, 64), mload(add(_4, _2)), end))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_struct$_GuardDefinition_$1503_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, shl(5, _4)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let innerOffset := mload(src)\n            if gt(innerOffset, _2) { revert(0, 0) }\n            let _5 := add(_3, innerOffset)\n            if slt(add(sub(dataEnd, _5), not(31)), 0xc0)\n            {\n                let _6 := 0\n                revert(_6, _6)\n            }\n            let value := allocate_memory_1834()\n            let offset_1 := mload(add(_5, _1))\n            if gt(offset_1, _2)\n            {\n                let _7 := 0\n                revert(_7, _7)\n            }\n            mstore(value, abi_decode_string_fromMemory(add(add(_5, offset_1), _1), dataEnd))\n            let _8 := 64\n            mstore(add(value, _1), abi_decode_address_fromMemory(add(_5, _8)))\n            let _9 := 96\n            mstore(add(value, _8), abi_decode_bytes2_fromMemory(add(_5, _9)))\n            let _10 := 128\n            mstore(add(value, _9), mload(add(_5, _10)))\n            let _11 := 160\n            let offset_2 := mload(add(_5, _11))\n            if gt(offset_2, _2)\n            {\n                let _12 := 0\n                revert(_12, _12)\n            }\n            mstore(add(value, _10), abi_decode_array_enum_GuardParamType_dyn_fromMemory(add(add(_5, offset_2), _1), dataEnd))\n            let offset_3 := mload(add(_5, 0xc0))\n            if gt(offset_3, _2)\n            {\n                let _13 := 0\n                revert(_13, _13)\n            }\n            mstore(add(value, _11), abi_decode_array_bytes_dyn_fromMemory(add(add(_5, offset_3), _1), dataEnd))\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"immutableReferences":{"273":[{"start":295,"length":32},{"start":556,"length":32}],"277":[{"start":514,"length":32}],"281":[{"start":934,"length":32}]}},"methodIdentifiers":{"validateSmartVault(address,address)":"ffa9f16a","validateSmartVaults(address,address[])":"a0c02faf"}}}},"src/interfaces/IAssetGroupRegistry.sol":{"IAssetGroupRegistry":{"abi":[{"type":"function","name":"allowToken","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"allowTokenBatch","inputs":[{"name":"tokens","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assetGroupLength","inputs":[{"name":"assetGroupId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"checkAssetGroupExists","inputs":[{"name":"assets","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"isTokenAllowed","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"isAllowed","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"listAssetGroup","inputs":[{"name":"assetGroupId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"assets","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"numberOfAssetGroups","inputs":[],"outputs":[{"name":"count","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"registerAssetGroup","inputs":[{"name":"assets","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"id","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"validateAssetGroup","inputs":[{"name":"assetGroupId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"view"},{"type":"event","name":"AssetGroupRegistered","inputs":[{"name":"assetGroupId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"TokenAllowed","inputs":[{"name":"token","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetGroupId\",\"type\":\"uint256\"}],\"name\":\"AssetGroupRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenAllowed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"allowToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"allowTokenBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetGroupId\",\"type\":\"uint256\"}],\"name\":\"assetGroupLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"checkAssetGroupExists\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isTokenAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetGroupId\",\"type\":\"uint256\"}],\"name\":\"listAssetGroup\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfAssetGroups\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"registerAssetGroup\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetGroupId\",\"type\":\"uint256\"}],\"name\":\"validateAssetGroup\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AssetGroupRegistered(uint256)\":{\"params\":{\"assetGroupId\":\"ID of the newly registered asset group.\"}},\"TokenAllowed(address)\":{\"params\":{\"token\":\"Address of newly allowed token.\"}}},\"kind\":\"dev\",\"methods\":{\"allowToken(address)\":{\"details\":\"Requirements: - can only be called by the ROLE_SPOOL_ADMIN\",\"params\":{\"token\":\"Address of token to be allowed.\"}},\"allowTokenBatch(address[])\":{\"details\":\"Requirements: - can only be called by the ROLE_SPOOL_ADMIN\",\"params\":{\"tokens\":\"Addresses of tokens to be allowed.\"}},\"assetGroupLength(uint256)\":{\"details\":\"Requirements: - must provide a valid ID for the asset group\",\"returns\":{\"length\":\"length\"}},\"checkAssetGroupExists(address[])\":{\"params\":{\"assets\":\"Assets composing the asset group.\"},\"returns\":{\"_0\":\"Asset group ID if such asset group exists, 0 otherwise.\"}},\"isTokenAllowed(address)\":{\"params\":{\"token\":\"Address of token to check.\"},\"returns\":{\"isAllowed\":\"True if token is allowed, false otherwise.\"}},\"listAssetGroup(uint256)\":{\"details\":\"Requirements: - must provide a valid ID for the asset group\",\"returns\":{\"assets\":\"Array of assets in the asset group.\"}},\"numberOfAssetGroups()\":{\"returns\":{\"count\":\"Number of registered asset groups.\"}},\"registerAssetGroup(address[])\":{\"details\":\"Requirements: - must provide at least one asset - all assets must be allowed - assets must be sorted - such asset group should not exist yet - can only be called by the ROLE_SPOOL_ADMIN\",\"params\":{\"assets\":\"Array of assets in the asset group.\"},\"returns\":{\"id\":\"Sequential ID assigned to the asset group.\"}},\"validateAssetGroup(uint256)\":{\"details\":\"Function reverts when ID does not represent an asset group.\",\"params\":{\"assetGroupId\":\"ID to validate.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"AssetGroupRegistered(uint256)\":{\"notice\":\"Emitted when asset group is registered.\"},\"TokenAllowed(address)\":{\"notice\":\"Emitted when token is allowed to be used as an asset.\"}},\"kind\":\"user\",\"methods\":{\"allowToken(address)\":{\"notice\":\"Allows a token to be used as an asset.\"},\"allowTokenBatch(address[])\":{\"notice\":\"Allows tokens to be used as assets.\"},\"assetGroupLength(uint256)\":{\"notice\":\"Gets asset group length.\"},\"checkAssetGroupExists(address[])\":{\"notice\":\"Checks if asset group composed of assets already exists. Will revert if provided assets cannot form an asset group.\"},\"isTokenAllowed(address)\":{\"notice\":\"Checks if token is allowed to be used as an asset.\"},\"listAssetGroup(uint256)\":{\"notice\":\"Gets asset group by its ID.\"},\"numberOfAssetGroups()\":{\"notice\":\"Gets number of registered asset groups.\"},\"registerAssetGroup(address[])\":{\"notice\":\"Registers a new asset group.\"},\"validateAssetGroup(uint256)\":{\"notice\":\"Validates that provided ID represents an asset group.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IAssetGroupRegistry.sol\":\"IAssetGroupRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/IAssetGroupRegistry.sol\":{\"keccak256\":\"0x86edbe236205028d1976661910e6427ffb7682b0c0469597bcb9f2f46dea241b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fa0f0363dfaebae4aaecd64e3897193768eaa9f2332836e51e292cb10707edfe\",\"dweb:/ipfs/QmNRPhsL19Td4LoyCnyfsqanDqnp3CyRfaL5Djt9r8koQk\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x0d3ff2c9021ae4bdb7e7b72c25841cd0ff42827509e3785eebe874fd7d03f99a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c28c3b8accead50bebed2cbd586c36c7febbca51dad31c2a560d510419b8593\",\"dweb:/ipfs/QmbdJD5RNE7HxPyg8S4PN6pAXktjXCrtLE6PZXDfig1xMZ\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowToken(address)":"b53472ef","allowTokenBatch(address[])":"256f5300","assetGroupLength(uint256)":"46598eb4","checkAssetGroupExists(address[])":"c1925bb6","isTokenAllowed(address)":"f9eaee0d","listAssetGroup(uint256)":"dd0fe31a","numberOfAssetGroups()":"6184bcc8","registerAssetGroup(address[])":"17abe90c","validateAssetGroup(uint256)":"e065ce6e"}}}},"src/interfaces/IDAI.sol":{"IDAI":{"abi":[{"type":"function","name":"permit","inputs":[{"name":"holder","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"expiry","type":"uint256","internalType":"uint256"},{"name":"allowed","type":"bool","internalType":"bool"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IDAI.sol\":\"IDAI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/IDAI.sol\":{\"keccak256\":\"0xdd6fc9f1d0d2bf0805cc26c4ea166268e29b75c0499754b9a4dfe9f0e8e73344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d9ead64be6897ae4983520664283012228a64b9bd308efa4009228044efd1d2\",\"dweb:/ipfs/QmaWxR4uj3zoa8FCTBnfRtKHMPkGiisgpRKpD5q28P5cMz\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)":"8fcbaf0c"}}}},"src/interfaces/IDepositManager.sol":{"IDepositManager":{"abi":[{"type":"function","name":"claimSmartVaultTokens","inputs":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"nftIds","type":"uint256[]","internalType":"uint256[]"},{"name":"nftAmounts","type":"uint256[]","internalType":"uint256[]"},{"name":"tokens","type":"address[]","internalType":"address[]"},{"name":"owner","type":"address","internalType":"address"},{"name":"executor","type":"address","internalType":"address"},{"name":"flushIndexToSync","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"claimedTokens","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"depositAssets","inputs":[{"name":"bag","type":"tuple","internalType":"struct DepositBag","components":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"assets","type":"uint256[]","internalType":"uint256[]"},{"name":"receiver","type":"address","internalType":"address"},{"name":"referral","type":"address","internalType":"address"},{"name":"doFlush","type":"bool","internalType":"bool"}]},{"name":"bag2","type":"tuple","internalType":"struct DepositExtras","components":[{"name":"depositor","type":"address","internalType":"address"},{"name":"tokens","type":"address[]","internalType":"address[]"},{"name":"strategies","type":"address[]","internalType":"address[]"},{"name":"allocations","type":"uint256","internalType":"uint16a16"},{"name":"flushIndex","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nftId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"flushSmartVault","inputs":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"flushIndex","type":"uint256","internalType":"uint256"},{"name":"strategies","type":"address[]","internalType":"address[]"},{"name":"allocations","type":"uint256","internalType":"uint16a16"},{"name":"tokens","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"dhwIndexes","type":"uint256","internalType":"uint16a16"}],"stateMutability":"nonpayable"},{"type":"function","name":"getClaimedVaultTokensPreview","inputs":[{"name":"smartVaultAddress","type":"address","internalType":"address"},{"name":"data","type":"tuple","internalType":"struct DepositMetadata","components":[{"name":"assets","type":"uint256[]","internalType":"uint256[]"},{"name":"initiated","type":"uint256","internalType":"uint256"},{"name":"flushIndex","type":"uint256","internalType":"uint256"}]},{"name":"nftShares","type":"uint256","internalType":"uint256"},{"name":"mintedSVTs","type":"uint256","internalType":"uint256"},{"name":"tokens","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getDepositRatio","inputs":[{"name":"tokens","type":"address[]","internalType":"address[]"},{"name":"allocations","type":"uint256","internalType":"uint16a16"},{"name":"strategies","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"ratio","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"recoverPendingDeposits","inputs":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"flushIndex","type":"uint256","internalType":"uint256"},{"name":"strategies","type":"address[]","internalType":"address[]"},{"name":"tokens","type":"address[]","internalType":"address[]"},{"name":"emergencyWallet","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"smartVaultDeposits","inputs":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"flushIdx","type":"uint256","internalType":"uint256"},{"name":"assetGroupLength","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"syncDeposits","inputs":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"bag","type":"uint256[2]","internalType":"uint256[2]"},{"name":"strategies","type":"address[]","internalType":"address[]"},{"name":"dhwIndexes","type":"uint256[2]","internalType":"uint16a16[2]"},{"name":"assetGroup","type":"address[]","internalType":"address[]"},{"name":"fees","type":"tuple","internalType":"struct SmartVaultFees","components":[{"name":"managementFeePct","type":"uint16","internalType":"uint16"},{"name":"depositFeePct","type":"uint16","internalType":"uint16"},{"name":"performanceFeePct","type":"uint16","internalType":"uint16"}]}],"outputs":[{"name":"syncResult","type":"tuple","internalType":"struct DepositSyncResult","components":[{"name":"mintedSVTs","type":"uint256","internalType":"uint256"},{"name":"dhwTimestamp","type":"uint256","internalType":"uint256"},{"name":"feeSVTs","type":"uint256","internalType":"uint256"},{"name":"feesCollected","type":"tuple","internalType":"struct SmartVaultFeesCollected","components":[{"name":"depositFees","type":"uint256","internalType":"uint256"},{"name":"performanceFees","type":"uint256","internalType":"uint256"},{"name":"managementFees","type":"uint256","internalType":"uint256"}]},{"name":"initialLockedSVTs","type":"uint256","internalType":"uint256"},{"name":"sstShares","type":"uint256[]","internalType":"uint256[]"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"syncDepositsSimulate","inputs":[{"name":"parameters","type":"tuple","internalType":"struct SimulateDepositParams","components":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"bag","type":"uint256[2]","internalType":"uint256[2]"},{"name":"strategies","type":"address[]","internalType":"address[]"},{"name":"assetGroup","type":"address[]","internalType":"address[]"},{"name":"dhwIndexes","type":"uint256","internalType":"uint16a16"},{"name":"dhwIndexesOld","type":"uint256","internalType":"uint16a16"},{"name":"fees","type":"tuple","internalType":"struct SmartVaultFees","components":[{"name":"managementFeePct","type":"uint16","internalType":"uint16"},{"name":"depositFeePct","type":"uint16","internalType":"uint16"},{"name":"performanceFeePct","type":"uint16","internalType":"uint16"}]}]}],"outputs":[{"name":"syncResult","type":"tuple","internalType":"struct DepositSyncResult","components":[{"name":"mintedSVTs","type":"uint256","internalType":"uint256"},{"name":"dhwTimestamp","type":"uint256","internalType":"uint256"},{"name":"feeSVTs","type":"uint256","internalType":"uint256"},{"name":"feesCollected","type":"tuple","internalType":"struct SmartVaultFeesCollected","components":[{"name":"depositFees","type":"uint256","internalType":"uint256"},{"name":"performanceFees","type":"uint256","internalType":"uint256"},{"name":"managementFees","type":"uint256","internalType":"uint256"}]},{"name":"initialLockedSVTs","type":"uint256","internalType":"uint256"},{"name":"sstShares","type":"uint256[]","internalType":"uint256[]"}]}],"stateMutability":"view"},{"type":"event","name":"DepositInitiated","inputs":[{"name":"smartVault","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"depositId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"flushIndex","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"assets","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"depositor","type":"address","indexed":false,"internalType":"address"},{"name":"referral","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"PendingDepositsRecovered","inputs":[{"name":"smartVault","type":"address","indexed":true,"internalType":"address"},{"name":"recoveredAssets","type":"uint256[]","indexed":false,"internalType":"uint256[]"}],"anonymous":false},{"type":"event","name":"SmartVaultFeesMinted","inputs":[{"name":"smartVault","type":"address","indexed":true,"internalType":"address"},{"name":"smartVaultFeesCollected","type":"tuple","indexed":false,"internalType":"struct SmartVaultFeesCollected","components":[{"name":"depositFees","type":"uint256","internalType":"uint256"},{"name":"performanceFees","type":"uint256","internalType":"uint256"},{"name":"managementFees","type":"uint256","internalType":"uint256"}]}],"anonymous":false},{"type":"event","name":"SmartVaultTokensClaimed","inputs":[{"name":"smartVault","type":"address","indexed":true,"internalType":"address"},{"name":"claimer","type":"address","indexed":true,"internalType":"address"},{"name":"claimedVaultTokens","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"nftIds","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"nftAmounts","type":"uint256[]","indexed":false,"internalType":"uint256[]"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"depositId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"assets\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"}],\"name\":\"DepositInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"recoveredAssets\",\"type\":\"uint256[]\"}],\"name\":\"PendingDepositsRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"depositFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"performanceFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managementFees\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct SmartVaultFeesCollected\",\"name\":\"smartVaultFeesCollected\",\"type\":\"tuple\"}],\"name\":\"SmartVaultFeesMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedVaultTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"}],\"name\":\"SmartVaultTokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"flushIndexToSync\",\"type\":\"uint256\"}],\"name\":\"claimSmartVaultTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimedTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"assets\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"doFlush\",\"type\":\"bool\"}],\"internalType\":\"struct DepositBag\",\"name\":\"bag\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint16a16\",\"name\":\"allocations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct DepositExtras\",\"name\":\"bag2\",\"type\":\"tuple\"}],\"name\":\"depositAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint16a16\",\"name\":\"allocations\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"flushSmartVault\",\"outputs\":[{\"internalType\":\"uint16a16\",\"name\":\"dhwIndexes\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVaultAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"assets\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"initiated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct DepositMetadata\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nftShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintedSVTs\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getClaimedVaultTokensPreview\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint16a16\",\"name\":\"allocations\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"getDepositRatio\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ratio\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"emergencyWallet\",\"type\":\"address\"}],\"name\":\"recoverPendingDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"flushIdx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetGroupLength\",\"type\":\"uint256\"}],\"name\":\"smartVaultDeposits\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256[2]\",\"name\":\"bag\",\"type\":\"uint256[2]\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint16a16[2]\",\"name\":\"dhwIndexes\",\"type\":\"uint256[2]\"},{\"internalType\":\"address[]\",\"name\":\"assetGroup\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"managementFeePct\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"depositFeePct\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"performanceFeePct\",\"type\":\"uint16\"}],\"internalType\":\"struct SmartVaultFees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"name\":\"syncDeposits\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"mintedSVTs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dhwTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeSVTs\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"depositFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"performanceFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managementFees\",\"type\":\"uint256\"}],\"internalType\":\"struct SmartVaultFeesCollected\",\"name\":\"feesCollected\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"initialLockedSVTs\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"sstShares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct DepositSyncResult\",\"name\":\"syncResult\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256[2]\",\"name\":\"bag\",\"type\":\"uint256[2]\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assetGroup\",\"type\":\"address[]\"},{\"internalType\":\"uint16a16\",\"name\":\"dhwIndexes\",\"type\":\"uint256\"},{\"internalType\":\"uint16a16\",\"name\":\"dhwIndexesOld\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"managementFeePct\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"depositFeePct\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"performanceFeePct\",\"type\":\"uint16\"}],\"internalType\":\"struct SmartVaultFees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct SimulateDepositParams\",\"name\":\"parameters\",\"type\":\"tuple\"}],\"name\":\"syncDepositsSimulate\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"mintedSVTs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dhwTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeSVTs\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"depositFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"performanceFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"managementFees\",\"type\":\"uint256\"}],\"internalType\":\"struct SmartVaultFeesCollected\",\"name\":\"feesCollected\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"initialLockedSVTs\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"sstShares\",\"type\":\"uint256[]\"}],\"internalType\":\"struct DepositSyncResult\",\"name\":\"syncResult\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DepositInitiated(address,address,uint256,uint256,uint256[],address,address)\":{\"params\":{\"assets\":\"Amount of assets to deposit\",\"depositId\":\"Deposit NFT ID for this deposit\",\"depositor\":\"Address that initiated the deposit\",\"flushIndex\":\"Flush index the deposit was scheduled for\",\"receiver\":\"Beneficiary of the deposit\",\"referral\":\"Referral address\",\"smartVault\":\"Smart vault address\"}},\"PendingDepositsRecovered(address,uint256[])\":{\"params\":{\"recoveredAssets\":\"Amount of assets recovered.\",\"smartVault\":\"Smart vault address.\"}},\"SmartVaultFeesMinted(address,(uint256,uint256,uint256))\":{\"params\":{\"smartVault\":\"Smart vault address.\",\"smartVaultFeesCollected\":\"Collected smart vault fee amounts.\"}},\"SmartVaultTokensClaimed(address,address,uint256,uint256[],uint256[])\":{\"params\":{\"claimedVaultTokens\":\"Amount of SVTs claimed\",\"claimer\":\"Claimer address\",\"nftAmounts\":\"NFT shares to burn\",\"nftIds\":\"NFTs to burn\",\"smartVault\":\"Smart vault address\"}}},\"kind\":\"dev\",\"methods\":{\"claimSmartVaultTokens(address,uint256[],uint256[],address[],address,address,uint256)\":{\"details\":\"Requirements: - caller must have role ROLE_SMART_VAULT_MANAGER\",\"params\":{\"executor\":\"address executing the claim transaction\",\"flushIndexToSync\":\"next flush index to sync for the smart vault\",\"nftAmounts\":\"NFT amounts to burn (support for partial burn)\",\"nftIds\":\"NFT ids to burn\",\"owner\":\"address owning NFTs\",\"smartVault\":\"Smart Vault address\",\"tokens\":\"vault asset group token addresses\"},\"returns\":{\"claimedTokens\":\"Amount of smart vault tokens claimed.\"}},\"depositAssets((address,uint256[],address,address,bool),(address,address[],address[],uint256,uint256))\":{\"details\":\"Requirements: - caller must have role ROLE_SMART_VAULT_MANAGER\",\"params\":{\"bag\":\"Deposit parameters.\",\"bag2\":\"Extra parameters.\"},\"returns\":{\"nftId\":\"ID of the deposit NFT.\"}},\"flushSmartVault(address,uint256,address[],uint256,address[])\":{\"details\":\"Requirements: - caller must have role ROLE_SMART_VAULT_MANAGER\",\"params\":{\"allocations\":\"vault strategy allocations\",\"flushIndex\":\"index to flush\",\"smartVault\":\"Smart Vault address\",\"strategies\":\"vault strategy addresses\",\"tokens\":\"vault asset group token addresses\"},\"returns\":{\"dhwIndexes\":\"DHW indexes in which the deposits will be included\"}},\"getClaimedVaultTokensPreview(address,(uint256[],uint256,uint256),uint256,uint256,address[])\":{\"params\":{\"data\":\"NFT deposit NFT metadata\",\"mintedSVTs\":\"amount of SVTs minted for this flush\",\"nftShares\":\"amount of NFT shares to burn for SVTs\",\"smartVaultAddress\":\"Smart Vault address\",\"tokens\":\"vault asset group addresses\"}},\"getDepositRatio(address[],uint256,address[])\":{\"params\":{\"allocations\":\"Allocation between strategies of the smart vault.\",\"strategies\":\"Strategies of the smart vault.\",\"tokens\":\"Asset tokens of the smart vault.\"},\"returns\":{\"ratio\":\"Required deposit ratio of the smart vault.\"}},\"recoverPendingDeposits(address,uint256,address[],address[],address)\":{\"details\":\"Requirements: - caller must have role ROLE_SMART_VAULT_MANAGER\",\"params\":{\"emergencyWallet\":\"Address of emergency withdraw wallet.\",\"flushIndex\":\"Flush index for which to recover pending deposits.\",\"smartVault\":\"Smart vault from which to recover pending deposits.\",\"strategies\":\"Addresses of smart vault's strategies.\",\"tokens\":\"Asset group token addresses.\"}},\"syncDeposits(address,uint256[2],address[],uint256[2],address[],(uint16,uint16,uint16))\":{\"details\":\"Requirements: - caller must have role ROLE_SMART_VAULT_MANAGER\",\"params\":{\"assetGroup\":\"vault asset group token addresses\",\"bag\":\"flushIndex, lastDhwSyncedTimestamp\",\"dhwIndexes\":\"dhw indexes for given and previous flushIndex\",\"fees\":\"smart vault fee configuration\",\"smartVault\":\"Smart Vault address\",\"strategies\":\"vault strategy addresses\"},\"returns\":{\"syncResult\":\"Result of the smart vault sync.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"DepositInitiated(address,address,uint256,uint256,uint256[],address,address)\":{\"notice\":\"A deposit has been initiated\"},\"PendingDepositsRecovered(address,uint256[])\":{\"notice\":\"Pending deposits were recovered.\"},\"SmartVaultFeesMinted(address,(uint256,uint256,uint256))\":{\"notice\":\"Smart vault fees collected.\"},\"SmartVaultTokensClaimed(address,address,uint256,uint256[],uint256[])\":{\"notice\":\"User redeemed deposit NFTs for SVTs\"}},\"kind\":\"user\",\"methods\":{\"claimSmartVaultTokens(address,uint256[],uint256[],address[],address,address,uint256)\":{\"notice\":\"Claim SVTs by burning deposit NFTs.\"},\"depositAssets((address,uint256[],address,address,bool),(address,address[],address[],uint256,uint256))\":{\"notice\":\"Adds deposits for the next flush cycle.\"},\"flushSmartVault(address,uint256,address[],uint256,address[])\":{\"notice\":\"Mark deposits ready to be processed in the next DHW cycle\"},\"getClaimedVaultTokensPreview(address,(uint256[],uint256,uint256),uint256,uint256,address[])\":{\"notice\":\"Get the number of SVTs that are available, but haven't been claimed yet, for the given NFT\"},\"getDepositRatio(address[],uint256,address[])\":{\"notice\":\"Gets current required deposit ratio of a smart vault.\"},\"recoverPendingDeposits(address,uint256,address[],address[],address)\":{\"notice\":\"Recovers pending deposits from smart vault.\"},\"smartVaultDeposits(address,uint256,uint256)\":{\"notice\":\"Fetch assets deposited in a given vault flush\"},\"syncDeposits(address,uint256[2],address[],uint256[2],address[],(uint16,uint16,uint16))\":{\"notice\":\"Synchronize vault deposits for completed DHW runs\"},\"syncDepositsSimulate((address,uint256[2],address[],address[],uint256,uint256,(uint16,uint16,uint16)))\":{\"notice\":\"Simulate vault synchronization (i.e. DHW was completed, but vault wasn't synced yet)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IDepositManager.sol\":\"IDepositManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/Constants.sol\":{\"keccak256\":\"0x14098998da750616c31e480b982f25c37d0cb60a1c7cebafe2d17b4670a41176\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://501f5aead8ee02766e81074fa96a2584006ce26c00a9d0881bd5217a7da209eb\",\"dweb:/ipfs/QmQMHVArLXpsqyTt4XBTef9d6wkYuRPJdizrpugkdYW4G2\"]},\"src/interfaces/IDepositManager.sol\":{\"keccak256\":\"0xb48577b668b117d0ada011bfe742e5b78e2ae3e55847e200204332ef1b9abd6f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a21d1175bc5b6b92f97afe23e1de3fea6d2c1569d250da7425c3d9075251881a\",\"dweb:/ipfs/QmYB3R18Js9H3J1Pp6YNpp983MfdBqBLAQbyriqS3GYRPn\"]},\"src/interfaces/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0x62d7d4155bf57a6f6a4d3e0c1440ab7fc4b9ad8362cd2742d63e7407ba37b025\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62323e9ef7bb540b7510b5bb2612cbf03234ed91be7e34af4c3834e2431f679a\",\"dweb:/ipfs/QmaKda4NqgrX9ebw9nxwSpDAUoS5iYXR9a9AKygknoxnWg\"]},\"src/interfaces/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xa1cf4a47b24f01053daa96f12d69b286f78944d5308051f3af480d2bed7d64c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbda5e13c955dc55963a5f7ce8ef17604b4bb35ae69b75e1550ea9d9b9ffd14e\",\"dweb:/ipfs/QmNMStubfavSKKsKJKjzXXY6FYQ69tRJdftFdq7jXtLrqE\"]},\"src/interfaces/IERC165Upgradeable.sol\":{\"keccak256\":\"0x781c3dfeacfed81d9f30ee1445f27a9c41f090ffbff6036e3f006f44281af864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7b9a2b8260eb971740c8ce4e67b30699990804f5bb4c4e80584700df7838c7\",\"dweb:/ipfs/QmWwtgynBvZre8JP42EoxDmmujnFS3Eiejd9gNK8peUB1X\"]},\"src/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0x22fffb4f5262e1ae532edeaccdedc85e449af7b50754b4a1be4a6ecd170120c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8581149cafbbec49bd361c3c50cf76d1f678644c7f87c66e66ba4a6efca5956c\",\"dweb:/ipfs/QmekQhe8dpzebJQBs5Ah13iHjdd1r8ysns7q3Ef8DGW6Lo\"]},\"src/interfaces/ISmartVault.sol\":{\"keccak256\":\"0xffc16686d0a28150aecd4811ed6d221f692f1897b5922561b1268a8a659eb19c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://760fb247c4c5ee5d660299ddd43d0ab088d02d12c567d6e994f8b3080e5d75d1\",\"dweb:/ipfs/Qmcg1t7WvQ4TTyufhLKWDmRukcCDhpS5jfrxwCbQqGMJfP\"]},\"src/interfaces/RequestType.sol\":{\"keccak256\":\"0xbbaf3f2dc27061b50dcd5469de28a40796da8dd5b518e13b5e893c3860ce2ce4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7f366b76d388720de2dc37b57cda39b3e483dd649a21f11a9f37cc66b8ae0751\",\"dweb:/ipfs/QmTg3TDzM7zzKbWoYTeqEki7dDhEQNzD2kzDTunMbQfoy8\"]},\"src/interfaces/uint16a16Lib.sol\":{\"keccak256\":\"0x6c8aa38e7d3d3c9ebffbfe08a5264d4e8c76ec4ef68caa4a909253ca31d2e151\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40485649f9288e095945277b23b709c4d52e9d8d50fb278ee4c1d79fef185061\",\"dweb:/ipfs/QmNeLD1UWDwzS3pht1GSVhqhUrdNSXXBbhbRcdrxTNMcUb\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"claimSmartVaultTokens(address,uint256[],uint256[],address[],address,address,uint256)":"6521c194","depositAssets((address,uint256[],address,address,bool),(address,address[],address[],uint256,uint256))":"237d311d","flushSmartVault(address,uint256,address[],uint256,address[])":"fa6c18d8","getClaimedVaultTokensPreview(address,(uint256[],uint256,uint256),uint256,uint256,address[])":"708215b0","getDepositRatio(address[],uint256,address[])":"ac18ea13","recoverPendingDeposits(address,uint256,address[],address[],address)":"b261ea8b","smartVaultDeposits(address,uint256,uint256)":"5e66a75e","syncDeposits(address,uint256[2],address[],uint256[2],address[],(uint16,uint16,uint16))":"41c4f075","syncDepositsSimulate((address,uint256[2],address[],address[],uint256,uint256,(uint16,uint16,uint16)))":"71b5cb8d"}}}},"src/interfaces/IERC1155MetadataURIUpgradeable.sol":{"IERC1155MetadataURIUpgradeable":{"abi":[{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"balanceOfBatch","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"isApprovedForAll","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"safeBatchTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setApprovalForAll","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"uri","inputs":[{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"event","name":"ApprovalForAll","inputs":[{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"TransferBatch","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"ids","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"values","type":"uint256[]","indexed":false,"internalType":"uint256[]"}],"anonymous":false},{"type":"event","name":"TransferSingle","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"id","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"URI","inputs":[{"name":"value","type":"string","indexed":false,"internalType":"string"},{"name":"id","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC1155MetadataURIUpgradeable.sol\":\"IERC1155MetadataURIUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0x62d7d4155bf57a6f6a4d3e0c1440ab7fc4b9ad8362cd2742d63e7407ba37b025\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62323e9ef7bb540b7510b5bb2612cbf03234ed91be7e34af4c3834e2431f679a\",\"dweb:/ipfs/QmaKda4NqgrX9ebw9nxwSpDAUoS5iYXR9a9AKygknoxnWg\"]},\"src/interfaces/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xa1cf4a47b24f01053daa96f12d69b286f78944d5308051f3af480d2bed7d64c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbda5e13c955dc55963a5f7ce8ef17604b4bb35ae69b75e1550ea9d9b9ffd14e\",\"dweb:/ipfs/QmNMStubfavSKKsKJKjzXXY6FYQ69tRJdftFdq7jXtLrqE\"]},\"src/interfaces/IERC165Upgradeable.sol\":{\"keccak256\":\"0x781c3dfeacfed81d9f30ee1445f27a9c41f090ffbff6036e3f006f44281af864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7b9a2b8260eb971740c8ce4e67b30699990804f5bb4c4e80584700df7838c7\",\"dweb:/ipfs/QmWwtgynBvZre8JP42EoxDmmujnFS3Eiejd9gNK8peUB1X\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}}}},"src/interfaces/IERC1155ReceiverUpgradeable.sol":{"IERC1155ReceiverUpgradeable":{"abi":[{"type":"function","name":"onERC1155BatchReceived","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"values","type":"uint256[]","internalType":"uint256[]"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"onERC1155Received","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC1155ReceiverUpgradeable.sol\":\"IERC1155ReceiverUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0x150142a3c305ac63201dd0d9c1be646e1f5ece9e768cefa41df1058bd9beecfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://908c19d8641f6072aeaa7bdaa29c204e60cad1fae33a91d222d2961301ff14dc\",\"dweb:/ipfs/QmUwFzaXmy97frCT9XdCkEr6ZcYFyQnM3kivqj1Lpq1Mfe\"]},\"src/interfaces/IERC165Upgradeable.sol\":{\"keccak256\":\"0x781c3dfeacfed81d9f30ee1445f27a9c41f090ffbff6036e3f006f44281af864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7b9a2b8260eb971740c8ce4e67b30699990804f5bb4c4e80584700df7838c7\",\"dweb:/ipfs/QmWwtgynBvZre8JP42EoxDmmujnFS3Eiejd9gNK8peUB1X\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}}}},"src/interfaces/IERC1155Upgradeable.sol":{"IERC1155Upgradeable":{"abi":[{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"balanceOfBatch","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"isApprovedForAll","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"safeBatchTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setApprovalForAll","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"ApprovalForAll","inputs":[{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"TransferBatch","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"ids","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"values","type":"uint256[]","indexed":false,"internalType":"uint256[]"}],"anonymous":false},{"type":"event","name":"TransferSingle","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"id","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"URI","inputs":[{"name":"value","type":"string","indexed":false,"internalType":"string"},{"name":"id","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC1155Upgradeable.sol\":\"IERC1155Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xa1cf4a47b24f01053daa96f12d69b286f78944d5308051f3af480d2bed7d64c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbda5e13c955dc55963a5f7ce8ef17604b4bb35ae69b75e1550ea9d9b9ffd14e\",\"dweb:/ipfs/QmNMStubfavSKKsKJKjzXXY6FYQ69tRJdftFdq7jXtLrqE\"]},\"src/interfaces/IERC165Upgradeable.sol\":{\"keccak256\":\"0x781c3dfeacfed81d9f30ee1445f27a9c41f090ffbff6036e3f006f44281af864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7b9a2b8260eb971740c8ce4e67b30699990804f5bb4c4e80584700df7838c7\",\"dweb:/ipfs/QmWwtgynBvZre8JP42EoxDmmujnFS3Eiejd9gNK8peUB1X\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}}}},"src/interfaces/IERC165Upgradeable.sol":{"IERC165Upgradeable":{"abi":[{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/IERC165Upgradeable.sol\":{\"keccak256\":\"0x781c3dfeacfed81d9f30ee1445f27a9c41f090ffbff6036e3f006f44281af864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7b9a2b8260eb971740c8ce4e67b30699990804f5bb4c4e80584700df7838c7\",\"dweb:/ipfs/QmWwtgynBvZre8JP42EoxDmmujnFS3Eiejd9gNK8peUB1X\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}}}},"src/interfaces/IERC20.sol":{"IERC20":{"abi":[{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x0d3ff2c9021ae4bdb7e7b72c25841cd0ff42827509e3785eebe874fd7d03f99a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c28c3b8accead50bebed2cbd586c36c7febbca51dad31c2a560d510419b8593\",\"dweb:/ipfs/QmbdJD5RNE7HxPyg8S4PN6pAXktjXCrtLE6PZXDfig1xMZ\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}}}},"src/interfaces/IERC20Upgradeable.sol":{"IERC20Upgradeable":{"abi":[{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0x22fffb4f5262e1ae532edeaccdedc85e449af7b50754b4a1be4a6ecd170120c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8581149cafbbec49bd361c3c50cf76d1f678644c7f87c66e66ba4a6efca5956c\",\"dweb:/ipfs/QmekQhe8dpzebJQBs5Ah13iHjdd1r8ysns7q3Ef8DGW6Lo\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}}}},"src/interfaces/IGuardManager.sol":{"IGuardManager":{"abi":[{"type":"function","name":"readGuards","inputs":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"requestType","type":"uint8","internalType":"enum RequestType"}],"outputs":[{"name":"guards","type":"tuple[]","internalType":"struct GuardDefinition[]","components":[{"name":"methodSignature","type":"string","internalType":"string"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"operator","type":"bytes2","internalType":"bytes2"},{"name":"expectedValue","type":"uint256","internalType":"uint256"},{"name":"methodParamTypes","type":"uint8[]","internalType":"enum GuardParamType[]"},{"name":"methodParamValues","type":"bytes[]","internalType":"bytes[]"}]}],"stateMutability":"view"},{"type":"function","name":"runGuards","inputs":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"context","type":"tuple","internalType":"struct RequestContext","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"executor","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"},{"name":"requestType","type":"uint8","internalType":"enum RequestType"},{"name":"assets","type":"uint256[]","internalType":"uint256[]"},{"name":"tokens","type":"address[]","internalType":"address[]"}]}],"outputs":[],"stateMutability":"view"},{"type":"function","name":"setGuards","inputs":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"guards","type":"tuple[][]","internalType":"struct GuardDefinition[][]","components":[{"name":"methodSignature","type":"string","internalType":"string"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"operator","type":"bytes2","internalType":"bytes2"},{"name":"expectedValue","type":"uint256","internalType":"uint256"},{"name":"methodParamTypes","type":"uint8[]","internalType":"enum GuardParamType[]"},{"name":"methodParamValues","type":"bytes[]","internalType":"bytes[]"}]},{"name":"requestTypes","type":"uint8[]","internalType":"enum RequestType[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"GuardsInitialized","inputs":[{"name":"smartVault","type":"address","indexed":true,"internalType":"address"},{"name":"guards","type":"tuple[][]","indexed":false,"internalType":"struct GuardDefinition[][]","components":[{"name":"methodSignature","type":"string","internalType":"string"},{"name":"contractAddress","type":"address","internalType":"address"},{"name":"operator","type":"bytes2","internalType":"bytes2"},{"name":"expectedValue","type":"uint256","internalType":"uint256"},{"name":"methodParamTypes","type":"uint8[]","internalType":"enum GuardParamType[]"},{"name":"methodParamValues","type":"bytes[]","internalType":"bytes[]"}]},{"name":"requestTypes","type":"uint8[]","indexed":false,"internalType":"enum RequestType[]"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"methodSignature\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes2\",\"name\":\"operator\",\"type\":\"bytes2\"},{\"internalType\":\"uint256\",\"name\":\"expectedValue\",\"type\":\"uint256\"},{\"internalType\":\"enum GuardParamType[]\",\"name\":\"methodParamTypes\",\"type\":\"uint8[]\"},{\"internalType\":\"bytes[]\",\"name\":\"methodParamValues\",\"type\":\"bytes[]\"}],\"indexed\":false,\"internalType\":\"struct GuardDefinition[][]\",\"name\":\"guards\",\"type\":\"tuple[][]\"},{\"indexed\":false,\"internalType\":\"enum RequestType[]\",\"name\":\"requestTypes\",\"type\":\"uint8[]\"}],\"name\":\"GuardsInitialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"enum RequestType\",\"name\":\"requestType\",\"type\":\"uint8\"}],\"name\":\"readGuards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"methodSignature\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes2\",\"name\":\"operator\",\"type\":\"bytes2\"},{\"internalType\":\"uint256\",\"name\":\"expectedValue\",\"type\":\"uint256\"},{\"internalType\":\"enum GuardParamType[]\",\"name\":\"methodParamTypes\",\"type\":\"uint8[]\"},{\"internalType\":\"bytes[]\",\"name\":\"methodParamValues\",\"type\":\"bytes[]\"}],\"internalType\":\"struct GuardDefinition[]\",\"name\":\"guards\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"enum RequestType\",\"name\":\"requestType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"assets\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"internalType\":\"struct RequestContext\",\"name\":\"context\",\"type\":\"tuple\"}],\"name\":\"runGuards\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"methodSignature\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes2\",\"name\":\"operator\",\"type\":\"bytes2\"},{\"internalType\":\"uint256\",\"name\":\"expectedValue\",\"type\":\"uint256\"},{\"internalType\":\"enum GuardParamType[]\",\"name\":\"methodParamTypes\",\"type\":\"uint8[]\"},{\"internalType\":\"bytes[]\",\"name\":\"methodParamValues\",\"type\":\"bytes[]\"}],\"internalType\":\"struct GuardDefinition[][]\",\"name\":\"guards\",\"type\":\"tuple[][]\"},{\"internalType\":\"enum RequestType[]\",\"name\":\"requestTypes\",\"type\":\"uint8[]\"}],\"name\":\"setGuards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"GuardsInitialized(address,(string,address,bytes2,uint256,uint8[],bytes[])[][],uint8[])\":{\"params\":{\"guards\":\"Guard definitions\",\"requestTypes\":\"Guard triggers\",\"smartVault\":\"Smart vault for which guards were set.\"}}},\"kind\":\"dev\",\"methods\":{\"readGuards(address,uint8)\":{\"params\":{\"requestType\":\"Request type for which to get guards.\",\"smartVault\":\"Smart vault for which to get guards.\"},\"returns\":{\"guards\":\"Guards for the smart vault and request type.\"}},\"runGuards(address,(address,address,address,uint8,uint256[],address[]))\":{\"details\":\"Reverts if any guard fails. The context.methodParamValues array should only include fixed/static values. Parameters that are resolved at runtime should be omitted. All values should be encoded using \\\"abi.encode\\\" before passing them to the GuardManager contract. We assume that all static types are encoded to 32 bytes. Fixed-size static arrays and structs with only static type members are not supported.\",\"params\":{\"context\":\"Context for running the guards.\",\"smartVault\":\"Smart vault for which to run the guards.\"}},\"setGuards(address,(string,address,bytes2,uint256,uint8[],bytes[])[][],uint8[])\":{\"details\":\"@dev Requirements: - caller must have role ROLE_SMART_VAULT_INTEGRATOR - guards should not have been already set for the smart vault\",\"params\":{\"guards\":\"Guards to set. Grouped by the request types.\",\"requestTypes\":\"Request types for groups of guards.\",\"smartVault\":\"Smart vault for which to set the guards.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"GuardsInitialized(address,(string,address,bytes2,uint256,uint8[],bytes[])[][],uint8[])\":{\"notice\":\"Emitted when guards are set for a smart vault.\"}},\"kind\":\"user\",\"methods\":{\"readGuards(address,uint8)\":{\"notice\":\"Gets guards for smart vault and request type.\"},\"runGuards(address,(address,address,address,uint8,uint256[],address[]))\":{\"notice\":\"Runs guards for a smart vault.\"},\"setGuards(address,(string,address,bytes2,uint256,uint8[],bytes[])[][],uint8[])\":{\"notice\":\"Sets guards for the smart vault.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IGuardManager.sol\":\"IGuardManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/Constants.sol\":{\"keccak256\":\"0x14098998da750616c31e480b982f25c37d0cb60a1c7cebafe2d17b4670a41176\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://501f5aead8ee02766e81074fa96a2584006ce26c00a9d0881bd5217a7da209eb\",\"dweb:/ipfs/QmQMHVArLXpsqyTt4XBTef9d6wkYuRPJdizrpugkdYW4G2\"]},\"src/interfaces/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0x62d7d4155bf57a6f6a4d3e0c1440ab7fc4b9ad8362cd2742d63e7407ba37b025\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62323e9ef7bb540b7510b5bb2612cbf03234ed91be7e34af4c3834e2431f679a\",\"dweb:/ipfs/QmaKda4NqgrX9ebw9nxwSpDAUoS5iYXR9a9AKygknoxnWg\"]},\"src/interfaces/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xa1cf4a47b24f01053daa96f12d69b286f78944d5308051f3af480d2bed7d64c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbda5e13c955dc55963a5f7ce8ef17604b4bb35ae69b75e1550ea9d9b9ffd14e\",\"dweb:/ipfs/QmNMStubfavSKKsKJKjzXXY6FYQ69tRJdftFdq7jXtLrqE\"]},\"src/interfaces/IERC165Upgradeable.sol\":{\"keccak256\":\"0x781c3dfeacfed81d9f30ee1445f27a9c41f090ffbff6036e3f006f44281af864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7b9a2b8260eb971740c8ce4e67b30699990804f5bb4c4e80584700df7838c7\",\"dweb:/ipfs/QmWwtgynBvZre8JP42EoxDmmujnFS3Eiejd9gNK8peUB1X\"]},\"src/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0x22fffb4f5262e1ae532edeaccdedc85e449af7b50754b4a1be4a6ecd170120c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8581149cafbbec49bd361c3c50cf76d1f678644c7f87c66e66ba4a6efca5956c\",\"dweb:/ipfs/QmekQhe8dpzebJQBs5Ah13iHjdd1r8ysns7q3Ef8DGW6Lo\"]},\"src/interfaces/IGuardManager.sol\":{\"keccak256\":\"0x439ed52cdf6b1886aec16f32ea6d9b8116e73cc95dbaa9b4e5111099292e840f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://81d5772d41e86bb02228cb1994dc9c0713502d53b7e56800b621d4221e1649b7\",\"dweb:/ipfs/QmX6JnSPXsnV5AHuvEv5iEf3eZtbqvUZLFPiSkQAKvpLZx\"]},\"src/interfaces/ISmartVault.sol\":{\"keccak256\":\"0xffc16686d0a28150aecd4811ed6d221f692f1897b5922561b1268a8a659eb19c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://760fb247c4c5ee5d660299ddd43d0ab088d02d12c567d6e994f8b3080e5d75d1\",\"dweb:/ipfs/Qmcg1t7WvQ4TTyufhLKWDmRukcCDhpS5jfrxwCbQqGMJfP\"]},\"src/interfaces/RequestType.sol\":{\"keccak256\":\"0xbbaf3f2dc27061b50dcd5469de28a40796da8dd5b518e13b5e893c3860ce2ce4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7f366b76d388720de2dc37b57cda39b3e483dd649a21f11a9f37cc66b8ae0751\",\"dweb:/ipfs/QmTg3TDzM7zzKbWoYTeqEki7dDhEQNzD2kzDTunMbQfoy8\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"readGuards(address,uint8)":"519fe8f6","runGuards(address,(address,address,address,uint8,uint256[],address[]))":"2c8dfb26","setGuards(address,(string,address,bytes2,uint256,uint8[],bytes[])[][],uint8[])":"39930590"}}}},"src/interfaces/IMetaVault.sol":{"IMetaVault":{"abi":[{"type":"function","name":"MAX_SMART_VAULT_AMOUNT","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addSmartVaults","inputs":[{"name":"vaults","type":"address[]","internalType":"address[]"},{"name":"allocations","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"asset","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"claim","inputs":[{"name":"flushIndex","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"claimable","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"flushIndex","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"deposit","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deposit","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"flush","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"flushToDepositedAssets","inputs":[{"name":"","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"flushToMintedShares","inputs":[{"name":"","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"flushToRedeemedShares","inputs":[{"name":"","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"flushToSmartVaultToWithdrawalNftId","inputs":[{"name":"","type":"uint128","internalType":"uint128"},{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"flushToWithdrawnAssets","inputs":[{"name":"","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBalances","inputs":[],"outputs":[{"name":"totalBalance","type":"uint256","internalType":"uint256"},{"name":"balances","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"getSmartVaults","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"index","inputs":[],"outputs":[{"name":"flush","type":"uint128","internalType":"uint128"},{"name":"sync","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"maxReallocationSlippage","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"needReallocation","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"onERC1155BatchReceived","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"values","type":"uint256[]","internalType":"uint256[]"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"onERC1155Received","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"permitAsset","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"permitDai","inputs":[{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"allowed","type":"bool","internalType":"bool"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"reallocate","inputs":[{"name":"slippages","type":"uint256[][][]","internalType":"uint256[][][]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"reallocateSync","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"reallocationIndex","inputs":[],"outputs":[{"name":"flush","type":"uint128","internalType":"uint128"},{"name":"sync","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"redeem","inputs":[{"name":"shares","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"selectorToPaused","inputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"setPaused","inputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"},{"name":"paused","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setSmartVaultAllocations","inputs":[{"name":"allocations","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"smartVaultToAllocation","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"smartVaultToDepositNftId","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"smartVaultToDepositNftIdFromReallocation","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"smartVaultToManagerFlushIndex","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"sync","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"userToFlushToDepositedAssets","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"userToFlushToRedeemedShares","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"withdraw","inputs":[{"name":"flushIndex","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawable","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"flushIndex","type":"uint128","internalType":"uint128"}],"outputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"event","name":"AllocationChange","inputs":[{"name":"allocations","type":"uint256[]","indexed":false,"internalType":"uint256[]"}],"anonymous":false},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Claim","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"flushIndex","type":"uint128","indexed":true,"internalType":"uint128"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Deposit","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"flushIndex","type":"uint128","indexed":true,"internalType":"uint128"},{"name":"assets","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FlushDeposit","inputs":[{"name":"flushIndex","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"assets","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FlushWithdrawal","inputs":[{"name":"flushIndex","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"MaxReallocationSlippageChange","inputs":[{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"NeedReallocationState","inputs":[{"name":"state","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"PausedChange","inputs":[{"name":"selector","type":"bytes4","indexed":false,"internalType":"bytes4"},{"name":"paused","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"Reallocate","inputs":[{"name":"reallocationIndex","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ReallocateSync","inputs":[{"name":"reallocationIndex","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Redeem","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"flushIndex","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"SharePrice","inputs":[{"name":"totalBalance","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"totalSupply","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"SmartVaultsChange","inputs":[{"name":"vaults","type":"address[]","indexed":false,"internalType":"address[]"}],"anonymous":false},{"type":"event","name":"SvtToRedeem","inputs":[{"name":"smartVault","type":"address","indexed":false,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"SyncDeposit","inputs":[{"name":"flushIndex","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"SyncWithdrawal","inputs":[{"name":"flushIndex","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"assets","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Withdraw","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"flushIndex","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"assets","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"ArgumentLengthMismatch","inputs":[]},{"type":"error","name":"MaxReallocationSlippage","inputs":[]},{"type":"error","name":"MaxSmartVaultAmount","inputs":[]},{"type":"error","name":"NeedReallocation","inputs":[]},{"type":"error","name":"NoDepositNft","inputs":[{"name":"nftId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NothingToClaim","inputs":[]},{"type":"error","name":"NothingToFulfill","inputs":[{"name":"nftId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NothingToWithdraw","inputs":[]},{"type":"error","name":"Paused","inputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"}]},{"type":"error","name":"PendingSync","inputs":[]},{"type":"error","name":"WrongAllocation","inputs":[]}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ArgumentLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxReallocationSlippage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxSmartVaultAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NeedReallocation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"NoDepositNft\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NothingToClaim\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"NothingToFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NothingToWithdraw\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"Paused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingSync\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongAllocation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"allocations\",\"type\":\"uint256[]\"}],\"name\":\"AllocationChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"flushIndex\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"flushIndex\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"FlushDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"FlushWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"MaxReallocationSlippageChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"NeedReallocationState\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"PausedChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"reallocationIndex\",\"type\":\"uint256\"}],\"name\":\"Reallocate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"reallocationIndex\",\"type\":\"uint256\"}],\"name\":\"ReallocateSync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"SharePrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"vaults\",\"type\":\"address[]\"}],\"name\":\"SmartVaultsChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SvtToRedeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"SyncDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"SyncWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SMART_VAULT_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"vaults\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"allocations\",\"type\":\"uint256[]\"}],\"name\":\"addSmartVaults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"flushIndex\",\"type\":\"uint128\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"flushIndex\",\"type\":\"uint128\"}],\"name\":\"claimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flush\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"flushToDepositedAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"flushToMintedShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"flushToRedeemedShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"flushToSmartVaultToWithdrawalNftId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"flushToWithdrawnAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSmartVaults\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"flush\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"sync\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxReallocationSlippage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"needReallocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitDai\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[][][]\",\"name\":\"slippages\",\"type\":\"uint256[][][]\"}],\"name\":\"reallocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reallocateSync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reallocationIndex\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"flush\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"sync\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"selectorToPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"allocations\",\"type\":\"uint256[]\"}],\"name\":\"setSmartVaultAllocations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"smartVaultToAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"smartVaultToDepositNftId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"smartVaultToDepositNftIdFromReallocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"smartVaultToManagerFlushIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"userToFlushToDepositedAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"name\":\"userToFlushToRedeemedShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"flushIndex\",\"type\":\"uint128\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"flushIndex\",\"type\":\"uint128\"}],\"name\":\"withdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ArgumentLengthMismatch()\":[{\"details\":\"Length of arrays is not equal\"}],\"MaxReallocationSlippage()\":[{\"details\":\"Reallocation failed because more assets were lost then specified by MetaVault owner\"}],\"MaxSmartVaultAmount()\":[{\"details\":\"Maximum smart vault amount is exceeded\"}],\"NeedReallocation()\":[{\"details\":\"Flush is blocked until reallocation is not done\"}],\"NoDepositNft(uint256)\":[{\"details\":\"There are no SVTs to claim for nft id\"}],\"NothingToClaim()\":[{\"details\":\"There are no MVTs to claim\"}],\"NothingToFulfill(uint256)\":[{\"details\":\"There are no withdrawal nfts\"}],\"NothingToWithdraw()\":[{\"details\":\"User has nothing to withdraw\"}],\"Paused(bytes4)\":[{\"details\":\"Called method is paused\"}],\"PendingSync()\":[{\"details\":\"Flush and reallocation are blocked if there is pending sync\"}],\"WrongAllocation()\":[{\"details\":\"Total allocation does not sum up to 100 bp\"}]},\"events\":{\"AllocationChange(uint256[])\":{\"details\":\"Allocations have been changed\"},\"Claim(address,uint128,uint256)\":{\"details\":\"User claimed MetaVault shares\"},\"Deposit(address,uint128,uint256)\":{\"details\":\"User deposited assets into MetaVault\"},\"FlushDeposit(uint256,uint256)\":{\"details\":\"flushDeposit has run\"},\"FlushWithdrawal(uint256,uint256)\":{\"details\":\"flushWithdrawal has run\"},\"MaxReallocationSlippageChange(uint256)\":{\"details\":\"Emitted when maxReallocationSlippage is changed\"},\"NeedReallocationState(bool)\":{\"details\":\"Emitted when needReallocation is changed\"},\"PausedChange(bytes4,bool)\":{\"details\":\"Emitted when method is paused / unpaused\"},\"Reallocate(uint256)\":{\"details\":\"reallocate has run\"},\"ReallocateSync(uint256)\":{\"details\":\"reallocateSync has run\"},\"Redeem(address,uint256,uint256)\":{\"details\":\"User redeemed MetaVault shares to get assets back\"},\"SharePrice(uint256,uint256)\":{\"details\":\"data for calculating share price of MVT\"},\"SmartVaultsChange(address[])\":{\"details\":\"SmartVaults have been changed\"},\"SvtToRedeem(address,uint256)\":{\"details\":\"Used for parameter gatherer to prepare slippages data\"},\"SyncDeposit(uint256,uint256)\":{\"details\":\"syncDeposit has run\"},\"SyncWithdrawal(uint256,uint256)\":{\"details\":\"syncWithdrawal has run\"},\"Withdraw(address,uint256,uint256)\":{\"details\":\"User has withdrawn his assets\"}},\"kind\":\"dev\",\"methods\":{\"addSmartVaults(address[],uint256[])\":{\"params\":{\"allocations\":\"for all smart vaults\",\"vaults\":\"list to add\"}},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"claim(uint128)\":{\"params\":{\"flushIndex\":\"to claim from\"},\"returns\":{\"shares\":\"claimed\"}},\"claimable(address,uint128)\":{\"params\":{\"flushIndex\":\"index\",\"user\":\"address\"},\"returns\":{\"shares\":\"will be claimed\"}},\"deposit(uint256)\":{\"params\":{\"amount\":\"of assets\"}},\"deposit(uint256,address)\":{\"params\":{\"amount\":\"of assets\",\"receiver\":\"of future shares\"}},\"getBalances()\":{\"returns\":{\"totalBalance\":\"of MetaVault and balances for each particular smart vault\"}},\"getSmartVaults()\":{\"returns\":{\"_0\":\"array of smart vaults\"}},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"reallocate(uint256[][][])\":{\"params\":{\"slippages\":\"for redeemFast\"}},\"redeem(uint256)\":{\"params\":{\"shares\":\"of MetaVault to burn\"}},\"setSmartVaultAllocations(uint256[])\":{\"params\":{\"allocations\":\"to set\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdraw(uint128)\":{\"params\":{\"flushIndex\":\"index\"}},\"withdrawable(address,uint128)\":{\"params\":{\"flushIndex\":\"index\",\"user\":\"address\"},\"returns\":{\"amount\":\"of assets\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"MAX_SMART_VAULT_AMOUNT()\":{\"notice\":\"Maximum amount of smart vaults MetaVault can manage\"},\"addSmartVaults(address[],uint256[])\":{\"notice\":\"Owner of MetaVault can add new smart vaults for management\"},\"asset()\":{\"notice\":\"Underlying asset used for investments\"},\"claim(uint128)\":{\"notice\":\"claim MetaVault shares\"},\"claimable(address,uint128)\":{\"notice\":\"amount of shares user will get from provided flushIndex\"},\"deposit(uint256)\":{\"notice\":\"deposit assets into MetaVault\"},\"deposit(uint256,address)\":{\"notice\":\"deposit assets into MetaVault\"},\"flush()\":{\"notice\":\"flush deposits and redeems accumulated on MetaVault.\"},\"flushToDepositedAssets(uint128)\":{\"notice\":\"total amount of assets deposited by users in particular flush cycle\"},\"flushToMintedShares(uint128)\":{\"notice\":\"total amount of shares minted for particular flush cycle\"},\"flushToRedeemedShares(uint128)\":{\"notice\":\"total amount of shares redeemed by users in particular flush cycle\"},\"flushToSmartVaultToWithdrawalNftId(uint128,address)\":{\"notice\":\"withdrawal nft id associated with particular smart vault for specific flush index\"},\"flushToWithdrawnAssets(uint128)\":{\"notice\":\"total amount of assets received by MetaVault in particular flush cycle\"},\"getBalances()\":{\"notice\":\"get the balance of underlying asset invested into smart vaults\"},\"getSmartVaults()\":{\"notice\":\"get the list of smart vaults currently managed by MetaVault\"},\"index()\":{\"notice\":\"current flush index. Used to process batch of deposits and redeems\"},\"maxReallocationSlippage()\":{\"notice\":\"Maximum allowed percentage change of funds during reallocation in base points\"},\"needReallocation()\":{\"notice\":\"indicates that allocation has changed and there is a need for reallocation\"},\"permitAsset(uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"if asset supports EIP712\"},\"permitDai(uint256,uint256,bool,uint8,bytes32,bytes32)\":{\"notice\":\"if asset is DAI\"},\"reallocate(uint256[][][])\":{\"notice\":\"only DoHardWorker can reallocate positions if smartVaultToAllocation is zero all funds are withdrawn from this vault and it is removed from _smartVault.list\"},\"reallocateSync()\":{\"notice\":\"Finalize reallocation of MetaVault revert - DHW should be run\"},\"reallocationIndex()\":{\"notice\":\"current reallocation index\"},\"redeem(uint256)\":{\"notice\":\"create a redeem request to get assets back\"},\"selectorToPaused(bytes4)\":{\"notice\":\"function paused state\"},\"setPaused(bytes4,bool)\":{\"notice\":\"selectively pause functions\"},\"setSmartVaultAllocations(uint256[])\":{\"notice\":\"only owner of MetaVault can change the allocations for managed smart vaults\"},\"smartVaultToAllocation(address)\":{\"notice\":\"allocation is in base points\"},\"smartVaultToDepositNftId(address)\":{\"notice\":\"deposit nft from regular deposit\"},\"smartVaultToDepositNftIdFromReallocation(address)\":{\"notice\":\"deposit nft from reallocation\"},\"smartVaultToManagerFlushIndex(address)\":{\"notice\":\"flush indexes on SmartVaultManager\"},\"sync()\":{\"notice\":\"sync MetaVault deposits and withdrawals\"},\"userToFlushToDepositedAssets(address,uint128)\":{\"notice\":\"amount of shares user deposited in specific flush index\"},\"userToFlushToRedeemedShares(address,uint128)\":{\"notice\":\"amount of shares user redeemed in specific flush index\"},\"withdraw(uint128)\":{\"notice\":\"user can withdraw assets once his request with specific withdrawal index is fulfilled\"},\"withdrawable(address,uint128)\":{\"notice\":\"get amount of assets user will get from particular flush index\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IMetaVault.sol\":\"IMetaVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/IDAI.sol\":{\"keccak256\":\"0xdd6fc9f1d0d2bf0805cc26c4ea166268e29b75c0499754b9a4dfe9f0e8e73344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d9ead64be6897ae4983520664283012228a64b9bd308efa4009228044efd1d2\",\"dweb:/ipfs/QmaWxR4uj3zoa8FCTBnfRtKHMPkGiisgpRKpD5q28P5cMz\"]},\"src/interfaces/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0x150142a3c305ac63201dd0d9c1be646e1f5ece9e768cefa41df1058bd9beecfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://908c19d8641f6072aeaa7bdaa29c204e60cad1fae33a91d222d2961301ff14dc\",\"dweb:/ipfs/QmUwFzaXmy97frCT9XdCkEr6ZcYFyQnM3kivqj1Lpq1Mfe\"]},\"src/interfaces/IERC165Upgradeable.sol\":{\"keccak256\":\"0x781c3dfeacfed81d9f30ee1445f27a9c41f090ffbff6036e3f006f44281af864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7b9a2b8260eb971740c8ce4e67b30699990804f5bb4c4e80584700df7838c7\",\"dweb:/ipfs/QmWwtgynBvZre8JP42EoxDmmujnFS3Eiejd9gNK8peUB1X\"]},\"src/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0x22fffb4f5262e1ae532edeaccdedc85e449af7b50754b4a1be4a6ecd170120c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8581149cafbbec49bd361c3c50cf76d1f678644c7f87c66e66ba4a6efca5956c\",\"dweb:/ipfs/QmekQhe8dpzebJQBs5Ah13iHjdd1r8ysns7q3Ef8DGW6Lo\"]},\"src/interfaces/IMetaVault.sol\":{\"keccak256\":\"0x6f4513c42a46611da94a1ad2730ace80a8aadf6ef589afee99b1e4dbf128a875\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6c13bcd52615f6867c01f6b01693b11927f913e7e280a34599b7a86563d5eb39\",\"dweb:/ipfs/QmT1257NAWmrdZcULm752MybuFUWRHDBEotwxoWr1d6PJU\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"MAX_SMART_VAULT_AMOUNT()":"828306fe","addSmartVaults(address[],uint256[])":"c706792d","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","asset()":"38d52e0f","balanceOf(address)":"70a08231","claim(uint128)":"60e72adb","claimable(address,uint128)":"c1579f6b","deposit(uint256)":"b6b55f25","deposit(uint256,address)":"6e553f65","flush()":"6b9f96ea","flushToDepositedAssets(uint128)":"8e8ecfd6","flushToMintedShares(uint128)":"197cdd63","flushToRedeemedShares(uint128)":"dea21eac","flushToSmartVaultToWithdrawalNftId(uint128,address)":"bc0cf99c","flushToWithdrawnAssets(uint128)":"de3e1b1e","getBalances()":"00113e08","getSmartVaults()":"dc9a6d7c","index()":"2986c0e5","maxReallocationSlippage()":"a8c4b95a","needReallocation()":"58268065","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","permitAsset(uint256,uint256,uint8,bytes32,bytes32)":"d04622b2","permitDai(uint256,uint256,bool,uint8,bytes32,bytes32)":"007feee4","reallocate(uint256[][][])":"2ea8d439","reallocateSync()":"60984ad9","reallocationIndex()":"692a4a91","redeem(uint256)":"db006a75","selectorToPaused(bytes4)":"f5e81a88","setPaused(bytes4,bool)":"1c9d458c","setSmartVaultAllocations(uint256[])":"c80057ad","smartVaultToAllocation(address)":"573e44e2","smartVaultToDepositNftId(address)":"071424eb","smartVaultToDepositNftIdFromReallocation(address)":"e3986c5d","smartVaultToManagerFlushIndex(address)":"3be3abb9","supportsInterface(bytes4)":"01ffc9a7","sync()":"fff6cae9","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","userToFlushToDepositedAssets(address,uint128)":"3f4eb4a0","userToFlushToRedeemedShares(address,uint128)":"5071733e","withdraw(uint128)":"02387a7b","withdrawable(address,uint128)":"f8dace54"}}}},"src/interfaces/IMetaVaultGuard.sol":{"IMetaVaultGuard":{"abi":[{"type":"function","name":"validateSmartVault","inputs":[{"name":"asset","type":"address","internalType":"address"},{"name":"smartVault","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"validateSmartVaults","inputs":[{"name":"asset","type":"address","internalType":"address"},{"name":"smartVaults","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"error","name":"InvalidVaultAsset","inputs":[]},{"type":"error","name":"InvalidVaultDepositFee","inputs":[]},{"type":"error","name":"InvalidVaultManagementFee","inputs":[]},{"type":"error","name":"NoGuardsAllowed","inputs":[]}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidVaultAsset\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVaultDepositFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVaultManagementFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoGuardsAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"validateSmartVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"smartVaults\",\"type\":\"address[]\"}],\"name\":\"validateSmartVaults\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidVaultAsset()\":[{\"details\":\"Only SmartVaults with the same underlying assets are supported\"}],\"InvalidVaultDepositFee()\":[{\"details\":\"Only SmartVaults with zero deposit fee are supported\"}],\"InvalidVaultManagementFee()\":[{\"details\":\"Only SmartVaults with zero management fee are supported\"}],\"NoGuardsAllowed()\":[{\"details\":\"Any guard on SmartVault is prohibited\"}]},\"kind\":\"dev\",\"methods\":{\"validateSmartVault(address,address)\":{\"params\":{\"asset\":\"for MetaVault\",\"smartVault\":\"to validate\"}},\"validateSmartVaults(address,address[])\":{\"params\":{\"asset\":\"for MetaVault\",\"smartVaults\":\"to validate\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validateSmartVault(address,address)\":{\"notice\":\"Check if given smart vault can be managed by MetaVault\"},\"validateSmartVaults(address,address[])\":{\"notice\":\"Check if given smart vault can be managed by MetaVault\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IMetaVaultGuard.sol\":\"IMetaVaultGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/IMetaVaultGuard.sol\":{\"keccak256\":\"0x8f19a145b28b0e60ba18582dcadaeec69857366d3cffe0cb74ce0db39ddc536c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d0c93a33c9b43e47875acc213f125e7398741291e7ff0239cd74c99d5c7f6fe6\",\"dweb:/ipfs/QmSBSrNTgxpCb8eqkQ2THFRZDbf1m55dft5Rvy5L2jTqta\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"validateSmartVault(address,address)":"ffa9f16a","validateSmartVaults(address,address[])":"a0c02faf"}}}},"src/interfaces/ISmartVault.sol":{"ISmartVault":{"abi":[{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"assetGroupId","inputs":[],"outputs":[{"name":"id","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"balanceOfBatch","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"balanceOfFractional","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"fractionalBalance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"balanceOfFractionalBatch","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"fractionalBalances","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"burnNFTs","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"nftIds","type":"uint256[]","internalType":"uint256[]"},{"name":"nftAmounts","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"metadata","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"burnVaultShares","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"vaultShares","type":"uint256","internalType":"uint256"},{"name":"strategies","type":"address[]","internalType":"address[]"},{"name":"shares","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimShares","inputs":[{"name":"claimer","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getMetadata","inputs":[{"name":"nftIds","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"metadata","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"isApprovedForAll","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"mintDepositNFT","inputs":[{"name":"receiver","type":"address","internalType":"address"},{"name":"metadata","type":"tuple","internalType":"struct DepositMetadata","components":[{"name":"assets","type":"uint256[]","internalType":"uint256[]"},{"name":"initiated","type":"uint256","internalType":"uint256"},{"name":"flushIndex","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"id","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"mintVaultShares","inputs":[{"name":"receiver","type":"address","internalType":"address"},{"name":"vaultShares","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mintWithdrawalNFT","inputs":[{"name":"receiver","type":"address","internalType":"address"},{"name":"metadata","type":"tuple","internalType":"struct WithdrawalMetadata","components":[{"name":"vaultShares","type":"uint256","internalType":"uint256"},{"name":"flushIndex","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"id","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"safeBatchTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setApprovalForAll","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setBaseURI","inputs":[{"name":"uri_","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFromSpender","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"uri","inputs":[{"name":"id","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"vaultName","inputs":[],"outputs":[{"name":"name","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ApprovalForAll","inputs":[{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"BaseURIChanged","inputs":[{"name":"baseUri","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"TransferBatch","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"ids","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"values","type":"uint256[]","indexed":false,"internalType":"uint256[]"}],"anonymous":false},{"type":"event","name":"TransferSingle","inputs":[{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"id","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"URI","inputs":[{"name":"value","type":"string","indexed":false,"internalType":"string"},{"name":"id","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseUri\",\"type\":\"string\"}],\"name\":\"BaseURIChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetGroupId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOfFractional\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fractionalBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfFractionalBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"fractionalBalances\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"}],\"name\":\"burnNFTs\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"metadata\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"vaultShares\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"name\":\"burnVaultShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"}],\"name\":\"getMetadata\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"metadata\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"assets\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"initiated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct DepositMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"mintDepositNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"vaultShares\",\"type\":\"uint256\"}],\"name\":\"mintVaultShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"vaultShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct WithdrawalMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"mintWithdrawalNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFromSpender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"assetGroupId()\":{\"returns\":{\"id\":\"ID of the asset group.\"}},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"balanceOfFractional(address,uint256)\":{\"params\":{\"account\":\"Account to check the balance for.\",\"id\":\"ID of the NFT to check.\"},\"returns\":{\"fractionalBalance\":\"Fractional balance of account for the NFT.\"}},\"balanceOfFractionalBatch(address,uint256[])\":{\"params\":{\"account\":\"Account to check the balance for.\",\"ids\":\"IDs of the NFTs to check.\"},\"returns\":{\"fractionalBalances\":\"Fractional balances of account for each requested NFT.\"}},\"burnNFTs(address,uint256[],uint256[])\":{\"details\":\"Requirements: - caller must have role ROLE_SMART_VAULT_MANAGER\",\"params\":{\"nftAmounts\":\"NFT shares to burn (partial burn).\",\"nftIds\":\"IDs of NFTs to burn.\",\"owner\":\"Owner of NFTs to burn.\"},\"returns\":{\"metadata\":\"Metadata for each burned NFT.\"}},\"burnVaultShares(address,uint256,address[],uint256[])\":{\"details\":\"Requirements: - caller must have role ROLE_SMART_VAULT_MANAGER\",\"params\":{\"owner\":\"Address for which to burn the tokens.\",\"shares\":\"Amounts of strategy shares to release.\",\"strategies\":\"Strategies for which to release the strategy shares.\",\"vaultShares\":\"Amount of tokens to burn.\"}},\"claimShares(address,uint256)\":{\"details\":\"Requirements: - caller must have role ROLE_SMART_VAULT_MANAGER\",\"params\":{\"amount\":\"Amount of shares to transfer.\",\"claimer\":\"Address that claims the shares.\"}},\"getMetadata(uint256[])\":{\"params\":{\"nftIds\":\"IDs of NFTs.\"},\"returns\":{\"metadata\":\"Metadata for each requested NFT.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"mintDepositNFT(address,(uint256[],uint256,uint256))\":{\"details\":\"Supply of minted NFT is NFT_MINTED_SHARES (for partial burning). Requirements: - caller must have role ROLE_SMART_VAULT_MANAGER\",\"params\":{\"metadata\":\"Metadata to store for minted NFT.\",\"receiver\":\"Address that will receive the NFT.\"},\"returns\":{\"id\":\"ID of the minted NFT.\"}},\"mintVaultShares(address,uint256)\":{\"details\":\"Requirements: - caller must have role ROLE_SMART_VAULT_MANAGER\",\"params\":{\"receiver\":\"REceiver of minted tokens.\",\"vaultShares\":\"Amount of tokens to mint.\"}},\"mintWithdrawalNFT(address,(uint256,uint256))\":{\"details\":\"Supply of minted NFT is NFT_MINTED_SHARES (for partial burning). Requirements: - caller must have role ROLE_SMART_VAULT_MANAGER\",\"params\":{\"metadata\":\"Metadata to store for minted NFT.\",\"receiver\":\"Address that will receive the NFT.\"},\"returns\":{\"id\":\"ID of the minted NFT.\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"setBaseURI(string)\":{\"params\":{\"uri_\":\"new base URI value\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromSpender(address,address,uint256)\":{\"details\":\"Requirements: - caller must have role ROLE_SMART_VAULT_MANAGER\",\"params\":{\"amount\":\"Amount of tokens to transfer.\",\"from\":\"Spender and owner of tokens.\",\"to\":\"Address to which tokens will be transferred.\"},\"returns\":{\"success\":\"True if transfer was successful.\"}},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"},\"vaultName()\":{\"returns\":{\"name\":\"Name of the vault.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"BaseURIChanged(string)\":{\"notice\":\"Emitted when base URI is changed.\"}},\"kind\":\"user\",\"methods\":{\"assetGroupId()\":{\"notice\":\"Gets the asset group used by the smart vault.\"},\"balanceOfFractional(address,uint256)\":{\"notice\":\"Fractional balance of a NFT (0 - NFT_MINTED_SHARES).\"},\"balanceOfFractionalBatch(address,uint256[])\":{\"notice\":\"Fractional balance of a NFTs (0 - NFT_MINTED_SHARES).\"},\"burnNFTs(address,uint256[],uint256[])\":{\"notice\":\"Burns NFTs and returns their metadata. Allows for partial burning.\"},\"burnVaultShares(address,uint256,address[],uint256[])\":{\"notice\":\"Burns smart vault tokens and releases strategy shares back to strategies.\"},\"claimShares(address,uint256)\":{\"notice\":\"Transfers unclaimed shares to claimer.\"},\"getMetadata(uint256[])\":{\"notice\":\"Gets metadata for NFTs.\"},\"mintDepositNFT(address,(uint256[],uint256,uint256))\":{\"notice\":\"Mints a new deposit NFT.\"},\"mintVaultShares(address,uint256)\":{\"notice\":\"Mints smart vault tokens for receiver.\"},\"mintWithdrawalNFT(address,(uint256,uint256))\":{\"notice\":\"Mints a new withdrawal NFT.\"},\"setBaseURI(string)\":{\"notice\":\"Set a new base URI for ERC1155 metadata.\"},\"transferFromSpender(address,address,uint256)\":{\"notice\":\"Transfers smart vault tokens.\"},\"vaultName()\":{\"notice\":\"Gets the name of the smart vault.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISmartVault.sol\":\"ISmartVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/Constants.sol\":{\"keccak256\":\"0x14098998da750616c31e480b982f25c37d0cb60a1c7cebafe2d17b4670a41176\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://501f5aead8ee02766e81074fa96a2584006ce26c00a9d0881bd5217a7da209eb\",\"dweb:/ipfs/QmQMHVArLXpsqyTt4XBTef9d6wkYuRPJdizrpugkdYW4G2\"]},\"src/interfaces/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0x62d7d4155bf57a6f6a4d3e0c1440ab7fc4b9ad8362cd2742d63e7407ba37b025\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62323e9ef7bb540b7510b5bb2612cbf03234ed91be7e34af4c3834e2431f679a\",\"dweb:/ipfs/QmaKda4NqgrX9ebw9nxwSpDAUoS5iYXR9a9AKygknoxnWg\"]},\"src/interfaces/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xa1cf4a47b24f01053daa96f12d69b286f78944d5308051f3af480d2bed7d64c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbda5e13c955dc55963a5f7ce8ef17604b4bb35ae69b75e1550ea9d9b9ffd14e\",\"dweb:/ipfs/QmNMStubfavSKKsKJKjzXXY6FYQ69tRJdftFdq7jXtLrqE\"]},\"src/interfaces/IERC165Upgradeable.sol\":{\"keccak256\":\"0x781c3dfeacfed81d9f30ee1445f27a9c41f090ffbff6036e3f006f44281af864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7b9a2b8260eb971740c8ce4e67b30699990804f5bb4c4e80584700df7838c7\",\"dweb:/ipfs/QmWwtgynBvZre8JP42EoxDmmujnFS3Eiejd9gNK8peUB1X\"]},\"src/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0x22fffb4f5262e1ae532edeaccdedc85e449af7b50754b4a1be4a6ecd170120c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8581149cafbbec49bd361c3c50cf76d1f678644c7f87c66e66ba4a6efca5956c\",\"dweb:/ipfs/QmekQhe8dpzebJQBs5Ah13iHjdd1r8ysns7q3Ef8DGW6Lo\"]},\"src/interfaces/ISmartVault.sol\":{\"keccak256\":\"0xffc16686d0a28150aecd4811ed6d221f692f1897b5922561b1268a8a659eb19c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://760fb247c4c5ee5d660299ddd43d0ab088d02d12c567d6e994f8b3080e5d75d1\",\"dweb:/ipfs/Qmcg1t7WvQ4TTyufhLKWDmRukcCDhpS5jfrxwCbQqGMJfP\"]},\"src/interfaces/RequestType.sol\":{\"keccak256\":\"0xbbaf3f2dc27061b50dcd5469de28a40796da8dd5b518e13b5e893c3860ce2ce4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7f366b76d388720de2dc37b57cda39b3e483dd649a21f11a9f37cc66b8ae0751\",\"dweb:/ipfs/QmTg3TDzM7zzKbWoYTeqEki7dDhEQNzD2kzDTunMbQfoy8\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","assetGroupId()":"84ba89e3","balanceOf(address)":"70a08231","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","balanceOfFractional(address,uint256)":"5d9c84ee","balanceOfFractionalBatch(address,uint256[])":"539183e7","burnNFTs(address,uint256[],uint256[])":"a99fb771","burnVaultShares(address,uint256,address[],uint256[])":"e2281e0a","claimShares(address,uint256)":"2ce5183f","getMetadata(uint256[])":"a7614d81","isApprovedForAll(address,address)":"e985e9c5","mintDepositNFT(address,(uint256[],uint256,uint256))":"b4316087","mintVaultShares(address,uint256)":"f20046a8","mintWithdrawalNFT(address,(uint256,uint256))":"56ba9454","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferFromSpender(address,address,uint256)":"2acf4637","uri(uint256)":"0e89341c","vaultName()":"0ace9ca0"}}}},"src/interfaces/ISmartVaultManager.sol":{"ISmartVaultManager":{"abi":[{"type":"function","name":"allocations","inputs":[{"name":"smartVault","type":"address","internalType":"address"}],"outputs":[{"name":"allocation","type":"uint256","internalType":"uint16a16"}],"stateMutability":"view"},{"type":"function","name":"areAllDhwRunsCompleted","inputs":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"flushIndex","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"assetGroupId","inputs":[{"name":"smartVault","type":"address","internalType":"address"}],"outputs":[{"name":"assetGroupId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"claimSmartVaultTokens","inputs":[{"name":"smartVaultAddress","type":"address","internalType":"address"},{"name":"nftIds","type":"uint256[]","internalType":"uint256[]"},{"name":"nftAmounts","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"claimedAmount","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"claimWithdrawal","inputs":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"nftIds","type":"uint256[]","internalType":"uint256[]"},{"name":"nftAmounts","type":"uint256[]","internalType":"uint256[]"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[{"name":"assetAmounts","type":"uint256[]","internalType":"uint256[]"},{"name":"assetGroupId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"deposit","inputs":[{"name":"bag","type":"tuple","internalType":"struct DepositBag","components":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"assets","type":"uint256[]","internalType":"uint256[]"},{"name":"receiver","type":"address","internalType":"address"},{"name":"referral","type":"address","internalType":"address"},{"name":"doFlush","type":"bool","internalType":"bool"}]}],"outputs":[{"name":"receipt","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"depositRatio","inputs":[{"name":"smartVault","type":"address","internalType":"address"}],"outputs":[{"name":"ratio","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"dhwIndexes","inputs":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"flushIndex","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"dhwIndexes","type":"uint256","internalType":"uint16a16"}],"stateMutability":"view"},{"type":"function","name":"flushSmartVault","inputs":[{"name":"smartVault","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getLatestFlushIndex","inputs":[{"name":"smartVault","type":"address","internalType":"address"}],"outputs":[{"name":"flushIndex","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getSmartVaultFees","inputs":[{"name":"smartVault","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct SmartVaultFees","components":[{"name":"managementFeePct","type":"uint16","internalType":"uint16"},{"name":"depositFeePct","type":"uint16","internalType":"uint16"},{"name":"performanceFeePct","type":"uint16","internalType":"uint16"}]}],"stateMutability":"view"},{"type":"function","name":"reallocate","inputs":[{"name":"reallocateParams","type":"tuple","internalType":"struct ReallocateParamBag","components":[{"name":"smartVaults","type":"address[]","internalType":"address[]"},{"name":"strategies","type":"address[]","internalType":"address[]"},{"name":"swapInfo","type":"tuple[][]","internalType":"struct SwapInfo[][]","components":[{"name":"swapTarget","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"address"},{"name":"swapCallData","type":"bytes","internalType":"bytes"}]},{"name":"depositSlippages","type":"uint256[][]","internalType":"uint256[][]"},{"name":"withdrawalSlippages","type":"uint256[][]","internalType":"uint256[][]"},{"name":"exchangeRateSlippages","type":"uint256[2][]","internalType":"uint256[2][]"},{"name":"validUntil","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recoverPendingDeposits","inputs":[{"name":"smartVault","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"redeem","inputs":[{"name":"bag","type":"tuple","internalType":"struct RedeemBag","components":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"nftIds","type":"uint256[]","internalType":"uint256[]"},{"name":"nftAmounts","type":"uint256[]","internalType":"uint256[]"}]},{"name":"receiver","type":"address","internalType":"address"},{"name":"doFlush","type":"bool","internalType":"bool"}],"outputs":[{"name":"receipt","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"redeemFast","inputs":[{"name":"bag","type":"tuple","internalType":"struct RedeemBag","components":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"nftIds","type":"uint256[]","internalType":"uint256[]"},{"name":"nftAmounts","type":"uint256[]","internalType":"uint256[]"}]},{"name":"withdrawalSlippages","type":"uint256[][]","internalType":"uint256[][]"}],"outputs":[{"name":"withdrawnAssets","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"redeemFastView","inputs":[{"name":"bag","type":"tuple","internalType":"struct RedeemBag","components":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"nftIds","type":"uint256[]","internalType":"uint256[]"},{"name":"nftAmounts","type":"uint256[]","internalType":"uint256[]"}]},{"name":"withdrawalSlippages","type":"uint256[][]","internalType":"uint256[][]"},{"name":"redeemer","type":"address","internalType":"address"}],"outputs":[{"name":"withdrawnAssets","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"redeemFor","inputs":[{"name":"bag","type":"tuple","internalType":"struct RedeemBag","components":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"nftIds","type":"uint256[]","internalType":"uint256[]"},{"name":"nftAmounts","type":"uint256[]","internalType":"uint256[]"}]},{"name":"owner","type":"address","internalType":"address"},{"name":"doFlush","type":"bool","internalType":"bool"}],"outputs":[{"name":"receipt","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"registerSmartVault","inputs":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"registrationForm","type":"tuple","internalType":"struct SmartVaultRegistrationForm","components":[{"name":"assetGroupId","type":"uint256","internalType":"uint256"},{"name":"strategies","type":"address[]","internalType":"address[]"},{"name":"strategyAllocation","type":"uint256","internalType":"uint16a16"},{"name":"managementFeePct","type":"uint16","internalType":"uint16"},{"name":"depositFeePct","type":"uint16","internalType":"uint16"},{"name":"performanceFeePct","type":"uint16","internalType":"uint16"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeStrategyFromVaults","inputs":[{"name":"strategy","type":"address","internalType":"address"},{"name":"vaults","type":"address[]","internalType":"address[]"},{"name":"disableStrategy","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"simulateSync","inputs":[{"name":"smartVault","type":"address","internalType":"address"}],"outputs":[{"name":"oldTotalSVTs","type":"uint256","internalType":"uint256"},{"name":"mintedSVTs","type":"uint256","internalType":"uint256"},{"name":"feeSVTs","type":"uint256","internalType":"uint256"},{"name":"sstShares","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"simulateSyncWithBurn","inputs":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"userAddress","type":"address","internalType":"address"},{"name":"nftIds","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"svts","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"strategies","inputs":[{"name":"smartVault","type":"address","internalType":"address"}],"outputs":[{"name":"strategies","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"syncSmartVault","inputs":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"revertIfError","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"SmartVaultFlushed","inputs":[{"name":"smartVault","type":"address","indexed":true,"internalType":"address"},{"name":"flushIndex","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"SmartVaultReallocated","inputs":[{"name":"smartVault","type":"address","indexed":true,"internalType":"address"},{"name":"newAllocations","type":"uint256","indexed":false,"internalType":"uint16a16"}],"anonymous":false},{"type":"event","name":"SmartVaultRegistered","inputs":[{"name":"smartVault","type":"address","indexed":true,"internalType":"address"},{"name":"registrationForm","type":"tuple","indexed":false,"internalType":"struct SmartVaultRegistrationForm","components":[{"name":"assetGroupId","type":"uint256","internalType":"uint256"},{"name":"strategies","type":"address[]","internalType":"address[]"},{"name":"strategyAllocation","type":"uint256","internalType":"uint16a16"},{"name":"managementFeePct","type":"uint16","internalType":"uint16"},{"name":"depositFeePct","type":"uint16","internalType":"uint16"},{"name":"performanceFeePct","type":"uint16","internalType":"uint16"}]}],"anonymous":false},{"type":"event","name":"SmartVaultSynced","inputs":[{"name":"smartVault","type":"address","indexed":true,"internalType":"address"},{"name":"flushIndex","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"StrategyRemovedFromVault","inputs":[{"name":"strategy","type":"address","indexed":true,"internalType":"address"},{"name":"vault","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"}],\"name\":\"SmartVaultFlushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16a16\",\"name\":\"newAllocations\",\"type\":\"uint256\"}],\"name\":\"SmartVaultReallocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"assetGroupId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint16a16\",\"name\":\"strategyAllocation\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"managementFeePct\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"depositFeePct\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"performanceFeePct\",\"type\":\"uint16\"}],\"indexed\":false,\"internalType\":\"struct SmartVaultRegistrationForm\",\"name\":\"registrationForm\",\"type\":\"tuple\"}],\"name\":\"SmartVaultRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"}],\"name\":\"SmartVaultSynced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromVault\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"allocations\",\"outputs\":[{\"internalType\":\"uint16a16\",\"name\":\"allocation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"}],\"name\":\"areAllDhwRunsCompleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"assetGroupId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assetGroupId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVaultAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"}],\"name\":\"claimSmartVaultTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"claimWithdrawal\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"assetAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"assetGroupId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"assets\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"doFlush\",\"type\":\"bool\"}],\"internalType\":\"struct DepositBag\",\"name\":\"bag\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"receipt\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"depositRatio\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ratio\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"}],\"name\":\"dhwIndexes\",\"outputs\":[{\"internalType\":\"uint16a16\",\"name\":\"dhwIndexes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"flushSmartVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"getLatestFlushIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"getSmartVaultFees\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"managementFeePct\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"depositFeePct\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"performanceFeePct\",\"type\":\"uint16\"}],\"internalType\":\"struct SmartVaultFees\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"smartVaults\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"swapTarget\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"swapCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapInfo[][]\",\"name\":\"swapInfo\",\"type\":\"tuple[][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"depositSlippages\",\"type\":\"uint256[][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"withdrawalSlippages\",\"type\":\"uint256[][]\"},{\"internalType\":\"uint256[2][]\",\"name\":\"exchangeRateSlippages\",\"type\":\"uint256[2][]\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct ReallocateParamBag\",\"name\":\"reallocateParams\",\"type\":\"tuple\"}],\"name\":\"reallocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"recoverPendingDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct RedeemBag\",\"name\":\"bag\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"doFlush\",\"type\":\"bool\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"receipt\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct RedeemBag\",\"name\":\"bag\",\"type\":\"tuple\"},{\"internalType\":\"uint256[][]\",\"name\":\"withdrawalSlippages\",\"type\":\"uint256[][]\"}],\"name\":\"redeemFast\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"withdrawnAssets\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct RedeemBag\",\"name\":\"bag\",\"type\":\"tuple\"},{\"internalType\":\"uint256[][]\",\"name\":\"withdrawalSlippages\",\"type\":\"uint256[][]\"},{\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"}],\"name\":\"redeemFastView\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"withdrawnAssets\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct RedeemBag\",\"name\":\"bag\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"doFlush\",\"type\":\"bool\"}],\"name\":\"redeemFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"receipt\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"assetGroupId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint16a16\",\"name\":\"strategyAllocation\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"managementFeePct\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"depositFeePct\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"performanceFeePct\",\"type\":\"uint16\"}],\"internalType\":\"struct SmartVaultRegistrationForm\",\"name\":\"registrationForm\",\"type\":\"tuple\"}],\"name\":\"registerSmartVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"vaults\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"disableStrategy\",\"type\":\"bool\"}],\"name\":\"removeStrategyFromVaults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"simulateSync\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldTotalSVTs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintedSVTs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeSVTs\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"sstShares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"}],\"name\":\"simulateSyncWithBurn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"svts\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"strategies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revertIfError\",\"type\":\"bool\"}],\"name\":\"syncSmartVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"SmartVaultFlushed(address,uint256)\":{\"params\":{\"flushIndex\":\"Flush index\",\"smartVault\":\"Smart vault address\"}},\"SmartVaultReallocated(address,uint256)\":{\"params\":{\"newAllocations\":\"new vault strategy allocations\",\"smartVault\":\"Smart vault address\"}},\"SmartVaultRegistered(address,(uint256,address[],uint256,uint16,uint16,uint16))\":{\"params\":{\"registrationForm\":\"Smart vault configuration\",\"smartVault\":\"Smart vault address\"}},\"SmartVaultSynced(address,uint256)\":{\"params\":{\"flushIndex\":\"Flush index\",\"smartVault\":\"Smart vault address\"}},\"StrategyRemovedFromVault(address,address)\":{\"params\":{\"strategy\":\"Strategy address\",\"vault\":\"Vault to remove the strategy from\"}}},\"kind\":\"dev\",\"methods\":{\"allocations(address)\":{\"params\":{\"smartVault\":\"Smart vault.\"},\"returns\":{\"allocation\":\"Strategy allocation for the smart vault.\"}},\"areAllDhwRunsCompleted(address,uint256)\":{\"details\":\"Check whether all DHW runs were completed for given flush index\"},\"assetGroupId(address)\":{\"params\":{\"smartVault\":\"Smart vault.\"},\"returns\":{\"assetGroupId\":\"ID of the asset group used by the smart vault.\"}},\"claimSmartVaultTokens(address,uint256[],uint256[])\":{\"details\":\"Requirements: - deposit NFT must be valid - flush must be synced\",\"params\":{\"nftAmounts\":\"amounts\",\"nftIds\":\"ID of the deposit NFT to burn.\",\"smartVaultAddress\":\"Address of the smart vault that issued the deposit NFT.\"},\"returns\":{\"claimedAmount\":\"Amount of smart vault tokens claimed.\"}},\"claimWithdrawal(address,uint256[],uint256[],address)\":{\"details\":\"Requirements: - withdrawal NFT must be valid\",\"params\":{\"nftAmounts\":\"amounts\",\"nftIds\":\"ID of withdrawal NFT to burn.\",\"receiver\":\"Receiver of claimed assets.\",\"smartVault\":\"Address of the smart vault that issued the withdrawal NFT.\"},\"returns\":{\"assetAmounts\":\"Amounts of assets claimed.\",\"assetGroupId\":\"ID of the asset group.\"}},\"deposit((address,uint256[],address,address,bool))\":{\"params\":{\"bag\":\"smartVault address, assets, NFT receiver address, referral address, doFlush\"},\"returns\":{\"receipt\":\"ID of the receipt deposit NFT.\"}},\"depositRatio(address)\":{\"params\":{\"smartVault\":\"Smart vault.\"},\"returns\":{\"ratio\":\"Required deposit ratio for the smart vault.\"}},\"dhwIndexes(address,uint256)\":{\"params\":{\"flushIndex\":\"Flush index.\",\"smartVault\":\"Smart vault.\"},\"returns\":{\"dhwIndexes\":\"Do-hard-work indexes for flush index of the smart vault.\"}},\"flushSmartVault(address)\":{\"params\":{\"smartVault\":\"Smart vault to flush.\"}},\"getLatestFlushIndex(address)\":{\"params\":{\"smartVault\":\"Smart vault.\"},\"returns\":{\"flushIndex\":\"Latest flush index for the smart vault.\"}},\"getSmartVaultFees(address)\":{\"params\":{\"smartVault\":\"Smart vault.\"},\"returns\":{\"_0\":\"SmartVaultFees\"}},\"reallocate((address[],address[],(address,address,bytes)[][],uint256[][],uint256[][],uint256[2][],uint256))\":{\"details\":\"Requirements: - caller must have a ROLE_REALLOCATOR role - smart vaults must be registered - smart vaults must use same asset group - strategies must represent a set of strategies used by smart vaults\",\"params\":{\"reallocateParams\":\"Paramaters for reallocation.\"}},\"recoverPendingDeposits(address)\":{\"details\":\"Requirements: - caller must have role ROLE_SPOOL_ADMIN - all strategies of the smart vault need to be ghost strategies\",\"params\":{\"smartVault\":\"Smart vault from which to recover pending deposits.\"}},\"redeem((address,uint256,uint256[],uint256[]),address,bool)\":{\"params\":{\"bag\":\"smart vault address, amount of shares to redeem, nft ids and amounts to burn\",\"doFlush\":\"optionally flush the smart vault\",\"receiver\":\"address that will receive the withdrawal NFT\"},\"returns\":{\"receipt\":\"ID of the receipt withdrawal NFT.\"}},\"redeemFast((address,uint256,uint256[],uint256[]),uint256[][])\":{\"params\":{\"bag\":\"Parameters for fast redeemal.\",\"withdrawalSlippages\":\"Slippages guarding redeemal.\"},\"returns\":{\"withdrawnAssets\":\"Amount of assets withdrawn.\"}},\"redeemFastView((address,uint256,uint256[],uint256[]),uint256[][],address)\":{\"details\":\"Should only be run by address zero to simulate the redeemal and parse logs.\",\"params\":{\"bag\":\"Parameters for fast redeemal.\",\"redeemer\":\"Address of a user to simulate redeem for.\",\"withdrawalSlippages\":\"Slippages guarding redeemal.\"},\"returns\":{\"withdrawnAssets\":\"Amount of assets withdrawn.\"}},\"redeemFor((address,uint256,uint256[],uint256[]),address,bool)\":{\"params\":{\"bag\":\"smart vault address, amount of shares to redeem, nft ids and amounts to burn\",\"doFlush\":\"optionally flush the smart vault\",\"owner\":\"address that owns the shares to be redeemed and will receive the withdrawal NFT\"},\"returns\":{\"receipt\":\"ID of the receipt withdrawal NFT.\"}},\"registerSmartVault(address,(uint256,address[],uint256,uint16,uint16,uint16))\":{\"details\":\"Requirements: - caller must have role ROLE_SMART_VAULT_INTEGRATOR\",\"params\":{\"registrationForm\":\"Form with information for registration.\",\"smartVault\":\"Smart vault to register.\"}},\"removeStrategyFromVaults(address,address[],bool)\":{\"details\":\"Requirements: - caller must have role ROLE_SPOOL_ADMIN - the strategy has to be active (requires ROLE_STRATEGY)\",\"params\":{\"disableStrategy\":\"Also disable the strategy across the system\",\"strategy\":\"Strategy address to remove.\",\"vaults\":\"Array of vaults from which to remove the strategy\"}},\"simulateSync(address)\":{\"details\":\"Calculate number of SVTs that haven't been synced yet after DHW runs DHW has minted strategy shares, but vaults haven't claimed them yet. Includes management fees (percentage of assets under management, distributed throughout a year) and deposit fees . Invariants: - There can't be more than once un-synced flush index per vault at any given time. - Flush index can't be synced, if all DHWs haven't been completed yet. Can be used to retrieve the number of SSTs the vault would claim during sync.\",\"params\":{\"smartVault\":\"SmartVault address\"},\"returns\":{\"feeSVTs\":\"Amount of SVTs pertaining to fees\",\"mintedSVTs\":\"Amount of SVTs minted during sync\",\"oldTotalSVTs\":\"Amount of SVTs before sync\",\"sstShares\":\"Amount of SSTs claimed per strategy\"}},\"simulateSyncWithBurn(address,address,uint256[])\":{\"details\":\"Simulate sync when burning dNFTs and return their svts value.\",\"params\":{\"nftIds\":\"Ids of dNFTs\",\"smartVault\":\"SmartVault address\",\"userAddress\":\"User address that owns dNFTs\"},\"returns\":{\"svts\":\"Amount of svts user would get if he burns dNFTs\"}},\"strategies(address)\":{\"params\":{\"smartVault\":\"Smart vault.\"},\"returns\":{\"strategies\":\"Strategies for the smart vault.\"}},\"syncSmartVault(address,bool)\":{\"params\":{\"revertIfError\":\"If true, sync will revert if every flush index cannot be synced; if false it will sync all flush indexes it can.\",\"smartVault\":\"Smart vault to sync.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"SmartVaultFlushed(address,uint256)\":{\"notice\":\"Smart vault has been flushed\"},\"SmartVaultReallocated(address,uint256)\":{\"notice\":\"Vault was reallocation executed\"},\"SmartVaultRegistered(address,(uint256,address[],uint256,uint16,uint16,uint16))\":{\"notice\":\"Smart vault has been registered\"},\"SmartVaultSynced(address,uint256)\":{\"notice\":\"Smart vault has been synced\"},\"StrategyRemovedFromVault(address,address)\":{\"notice\":\"Strategy was removed from the vault\"}},\"kind\":\"user\",\"methods\":{\"allocations(address)\":{\"notice\":\"Gets strategy allocation for a smart vault.\"},\"assetGroupId(address)\":{\"notice\":\"Gets asest group used by a smart vault.\"},\"claimSmartVaultTokens(address,uint256[],uint256[])\":{\"notice\":\"Claims smart vault tokens by burning the deposit NFT.\"},\"claimWithdrawal(address,uint256[],uint256[],address)\":{\"notice\":\"Claims withdrawal of assets by burning withdrawal NFT.\"},\"deposit((address,uint256[],address,address,bool))\":{\"notice\":\"Initiated a deposit and mints a deposit NFT. Once all DHWs are executed, user can unwrap the deposit NDF and claim his SVTs.\"},\"depositRatio(address)\":{\"notice\":\"Gets required deposit ratio for a smart vault.\"},\"dhwIndexes(address,uint256)\":{\"notice\":\"Gets do-hard-work indexes.\"},\"flushSmartVault(address)\":{\"notice\":\"Flushes deposits and withdrawal for the next do-hard-work.\"},\"getLatestFlushIndex(address)\":{\"notice\":\"Gets latest flush index for a smart vault.\"},\"getSmartVaultFees(address)\":{\"notice\":\"Get smartVault fees\"},\"reallocate((address[],address[],(address,address,bytes)[][],uint256[][],uint256[][],uint256[2][],uint256))\":{\"notice\":\"Reallocates smart vaults.\"},\"recoverPendingDeposits(address)\":{\"notice\":\"Recovers pending deposits from smart vault to emergency wallet.\"},\"redeem((address,uint256,uint256[],uint256[]),address,bool)\":{\"notice\":\"Initiates a withdrawal process and mints a withdrawal NFT. Once all DHWs are executed, user can use the withdrawal NFT to claim the assets. Optionally, caller can pass a list of deposit NFTs to unwrap.\"},\"redeemFast((address,uint256,uint256[],uint256[]),uint256[][])\":{\"notice\":\"Instantly redeems smart vault shares for assets.\"},\"redeemFastView((address,uint256,uint256[],uint256[]),uint256[][],address)\":{\"notice\":\"Simulates redeem fast of smart vault shares.\"},\"redeemFor((address,uint256,uint256[],uint256[]),address,bool)\":{\"notice\":\"Initiates a withdrawal process and mints a withdrawal NFT. Once all DHWs are executed, user can use the withdrawal NFT to claim the assets. Optionally, caller can pass a list of deposit NFTs to unwrap.\"},\"registerSmartVault(address,(uint256,address[],uint256,uint16,uint16,uint16))\":{\"notice\":\"Registers smart vault into the Spool protocol.\"},\"removeStrategyFromVaults(address,address[],bool)\":{\"notice\":\"Removes strategy from vaults, and optionally removes it from the system as well.\"},\"strategies(address)\":{\"notice\":\"Gets strategies used by a smart vault.\"},\"syncSmartVault(address,bool)\":{\"notice\":\"Syncs smart vault with strategies.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISmartVaultManager.sol\":\"ISmartVaultManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/Constants.sol\":{\"keccak256\":\"0x14098998da750616c31e480b982f25c37d0cb60a1c7cebafe2d17b4670a41176\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://501f5aead8ee02766e81074fa96a2584006ce26c00a9d0881bd5217a7da209eb\",\"dweb:/ipfs/QmQMHVArLXpsqyTt4XBTef9d6wkYuRPJdizrpugkdYW4G2\"]},\"src/interfaces/IDepositManager.sol\":{\"keccak256\":\"0xb48577b668b117d0ada011bfe742e5b78e2ae3e55847e200204332ef1b9abd6f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a21d1175bc5b6b92f97afe23e1de3fea6d2c1569d250da7425c3d9075251881a\",\"dweb:/ipfs/QmYB3R18Js9H3J1Pp6YNpp983MfdBqBLAQbyriqS3GYRPn\"]},\"src/interfaces/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0x62d7d4155bf57a6f6a4d3e0c1440ab7fc4b9ad8362cd2742d63e7407ba37b025\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62323e9ef7bb540b7510b5bb2612cbf03234ed91be7e34af4c3834e2431f679a\",\"dweb:/ipfs/QmaKda4NqgrX9ebw9nxwSpDAUoS5iYXR9a9AKygknoxnWg\"]},\"src/interfaces/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xa1cf4a47b24f01053daa96f12d69b286f78944d5308051f3af480d2bed7d64c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbda5e13c955dc55963a5f7ce8ef17604b4bb35ae69b75e1550ea9d9b9ffd14e\",\"dweb:/ipfs/QmNMStubfavSKKsKJKjzXXY6FYQ69tRJdftFdq7jXtLrqE\"]},\"src/interfaces/IERC165Upgradeable.sol\":{\"keccak256\":\"0x781c3dfeacfed81d9f30ee1445f27a9c41f090ffbff6036e3f006f44281af864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7b9a2b8260eb971740c8ce4e67b30699990804f5bb4c4e80584700df7838c7\",\"dweb:/ipfs/QmWwtgynBvZre8JP42EoxDmmujnFS3Eiejd9gNK8peUB1X\"]},\"src/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0x22fffb4f5262e1ae532edeaccdedc85e449af7b50754b4a1be4a6ecd170120c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8581149cafbbec49bd361c3c50cf76d1f678644c7f87c66e66ba4a6efca5956c\",\"dweb:/ipfs/QmekQhe8dpzebJQBs5Ah13iHjdd1r8ysns7q3Ef8DGW6Lo\"]},\"src/interfaces/ISmartVault.sol\":{\"keccak256\":\"0xffc16686d0a28150aecd4811ed6d221f692f1897b5922561b1268a8a659eb19c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://760fb247c4c5ee5d660299ddd43d0ab088d02d12c567d6e994f8b3080e5d75d1\",\"dweb:/ipfs/Qmcg1t7WvQ4TTyufhLKWDmRukcCDhpS5jfrxwCbQqGMJfP\"]},\"src/interfaces/ISmartVaultManager.sol\":{\"keccak256\":\"0xe5074aa2199629ac655b5ade12bf64a9d170f024334638e3b22e432a122067c3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ac87a8f615bd325143c1f6f9c96ef1eee3be42a267f459a6f3da36f89e7cc86d\",\"dweb:/ipfs/QmW1G2vaiSFD4MefYCJQBBViiCYCxR6HAFUt9aNeUqc1Yr\"]},\"src/interfaces/ISwapper.sol\":{\"keccak256\":\"0x52bf0742ec1e3d68209f09622618f7f6b7adcc559c1e453dd3ee1c1537b1acde\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://498d832f14e6c8e4b316225f3a4a86fbf8172a85bd7aa090aeab3d9dbecba696\",\"dweb:/ipfs/QmSntDHhXLu1exqsbEufwVQd4QxfkjyTy71sitdtuPEWkr\"]},\"src/interfaces/IWithdrawalManager.sol\":{\"keccak256\":\"0xfa98436bff85e1abda8d43df82bdbbe6aa830f9c73f65a636c6c798dab019178\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b93b1831cd287ae3cd8b81edab326d1a99b851f89253e6a4cfd211276e422f33\",\"dweb:/ipfs/Qmbw92Mgbnim6uMncRxd47N2Gm8nLxnRVDW1zTVLUxnqb5\"]},\"src/interfaces/RequestType.sol\":{\"keccak256\":\"0xbbaf3f2dc27061b50dcd5469de28a40796da8dd5b518e13b5e893c3860ce2ce4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7f366b76d388720de2dc37b57cda39b3e483dd649a21f11a9f37cc66b8ae0751\",\"dweb:/ipfs/QmTg3TDzM7zzKbWoYTeqEki7dDhEQNzD2kzDTunMbQfoy8\"]},\"src/interfaces/uint16a16Lib.sol\":{\"keccak256\":\"0x6c8aa38e7d3d3c9ebffbfe08a5264d4e8c76ec4ef68caa4a909253ca31d2e151\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40485649f9288e095945277b23b709c4d52e9d8d50fb278ee4c1d79fef185061\",\"dweb:/ipfs/QmNeLD1UWDwzS3pht1GSVhqhUrdNSXXBbhbRcdrxTNMcUb\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allocations(address)":"52a9039c","areAllDhwRunsCompleted(address,uint256)":"ea52c910","assetGroupId(address)":"6e6462d6","claimSmartVaultTokens(address,uint256[],uint256[])":"61189dd3","claimWithdrawal(address,uint256[],uint256[],address)":"f8a70486","deposit((address,uint256[],address,address,bool))":"fa15b91b","depositRatio(address)":"f8fdca7a","dhwIndexes(address,uint256)":"e90173bd","flushSmartVault(address)":"0d574535","getLatestFlushIndex(address)":"a1280e4d","getSmartVaultFees(address)":"5aa090a0","reallocate((address[],address[],(address,address,bytes)[][],uint256[][],uint256[][],uint256[2][],uint256))":"fe19c168","recoverPendingDeposits(address)":"260c2313","redeem((address,uint256,uint256[],uint256[]),address,bool)":"388bbfd3","redeemFast((address,uint256,uint256[],uint256[]),uint256[][])":"e1c2eea6","redeemFastView((address,uint256,uint256[],uint256[]),uint256[][],address)":"c6a6d7cb","redeemFor((address,uint256,uint256[],uint256[]),address,bool)":"7f03e683","registerSmartVault(address,(uint256,address[],uint256,uint16,uint16,uint16))":"146c6743","removeStrategyFromVaults(address,address[],bool)":"a1bd9cc1","simulateSync(address)":"bb9a7578","simulateSyncWithBurn(address,address,uint256[])":"ab1e74ca","strategies(address)":"39ebf823","syncSmartVault(address,bool)":"73bf0e50"}}},"ISmartVaultRegistry":{"abi":[{"type":"function","name":"registerSmartVault","inputs":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"registrationForm","type":"tuple","internalType":"struct SmartVaultRegistrationForm","components":[{"name":"assetGroupId","type":"uint256","internalType":"uint256"},{"name":"strategies","type":"address[]","internalType":"address[]"},{"name":"strategyAllocation","type":"uint256","internalType":"uint16a16"},{"name":"managementFeePct","type":"uint16","internalType":"uint16"},{"name":"depositFeePct","type":"uint16","internalType":"uint16"},{"name":"performanceFeePct","type":"uint16","internalType":"uint16"}]}],"outputs":[],"stateMutability":"nonpayable"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"assetGroupId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint16a16\",\"name\":\"strategyAllocation\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"managementFeePct\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"depositFeePct\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"performanceFeePct\",\"type\":\"uint16\"}],\"internalType\":\"struct SmartVaultRegistrationForm\",\"name\":\"registrationForm\",\"type\":\"tuple\"}],\"name\":\"registerSmartVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"registerSmartVault(address,(uint256,address[],uint256,uint16,uint16,uint16))\":{\"details\":\"Requirements: - caller must have role ROLE_SMART_VAULT_INTEGRATOR\",\"params\":{\"registrationForm\":\"Form with information for registration.\",\"smartVault\":\"Smart vault to register.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"registerSmartVault(address,(uint256,address[],uint256,uint16,uint16,uint16))\":{\"notice\":\"Registers smart vault into the Spool protocol.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISmartVaultManager.sol\":\"ISmartVaultRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/Constants.sol\":{\"keccak256\":\"0x14098998da750616c31e480b982f25c37d0cb60a1c7cebafe2d17b4670a41176\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://501f5aead8ee02766e81074fa96a2584006ce26c00a9d0881bd5217a7da209eb\",\"dweb:/ipfs/QmQMHVArLXpsqyTt4XBTef9d6wkYuRPJdizrpugkdYW4G2\"]},\"src/interfaces/IDepositManager.sol\":{\"keccak256\":\"0xb48577b668b117d0ada011bfe742e5b78e2ae3e55847e200204332ef1b9abd6f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a21d1175bc5b6b92f97afe23e1de3fea6d2c1569d250da7425c3d9075251881a\",\"dweb:/ipfs/QmYB3R18Js9H3J1Pp6YNpp983MfdBqBLAQbyriqS3GYRPn\"]},\"src/interfaces/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0x62d7d4155bf57a6f6a4d3e0c1440ab7fc4b9ad8362cd2742d63e7407ba37b025\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62323e9ef7bb540b7510b5bb2612cbf03234ed91be7e34af4c3834e2431f679a\",\"dweb:/ipfs/QmaKda4NqgrX9ebw9nxwSpDAUoS5iYXR9a9AKygknoxnWg\"]},\"src/interfaces/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xa1cf4a47b24f01053daa96f12d69b286f78944d5308051f3af480d2bed7d64c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbda5e13c955dc55963a5f7ce8ef17604b4bb35ae69b75e1550ea9d9b9ffd14e\",\"dweb:/ipfs/QmNMStubfavSKKsKJKjzXXY6FYQ69tRJdftFdq7jXtLrqE\"]},\"src/interfaces/IERC165Upgradeable.sol\":{\"keccak256\":\"0x781c3dfeacfed81d9f30ee1445f27a9c41f090ffbff6036e3f006f44281af864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7b9a2b8260eb971740c8ce4e67b30699990804f5bb4c4e80584700df7838c7\",\"dweb:/ipfs/QmWwtgynBvZre8JP42EoxDmmujnFS3Eiejd9gNK8peUB1X\"]},\"src/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0x22fffb4f5262e1ae532edeaccdedc85e449af7b50754b4a1be4a6ecd170120c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8581149cafbbec49bd361c3c50cf76d1f678644c7f87c66e66ba4a6efca5956c\",\"dweb:/ipfs/QmekQhe8dpzebJQBs5Ah13iHjdd1r8ysns7q3Ef8DGW6Lo\"]},\"src/interfaces/ISmartVault.sol\":{\"keccak256\":\"0xffc16686d0a28150aecd4811ed6d221f692f1897b5922561b1268a8a659eb19c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://760fb247c4c5ee5d660299ddd43d0ab088d02d12c567d6e994f8b3080e5d75d1\",\"dweb:/ipfs/Qmcg1t7WvQ4TTyufhLKWDmRukcCDhpS5jfrxwCbQqGMJfP\"]},\"src/interfaces/ISmartVaultManager.sol\":{\"keccak256\":\"0xe5074aa2199629ac655b5ade12bf64a9d170f024334638e3b22e432a122067c3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ac87a8f615bd325143c1f6f9c96ef1eee3be42a267f459a6f3da36f89e7cc86d\",\"dweb:/ipfs/QmW1G2vaiSFD4MefYCJQBBViiCYCxR6HAFUt9aNeUqc1Yr\"]},\"src/interfaces/ISwapper.sol\":{\"keccak256\":\"0x52bf0742ec1e3d68209f09622618f7f6b7adcc559c1e453dd3ee1c1537b1acde\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://498d832f14e6c8e4b316225f3a4a86fbf8172a85bd7aa090aeab3d9dbecba696\",\"dweb:/ipfs/QmSntDHhXLu1exqsbEufwVQd4QxfkjyTy71sitdtuPEWkr\"]},\"src/interfaces/IWithdrawalManager.sol\":{\"keccak256\":\"0xfa98436bff85e1abda8d43df82bdbbe6aa830f9c73f65a636c6c798dab019178\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b93b1831cd287ae3cd8b81edab326d1a99b851f89253e6a4cfd211276e422f33\",\"dweb:/ipfs/Qmbw92Mgbnim6uMncRxd47N2Gm8nLxnRVDW1zTVLUxnqb5\"]},\"src/interfaces/RequestType.sol\":{\"keccak256\":\"0xbbaf3f2dc27061b50dcd5469de28a40796da8dd5b518e13b5e893c3860ce2ce4\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7f366b76d388720de2dc37b57cda39b3e483dd649a21f11a9f37cc66b8ae0751\",\"dweb:/ipfs/QmTg3TDzM7zzKbWoYTeqEki7dDhEQNzD2kzDTunMbQfoy8\"]},\"src/interfaces/uint16a16Lib.sol\":{\"keccak256\":\"0x6c8aa38e7d3d3c9ebffbfe08a5264d4e8c76ec4ef68caa4a909253ca31d2e151\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40485649f9288e095945277b23b709c4d52e9d8d50fb278ee4c1d79fef185061\",\"dweb:/ipfs/QmNeLD1UWDwzS3pht1GSVhqhUrdNSXXBbhbRcdrxTNMcUb\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"registerSmartVault(address,(uint256,address[],uint256,uint16,uint16,uint16))":"146c6743"}}}},"src/interfaces/ISwapper.sol":{"ISwapper":{"abi":[{"type":"function","name":"isExchangeAllowed","inputs":[{"name":"exchange","type":"address","internalType":"address"}],"outputs":[{"name":"isAllowed","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"swap","inputs":[{"name":"tokensIn","type":"address[]","internalType":"address[]"},{"name":"swapInfo","type":"tuple[]","internalType":"struct SwapInfo[]","components":[{"name":"swapTarget","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"address"},{"name":"swapCallData","type":"bytes","internalType":"bytes"}]},{"name":"tokensOut","type":"address[]","internalType":"address[]"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[{"name":"amountsOut","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"updateExchangeAllowlist","inputs":[{"name":"exchanges","type":"address[]","internalType":"address[]"},{"name":"allowed","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ExchangeAllowlistUpdated","inputs":[{"name":"exchange","type":"address","indexed":true,"internalType":"address"},{"name":"isAllowed","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"Swapped","inputs":[{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"tokensIn","type":"address[]","indexed":false,"internalType":"address[]"},{"name":"tokensOut","type":"address[]","indexed":false,"internalType":"address[]"},{"name":"amountsIn","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"amountsOut","type":"uint256[]","indexed":false,"internalType":"uint256[]"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exchange\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"name\":\"ExchangeAllowlistUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokensIn\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokensOut\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsIn\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"exchange\",\"type\":\"address\"}],\"name\":\"isExchangeAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokensIn\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"swapTarget\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"swapCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapInfo[]\",\"name\":\"swapInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensOut\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsOut\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"exchanges\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"allowed\",\"type\":\"bool[]\"}],\"name\":\"updateExchangeAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ExchangeAllowlistUpdated(address,bool)\":{\"params\":{\"exchange\":\"Exchange that was updated.\",\"isAllowed\":\"Whether the exchange is allowed to be used in a swap or not after the update.\"}}},\"kind\":\"dev\",\"methods\":{\"isExchangeAllowed(address)\":{\"params\":{\"exchange\":\"Exchange to check.\"},\"returns\":{\"isAllowed\":\"True if the exchange is allowed to be used in a swap, false otherwise.\"}},\"swap(address[],(address,address,bytes)[],address[],address)\":{\"params\":{\"receiver\":\"Receiver of unswapped tokens.\",\"swapInfo\":\"Information needed to perform the swap.\",\"tokensIn\":\"Addresses of tokens available for the swap.\",\"tokensOut\":\"Addresses of tokens to swap to.\"},\"returns\":{\"amountsOut\":\"Amounts of `tokensOut` sent from the swapper to the receiver.\"}},\"updateExchangeAllowlist(address[],bool[])\":{\"details\":\"Requirements:   - can only be called by user granted ROLE_SPOOL_ADMIN   - exchanges and allowed arrays need to be of same length\",\"params\":{\"allowed\":\"Whether an exchange is allowed to be used in a swap.\",\"exchanges\":\"Addresses of exchanges.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ExchangeAllowlistUpdated(address,bool)\":{\"notice\":\"Emitted when the exchange allowlist is updated.\"}},\"kind\":\"user\",\"methods\":{\"isExchangeAllowed(address)\":{\"notice\":\"Checks if an exchange is allowed to be used in a swap.\"},\"swap(address[],(address,address,bytes)[],address[],address)\":{\"notice\":\"Performs a swap of tokens with external contracts. - deposit tokens into the swapper contract - swapper will swap tokens based on swap info provided - swapper will return unswapped tokens to the receiver\"},\"updateExchangeAllowlist(address[],bool[])\":{\"notice\":\"Updates list of exchanges that can be used in a swap.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISwapper.sol\":\"ISwapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/ISwapper.sol\":{\"keccak256\":\"0x52bf0742ec1e3d68209f09622618f7f6b7adcc559c1e453dd3ee1c1537b1acde\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://498d832f14e6c8e4b316225f3a4a86fbf8172a85bd7aa090aeab3d9dbecba696\",\"dweb:/ipfs/QmSntDHhXLu1exqsbEufwVQd4QxfkjyTy71sitdtuPEWkr\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"isExchangeAllowed(address)":"8d4435e4","swap(address[],(address,address,bytes)[],address[],address)":"67c15262","updateExchangeAllowlist(address[],bool[])":"51d307af"}}}},"src/interfaces/IWithdrawalManager.sol":{"IWithdrawalManager":{"abi":[{"type":"function","name":"claimWithdrawal","inputs":[{"name":"bag","type":"tuple","internalType":"struct WithdrawalClaimBag","components":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"nftIds","type":"uint256[]","internalType":"uint256[]"},{"name":"nftAmounts","type":"uint256[]","internalType":"uint256[]"},{"name":"receiver","type":"address","internalType":"address"},{"name":"executor","type":"address","internalType":"address"},{"name":"assetGroupId","type":"uint256","internalType":"uint256"},{"name":"assetGroup","type":"address[]","internalType":"address[]"},{"name":"flushIndexToSync","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"withdrawnAssets","type":"uint256[]","internalType":"uint256[]"},{"name":"assetGroupId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"flushSmartVault","inputs":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"flushIndex","type":"uint256","internalType":"uint256"},{"name":"strategies","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"dhwIndexes","type":"uint256","internalType":"uint16a16"}],"stateMutability":"nonpayable"},{"type":"function","name":"redeem","inputs":[{"name":"bag","type":"tuple","internalType":"struct RedeemBag","components":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"nftIds","type":"uint256[]","internalType":"uint256[]"},{"name":"nftAmounts","type":"uint256[]","internalType":"uint256[]"}]},{"name":"bag2","type":"tuple","internalType":"struct RedeemExtras","components":[{"name":"receiver","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"},{"name":"executor","type":"address","internalType":"address"},{"name":"flushIndex","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nftId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"redeemFast","inputs":[{"name":"bag","type":"tuple","internalType":"struct RedeemBag","components":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"shares","type":"uint256","internalType":"uint256"},{"name":"nftIds","type":"uint256[]","internalType":"uint256[]"},{"name":"nftAmounts","type":"uint256[]","internalType":"uint256[]"}]},{"name":"bag2","type":"tuple","internalType":"struct RedeemFastExtras","components":[{"name":"strategies","type":"address[]","internalType":"address[]"},{"name":"assetGroup","type":"address[]","internalType":"address[]"},{"name":"assetGroupId","type":"uint256","internalType":"uint256"},{"name":"redeemer","type":"address","internalType":"address"},{"name":"withdrawalSlippages","type":"uint256[][]","internalType":"uint256[][]"}]}],"outputs":[{"name":"assets","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"syncWithdrawals","inputs":[{"name":"smartVault","type":"address","internalType":"address"},{"name":"flushIndex","type":"uint256","internalType":"uint256"},{"name":"strategies","type":"address[]","internalType":"address[]"},{"name":"dhwIndexes_","type":"uint256","internalType":"uint16a16"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"FastRedeemInitiated","inputs":[{"name":"smartVault","type":"address","indexed":true,"internalType":"address"},{"name":"redeemer","type":"address","indexed":true,"internalType":"address"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"nftIds","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"nftAmounts","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"assetsWithdrawn","type":"uint256[]","indexed":false,"internalType":"uint256[]"}],"anonymous":false},{"type":"event","name":"RedeemInitiated","inputs":[{"name":"smartVault","type":"address","indexed":true,"internalType":"address"},{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"redeemId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"flushIndex","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"shares","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"receiver","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"WithdrawalClaimed","inputs":[{"name":"smartVault","type":"address","indexed":true,"internalType":"address"},{"name":"claimer","type":"address","indexed":true,"internalType":"address"},{"name":"assetGroupId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"nftIds","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"nftAmounts","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"withdrawnAssets","type":"uint256[]","indexed":false,"internalType":"uint256[]"}],"anonymous":false}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"assetsWithdrawn\",\"type\":\"uint256[]\"}],\"name\":\"FastRedeemInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"redeemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"RedeemInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assetGroupId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"withdrawnAssets\",\"type\":\"uint256[]\"}],\"name\":\"WithdrawalClaimed\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetGroupId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"assetGroup\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"flushIndexToSync\",\"type\":\"uint256\"}],\"internalType\":\"struct WithdrawalClaimBag\",\"name\":\"bag\",\"type\":\"tuple\"}],\"name\":\"claimWithdrawal\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"withdrawnAssets\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"assetGroupId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"name\":\"flushSmartVault\",\"outputs\":[{\"internalType\":\"uint16a16\",\"name\":\"dhwIndexes\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct RedeemBag\",\"name\":\"bag\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct RedeemExtras\",\"name\":\"bag2\",\"type\":\"tuple\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct RedeemBag\",\"name\":\"bag\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"assetGroup\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"assetGroupId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"internalType\":\"uint256[][]\",\"name\":\"withdrawalSlippages\",\"type\":\"uint256[][]\"}],\"internalType\":\"struct RedeemFastExtras\",\"name\":\"bag2\",\"type\":\"tuple\"}],\"name\":\"redeemFast\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"assets\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint16a16\",\"name\":\"dhwIndexes_\",\"type\":\"uint256\"}],\"name\":\"syncWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FastRedeemInitiated(address,address,uint256,uint256[],uint256[],uint256[])\":{\"params\":{\"assetsWithdrawn\":\"Amount of underlying assets withdrawn\",\"nftAmounts\":\"NFT shares to burn\",\"nftIds\":\"NFTs to burn\",\"redeemer\":\"Redeem initiator and owner of shares\",\"shares\":\"Amount of vault shares to redeem\",\"smartVault\":\"Smart vault address\"}},\"RedeemInitiated(address,address,uint256,uint256,uint256,address)\":{\"params\":{\"flushIndex\":\"Flush index the redeem was scheduled for\",\"owner\":\"Owner of shares to be redeemed\",\"receiver\":\"Beneficiary that will be able to claim the underlying assets\",\"redeemId\":\"Withdrawal NFT ID for this redeemal\",\"shares\":\"Amount of vault shares to redeem\",\"smartVault\":\"Smart vault address\"}},\"WithdrawalClaimed(address,address,uint256,uint256[],uint256[],uint256[])\":{\"params\":{\"claimer\":\"Claimer address\",\"nftAmounts\":\"NFT shares to burn\",\"nftIds\":\"NFTs to burn\",\"smartVault\":\"Smart vault address\",\"withdrawnAssets\":\"Amount of underlying assets withdrawn\"}}},\"kind\":\"dev\",\"methods\":{\"claimWithdrawal((address,uint256[],uint256[],address,address,uint256,address[],uint256))\":{\"details\":\"Requirements:   - can only be called by user granted ROLE_SMART_VAULT_MANAGER\",\"params\":{\"bag\":\"Parameters for claiming withdrawal.\"},\"returns\":{\"assetGroupId\":\"ID of the asset group.\",\"withdrawnAssets\":\"Amount of assets withdrawn.\"}},\"flushSmartVault(address,uint256,address[])\":{\"details\":\"Requirements:   - can only be called by user granted ROLE_SMART_VAULT_MANAGER\",\"params\":{\"flushIndex\":\"Current flush index of the smart vault.\",\"smartVault\":\"Smart vault to flush.\",\"strategies\":\"Strategies of the smart vault.\"},\"returns\":{\"dhwIndexes\":\"current do-hard-work indexes of the strategies.\"}},\"redeem((address,uint256,uint256[],uint256[]),(address,address,address,uint256))\":{\"details\":\"Requirements:   - can only be called by user granted ROLE_SMART_VAULT_MANAGER\",\"params\":{\"bag\":\"Base information for redeemal.\",\"bag2\":\"Extra information for redeemal.\"},\"returns\":{\"nftId\":\"ID of the withdrawal NFT.\"}},\"redeemFast((address,uint256,uint256[],uint256[]),(address[],address[],uint256,address,uint256[][]))\":{\"details\":\"Requirements:   - can only be called by user granted ROLE_SMART_VAULT_MANAGER\",\"params\":{\"bag\":\"Extra information for fast redeemal.\"},\"returns\":{\"assets\":\"Amount of assets withdrawn.\"}},\"syncWithdrawals(address,uint256,address[],uint256)\":{\"details\":\"Requirements:   - can only be called by user granted ROLE_SMART_VAULT_MANAGER\",\"params\":{\"dhwIndexes_\":\"Strategies' do-hard-work indexes to sync.\",\"flushIndex\":\"Smart vault's flush index to sync.\",\"smartVault\":\"Smart vault to sync.\",\"strategies\":\"Strategies of the smart vault.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"FastRedeemInitiated(address,address,uint256,uint256[],uint256[],uint256[])\":{\"notice\":\"A deposit has been initiated\"},\"RedeemInitiated(address,address,uint256,uint256,uint256,address)\":{\"notice\":\"A deposit has been initiated\"},\"WithdrawalClaimed(address,address,uint256,uint256[],uint256[],uint256[])\":{\"notice\":\"User redeemed withdrawal NFTs for underlying assets\"}},\"kind\":\"user\",\"methods\":{\"claimWithdrawal((address,uint256[],uint256[],address,address,uint256,address[],uint256))\":{\"notice\":\"Claims withdrawal.\"},\"flushSmartVault(address,uint256,address[])\":{\"notice\":\"Flushes smart vaults deposits and withdrawals to the strategies.\"},\"redeem((address,uint256,uint256[],uint256[]),(address,address,address,uint256))\":{\"notice\":\"Redeems smart vault shares.\"},\"redeemFast((address,uint256,uint256[],uint256[]),(address[],address[],uint256,address,uint256[][]))\":{\"notice\":\"Instantly redeems smart vault shares.\"},\"syncWithdrawals(address,uint256,address[],uint256)\":{\"notice\":\"Syncs withdrawals between strategies and smart vault after do-hard-works.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IWithdrawalManager.sol\":\"IWithdrawalManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/IWithdrawalManager.sol\":{\"keccak256\":\"0xfa98436bff85e1abda8d43df82bdbbe6aa830f9c73f65a636c6c798dab019178\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b93b1831cd287ae3cd8b81edab326d1a99b851f89253e6a4cfd211276e422f33\",\"dweb:/ipfs/Qmbw92Mgbnim6uMncRxd47N2Gm8nLxnRVDW1zTVLUxnqb5\"]},\"src/interfaces/uint16a16Lib.sol\":{\"keccak256\":\"0x6c8aa38e7d3d3c9ebffbfe08a5264d4e8c76ec4ef68caa4a909253ca31d2e151\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40485649f9288e095945277b23b709c4d52e9d8d50fb278ee4c1d79fef185061\",\"dweb:/ipfs/QmNeLD1UWDwzS3pht1GSVhqhUrdNSXXBbhbRcdrxTNMcUb\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"","opcodes":"","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"claimWithdrawal((address,uint256[],uint256[],address,address,uint256,address[],uint256))":"b8b1a3e7","flushSmartVault(address,uint256,address[])":"1fdd01a0","redeem((address,uint256,uint256[],uint256[]),(address,address,address,uint256))":"3b72ca87","redeemFast((address,uint256,uint256[],uint256[]),(address[],address[],uint256,address,uint256[][]))":"4fb62d47","syncWithdrawals(address,uint256,address[],uint256)":"e0397fa0"}}}},"src/interfaces/uint16a16Lib.sol":{"uint16a16Lib":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library enables packing of sixteen uint16 elements into one uint256 word.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/uint16a16Lib.sol\":\"uint16a16Lib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/prb-math/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":prb-math/=lib/prb-math/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"src/interfaces/uint16a16Lib.sol\":{\"keccak256\":\"0x6c8aa38e7d3d3c9ebffbfe08a5264d4e8c76ec4ef68caa4a909253ca31d2e151\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40485649f9288e095945277b23b709c4d52e9d8d50fb278ee4c1d79fef185061\",\"dweb:/ipfs/QmNeLD1UWDwzS3pht1GSVhqhUrdNSXXBbhbRcdrxTNMcUb\"]}},\"version\":1}","userdoc":{},"devdoc":{},"evm":{"bytecode":{"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207be1a0fe1bdce6595b23a6a6d18d600245eaba8e8d57d12ae19864ffd8461c4c64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xE1A0FE1BDCE6595B23A6A6D18D600245EABA8E8D57D12AE19864FFD8 CHAINID SHR 0x4C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"183:1771:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;183:1771:21;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207be1a0fe1bdce6595b23a6a6d18d600245eaba8e8d57d12ae19864ffd8461c4c64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xE1A0FE1BDCE6595B23A6A6D18D600245EABA8E8D57D12AE19864FFD8 CHAINID SHR 0x4C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"183:1771:21:-:0;;;;;;;;","linkReferences":{}}}}}},"sources":{"src/CustomMetaVaultGuard.sol":{"id":0,"ast":{"absolutePath":"src/CustomMetaVaultGuard.sol","id":260,"exportedSymbols":{"AddressNotContract":[546],"AssetGroupAlreadyExists":[708],"ConfigurationAddressZero":[530],"CustomMetaVaultGuard":[259],"DEPOSIT_FEE_MAX":[590],"DepositBag":[843],"DepositExtras":[857],"DepositFeeTooLarge":[2298],"DepositIdOverflow":[2073],"DepositMetadata":[2107],"DepositSyncResult":[879],"ECOSYSTEM_FEE_MAX":[598],"ExchangeNotAllowed":[2658],"ExchangeRateOutOfSlippages":[536],"FULL_PERCENT":[565],"FULL_PERCENT_INT":[569],"FlushIndex":[2357],"GhostVault":[2307],"GuardDefinition":[1503],"GuardError":[1462],"GuardFailed":[1467],"GuardParamType":[1487],"GuardsAlreadyInitialized":[1458],"GuardsNotInitialized":[1460],"IAssetGroupRegistry":[790],"IDAI":[812],"IDepositManager":[1106],"IERC1155MetadataURIUpgradeable":[1121],"IERC1155ReceiverUpgradeable":[1162],"IERC1155Upgradeable":[1284],"IERC165Upgradeable":[1296],"IERC20":[1374],"IERC20Upgradeable":[1452],"IGuardManager":[1571],"IMetaVault":[2027],"IMetaVaultGuard":[2063],"INITIAL_LOCKED_SHARES":[668],"INITIAL_LOCKED_SHARES_ADDRESS":[675],"INITIAL_SHARE_MULTIPLIER":[662],"ISmartVault":[2258],"ISmartVaultManager":[2644],"ISmartVaultRegistry":[2367],"ISwapper":[2724],"IWithdrawalManager":[2904],"IncompleteGuardDefinition":[1477],"InsufficientBalance":[2271],"InvalidArrayLength":[524],"InvalidAssetGroup":[695],"InvalidAssetLengths":[819],"InvalidConfiguration":[533],"InvalidDepositNftId":[2081],"InvalidGuardParamType":[1471],"InvalidNftArrayLength":[822],"InvalidNftBalance":[2091],"InvalidNftTransferAmount":[2096],"InvalidStrategy":[541],"InvalidWithdrawalNftId":[2086],"MANAGEMENT_FEE_MAX":[586],"MAXIMAL_DEPOSIT_ID":[636],"MAXIMAL_WITHDRAWAL_ID":[644],"MAX_ACTION_COUNT":[683],"MAX_DHW_BASE_YIELD_LIMIT":[658],"MAX_GUARD_COUNT":[679],"MAX_RISK_SCORE":[606],"MAX_RISK_TOLERANCE":[614],"MIN_RISK_SCORE":[610],"MIN_RISK_TOLERANCE":[619],"ManagementFeeTooLarge":[2285],"NFT_MINTED_SHARES":[650],"NULL_ASSET_GROUP_ID":[687],"NoAssetsProvided":[698],"NoDepositsToRecover":[828],"NotGhostVault":[831],"NotSameAssetGroup":[527],"NotSwapper":[2663],"NothingToDeposit":[825],"NothingToFlush":[2274],"OnlyViewExecution":[551],"PerformanceFeeTooLarge":[2290],"ReallocateParamBag":[2352],"ReallocationParametersExpired":[2310],"RedeemBag":[2743],"RedeemExtras":[2767],"RedeemFastExtras":[2758],"RedeemForNotAllowed":[2301],"RequestContext":[1519],"RequestType":[2912],"SECONDS_IN_YEAR":[557],"SECONDS_IN_YEAR_INT":[561],"STATIC_RISK_PROVIDER":[626],"STATIC_RISK_SCORE":[630],"STRATEGY_COUNT_CAP":[654],"SV_PERFORMANCE_FEE_MAX":[594],"SenderEqualsRecipient":[2099],"SimulateDepositParams":[901],"SmartVaultAlreadyRegistered":[2277],"SmartVaultFees":[2119],"SmartVaultFeesCollected":[864],"SmartVaultNotRegisteredYet":[2280],"SmartVaultRegistrationForm":[2325],"StaticAllocationSmartVault":[2293],"SwapInfo":[2653],"TREASURY_FEE_MAX":[602],"TokenNotAllowed":[703],"TooManyGuards":[1474],"UnsortedArray":[711],"VaultNotSynced":[2304],"WithdrawalClaimBag":[2787],"WithdrawalIdOverflow":[2076],"WithdrawalMetadata":[2112],"WithdrawalNftNotSyncedYet":[2732],"YIELD_FULL_PERCENT":[582],"YIELD_FULL_PERCENT_INT":[575],"uint16a16":[2916],"uint16a16Lib":[3058]},"nodeType":"SourceUnit","src":"38:3320:0","nodes":[{"id":1,"nodeType":"PragmaDirective","src":"38:23:0","nodes":[],"literals":["solidity","0.8",".17"]},{"id":2,"nodeType":"ImportDirective","src":"63:45:0","nodes":[],"absolutePath":"src/interfaces/ISmartVaultManager.sol","file":"./interfaces/ISmartVaultManager.sol","nameLocation":"-1:-1:-1","scope":260,"sourceUnit":2645,"symbolAliases":[],"unitAlias":""},{"id":3,"nodeType":"ImportDirective","src":"109:46:0","nodes":[],"absolutePath":"src/interfaces/IAssetGroupRegistry.sol","file":"./interfaces/IAssetGroupRegistry.sol","nameLocation":"-1:-1:-1","scope":260,"sourceUnit":791,"symbolAliases":[],"unitAlias":""},{"id":4,"nodeType":"ImportDirective","src":"156:40:0","nodes":[],"absolutePath":"src/interfaces/IGuardManager.sol","file":"./interfaces/IGuardManager.sol","nameLocation":"-1:-1:-1","scope":260,"sourceUnit":1572,"symbolAliases":[],"unitAlias":""},{"id":5,"nodeType":"ImportDirective","src":"197:37:0","nodes":[],"absolutePath":"src/interfaces/IMetaVault.sol","file":"./interfaces/IMetaVault.sol","nameLocation":"-1:-1:-1","scope":260,"sourceUnit":2028,"symbolAliases":[],"unitAlias":""},{"id":6,"nodeType":"ImportDirective","src":"235:42:0","nodes":[],"absolutePath":"src/interfaces/IMetaVaultGuard.sol","file":"./interfaces/IMetaVaultGuard.sol","nameLocation":"-1:-1:-1","scope":260,"sourceUnit":2064,"symbolAliases":[],"unitAlias":""},{"id":7,"nodeType":"ImportDirective","src":"278:39:0","nodes":[],"absolutePath":"src/interfaces/CommonErrors.sol","file":"./interfaces/CommonErrors.sol","nameLocation":"-1:-1:-1","scope":260,"sourceUnit":552,"symbolAliases":[],"unitAlias":""},{"id":259,"nodeType":"ContractDefinition","src":"319:3039:0","nodes":[{"id":13,"nodeType":"VariableDeclaration","src":"429:55:0","nodes":[],"constant":false,"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"374:50:0","text":" @dev SmartVaultManager contract"},"mutability":"immutable","name":"smartVaultManager","nameLocation":"467:17:0","scope":259,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"},"typeName":{"id":12,"nodeType":"UserDefinedTypeName","pathNode":{"id":11,"name":"ISmartVaultManager","nameLocations":["429:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":2644,"src":"429:18:0"},"referencedDeclaration":2644,"src":"429:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"}},"visibility":"internal"},{"id":17,"nodeType":"VariableDeclaration","src":"547:57:0","nodes":[],"constant":false,"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"491:51:0","text":" @dev AssetGroupRegistry contract"},"mutability":"immutable","name":"assetGroupRegistry","nameLocation":"586:18:0","scope":259,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"},"typeName":{"id":16,"nodeType":"UserDefinedTypeName","pathNode":{"id":15,"name":"IAssetGroupRegistry","nameLocations":["547:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":790,"src":"547:19:0"},"referencedDeclaration":790,"src":"547:19:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"}},"visibility":"internal"},{"id":21,"nodeType":"VariableDeclaration","src":"660:45:0","nodes":[],"constant":false,"documentation":{"id":18,"nodeType":"StructuredDocumentation","src":"610:45:0","text":" @dev GuardManager contract"},"mutability":"immutable","name":"guardManager","nameLocation":"693:12:0","scope":259,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"IGuardManager","nameLocations":["660:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":1571,"src":"660:13:0"},"referencedDeclaration":1571,"src":"660:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"}},"visibility":"internal"},{"id":79,"nodeType":"FunctionDefinition","src":"786:508:0","nodes":[],"body":{"id":78,"nodeType":"Block","src":"937:357:0","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":61,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":35,"name":"smartVaultManager_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"972:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"}],"id":34,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"964:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":33,"name":"address","nodeType":"ElementaryTypeName","src":"964:7:0","typeDescriptions":{}}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"964:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1003:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"995:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"995:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"995:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"964:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":50,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":44,"name":"assetGroupRegistry_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1017:19:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"}],"id":43,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1009:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":42,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:0","typeDescriptions":{}}},"id":45,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1009:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":48,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1049:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":47,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1041:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:0","typeDescriptions":{}}},"id":49,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1041:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1009:42:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"964:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":54,"name":"guardManager_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"1079:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"}],"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1071:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"1071:7:0","typeDescriptions":{}}},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1071:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":58,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1105:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":57,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1097:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"1097:7:0","typeDescriptions":{}}},"id":59,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1097:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1071:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"964:143:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":65,"nodeType":"IfStatement","src":"947:204:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62,"name":"ConfigurationAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"1125:24:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":64,"nodeType":"RevertStatement","src":"1118:33:0"}},{"expression":{"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":66,"name":"smartVaultManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1161:17:0","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":67,"name":"smartVaultManager_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"1181:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"}},"src":"1161:38:0","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"}},"id":69,"nodeType":"ExpressionStatement","src":"1161:38:0"},{"expression":{"id":72,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":70,"name":"assetGroupRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"1209:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":71,"name":"assetGroupRegistry_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1230:19:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"}},"src":"1209:40:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"}},"id":73,"nodeType":"ExpressionStatement","src":"1209:40:0"},{"expression":{"id":76,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":74,"name":"guardManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"1259:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":75,"name":"guardManager_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"1274:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"}},"src":"1259:28:0","typeDescriptions":{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"}},"id":77,"nodeType":"ExpressionStatement","src":"1259:28:0"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"smartVaultManager_","nameLocation":"826:18:0","nodeType":"VariableDeclaration","scope":79,"src":"807:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"},"typeName":{"id":23,"nodeType":"UserDefinedTypeName","pathNode":{"id":22,"name":"ISmartVaultManager","nameLocations":["807:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":2644,"src":"807:18:0"},"referencedDeclaration":2644,"src":"807:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"assetGroupRegistry_","nameLocation":"874:19:0","nodeType":"VariableDeclaration","scope":79,"src":"854:39:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"},"typeName":{"id":26,"nodeType":"UserDefinedTypeName","pathNode":{"id":25,"name":"IAssetGroupRegistry","nameLocations":["854:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":790,"src":"854:19:0"},"referencedDeclaration":790,"src":"854:19:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"}},"visibility":"internal"},{"constant":false,"id":30,"mutability":"mutable","name":"guardManager_","nameLocation":"917:13:0","nodeType":"VariableDeclaration","scope":79,"src":"903:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"},"typeName":{"id":29,"nodeType":"UserDefinedTypeName","pathNode":{"id":28,"name":"IGuardManager","nameLocations":["903:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":1571,"src":"903:13:0"},"referencedDeclaration":1571,"src":"903:13:0","typeDescriptions":{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"}},"visibility":"internal"}],"src":"797:139:0"},"returnParameters":{"id":32,"nodeType":"ParameterList","parameters":[],"src":"937:0:0"},"scope":259,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":95,"nodeType":"FunctionDefinition","src":"1336:162:0","nodes":[],"body":{"id":94,"nodeType":"Block","src":"1436:62:0","nodes":[],"statements":[{"expression":{"arguments":[{"id":90,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"1473:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":91,"name":"smartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1480:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":89,"name":"_validateSmartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"1453:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1453:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":88,"id":93,"nodeType":"Return","src":"1446:45:0"}]},"baseFunctions":[2051],"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"1300:31:0","text":"@inheritdoc IMetaVaultGuard"},"functionSelector":"ffa9f16a","implemented":true,"kind":"function","modifiers":[],"name":"validateSmartVault","nameLocation":"1345:18:0","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"asset","nameLocation":"1372:5:0","nodeType":"VariableDeclaration","scope":95,"src":"1364:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":81,"name":"address","nodeType":"ElementaryTypeName","src":"1364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"smartVault","nameLocation":"1387:10:0","nodeType":"VariableDeclaration","scope":95,"src":"1379:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":83,"name":"address","nodeType":"ElementaryTypeName","src":"1379:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1363:35:0"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":95,"src":"1430:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":86,"name":"bool","nodeType":"ElementaryTypeName","src":"1430:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1429:6:0"},"scope":259,"stateMutability":"view","virtual":true,"visibility":"external"},{"id":136,"nodeType":"FunctionDefinition","src":"1540:328:0","nodes":[],"body":{"id":135,"nodeType":"Block","src":"1653:215:0","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":106,"name":"smartVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"1667:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1679:6:0","memberName":"length","nodeType":"MemberAccess","src":"1667:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1689:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1667:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":113,"nodeType":"IfStatement","src":"1663:56:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":110,"name":"InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"1699:18:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1699:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":112,"nodeType":"RevertStatement","src":"1692:27:0"}},{"body":{"id":131,"nodeType":"Block","src":"1774:67:0","statements":[{"expression":{"arguments":[{"id":125,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"1808:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":126,"name":"smartVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"1815:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":128,"indexExpression":{"id":127,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"1827:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1815:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":124,"name":"_validateSmartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"1788:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1788:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":130,"nodeType":"ExpressionStatement","src":"1788:42:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":117,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"1745:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":118,"name":"smartVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"1749:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1761:6:0","memberName":"length","nodeType":"MemberAccess","src":"1749:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1745:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":132,"initializationExpression":{"assignments":[115],"declarations":[{"constant":false,"id":115,"mutability":"mutable","name":"i","nameLocation":"1742:1:0","nodeType":"VariableDeclaration","scope":132,"src":"1734:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1734:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":116,"nodeType":"VariableDeclarationStatement","src":"1734:9:0"},"loopExpression":{"expression":{"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1769:3:0","subExpression":{"id":121,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"1769:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":123,"nodeType":"ExpressionStatement","src":"1769:3:0"},"nodeType":"ForStatement","src":"1729:112:0"},{"expression":{"hexValue":"74727565","id":133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1857:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":105,"id":134,"nodeType":"Return","src":"1850:11:0"}]},"baseFunctions":[2062],"documentation":{"id":96,"nodeType":"StructuredDocumentation","src":"1504:31:0","text":"@inheritdoc IMetaVaultGuard"},"functionSelector":"a0c02faf","implemented":true,"kind":"function","modifiers":[],"name":"validateSmartVaults","nameLocation":"1549:19:0","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"asset","nameLocation":"1577:5:0","nodeType":"VariableDeclaration","scope":136,"src":"1569:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"1569:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":101,"mutability":"mutable","name":"smartVaults","nameLocation":"1603:11:0","nodeType":"VariableDeclaration","scope":136,"src":"1584:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"1584:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":100,"nodeType":"ArrayTypeName","src":"1584:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1568:47:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":136,"src":"1647:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":103,"name":"bool","nodeType":"ElementaryTypeName","src":"1647:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1646:6:0"},"scope":259,"stateMutability":"view","virtual":true,"visibility":"external"},{"id":230,"nodeType":"FunctionDefinition","src":"2028:1072:0","nodes":[],"body":{"id":229,"nodeType":"Block","src":"2121:979:0","nodes":[],"statements":[{"assignments":[148],"declarations":[{"constant":false,"id":148,"mutability":"mutable","name":"fees","nameLocation":"2153:4:0","nodeType":"VariableDeclaration","scope":229,"src":"2131:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFees_$2119_memory_ptr","typeString":"struct SmartVaultFees"},"typeName":{"id":147,"nodeType":"UserDefinedTypeName","pathNode":{"id":146,"name":"SmartVaultFees","nameLocations":["2131:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"2131:14:0"},"referencedDeclaration":2119,"src":"2131:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFees_$2119_storage_ptr","typeString":"struct SmartVaultFees"}},"visibility":"internal"}],"id":153,"initialValue":{"arguments":[{"id":151,"name":"smartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"2196:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":149,"name":"smartVaultManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2160:17:0","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2178:17:0","memberName":"getSmartVaultFees","nodeType":"MemberAccess","referencedDeclaration":2388,"src":"2160:35:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_SmartVaultFees_$2119_memory_ptr_$","typeString":"function (address) view external returns (struct SmartVaultFees memory)"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2160:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFees_$2119_memory_ptr","typeString":"struct SmartVaultFees memory"}},"nodeType":"VariableDeclarationStatement","src":"2131:76:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":154,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"2276:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFees_$2119_memory_ptr","typeString":"struct SmartVaultFees memory"}},"id":155,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2281:16:0","memberName":"managementFeePct","nodeType":"MemberAccess","referencedDeclaration":2114,"src":"2276:21:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2300:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2276:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":"management and deposit fees should be zero","id":161,"nodeType":"IfStatement","src":"2272:65:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":158,"name":"InvalidVaultManagementFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"2310:25:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2310:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":160,"nodeType":"RevertStatement","src":"2303:34:0"}},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":162,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"2351:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFees_$2119_memory_ptr","typeString":"struct SmartVaultFees memory"}},"id":163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2356:13:0","memberName":"depositFeePct","nodeType":"MemberAccess","referencedDeclaration":2116,"src":"2351:18:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2372:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2351:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":169,"nodeType":"IfStatement","src":"2347:59:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":166,"name":"InvalidVaultDepositFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"2382:22:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2382:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":168,"nodeType":"RevertStatement","src":"2375:31:0"}},{"assignments":[174],"declarations":[{"constant":false,"id":174,"mutability":"mutable","name":"vaultAssets","nameLocation":"2433:11:0","nodeType":"VariableDeclaration","scope":229,"src":"2416:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":172,"name":"address","nodeType":"ElementaryTypeName","src":"2416:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":173,"nodeType":"ArrayTypeName","src":"2416:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":182,"initialValue":{"arguments":[{"arguments":[{"id":179,"name":"smartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"2512:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":177,"name":"smartVaultManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2481:17:0","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2499:12:0","memberName":"assetGroupId","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"2481:30:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2481:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":175,"name":"assetGroupRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"2447:18:0","typeDescriptions":{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2466:14:0","memberName":"listAssetGroup","nodeType":"MemberAccess","referencedDeclaration":744,"src":"2447:33:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) view external returns (address[] memory)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:77:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2416:108:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":183,"name":"vaultAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"2608:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2620:6:0","memberName":"length","nodeType":"MemberAccess","src":"2608:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2630:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2608:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":187,"name":"vaultAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"2635:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":189,"indexExpression":{"hexValue":"30","id":188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2635:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":190,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"2653:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2635:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2608:50:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":"assetGroup should match the underlying asset of MetaVault","id":196,"nodeType":"IfStatement","src":"2604:82:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":193,"name":"InvalidVaultAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"2667:17:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2667:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"RevertStatement","src":"2660:26:0"}},{"documentation":"no guards are allowed","expression":{"arguments":[{"id":198,"name":"smartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"2756:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":199,"name":"RequestType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"2768:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RequestType_$2912_$","typeString":"type(enum RequestType)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2780:7:0","memberName":"Deposit","nodeType":"MemberAccess","referencedDeclaration":2907,"src":"2768:19:0","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}],"id":197,"name":"_validateSmartVaultGuards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"2730:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_enum$_RequestType_$2912_$returns$__$","typeString":"function (address,enum RequestType) view"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"2730:58:0"},{"expression":{"arguments":[{"id":204,"name":"smartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"2824:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":205,"name":"RequestType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"2836:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RequestType_$2912_$","typeString":"type(enum RequestType)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2848:10:0","memberName":"Withdrawal","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"2836:22:0","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}],"id":203,"name":"_validateSmartVaultGuards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"2798:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_enum$_RequestType_$2912_$returns$__$","typeString":"function (address,enum RequestType) view"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":208,"nodeType":"ExpressionStatement","src":"2798:61:0"},{"expression":{"arguments":[{"id":210,"name":"smartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"2895:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":211,"name":"RequestType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"2907:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RequestType_$2912_$","typeString":"type(enum RequestType)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2919:11:0","memberName":"TransferNFT","nodeType":"MemberAccess","referencedDeclaration":2909,"src":"2907:23:0","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}],"id":209,"name":"_validateSmartVaultGuards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"2869:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_enum$_RequestType_$2912_$returns$__$","typeString":"function (address,enum RequestType) view"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2869:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":214,"nodeType":"ExpressionStatement","src":"2869:62:0"},{"expression":{"arguments":[{"id":216,"name":"smartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"2967:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":217,"name":"RequestType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"2979:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RequestType_$2912_$","typeString":"type(enum RequestType)"}},"id":218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2991:7:0","memberName":"BurnNFT","nodeType":"MemberAccess","referencedDeclaration":2910,"src":"2979:19:0","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}],"id":215,"name":"_validateSmartVaultGuards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"2941:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_enum$_RequestType_$2912_$returns$__$","typeString":"function (address,enum RequestType) view"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2941:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":220,"nodeType":"ExpressionStatement","src":"2941:58:0"},{"expression":{"arguments":[{"id":222,"name":"smartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"3035:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":223,"name":"RequestType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"3047:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RequestType_$2912_$","typeString":"type(enum RequestType)"}},"id":224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3059:12:0","memberName":"TransferSVTs","nodeType":"MemberAccess","referencedDeclaration":2911,"src":"3047:24:0","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}],"id":221,"name":"_validateSmartVaultGuards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"3009:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_enum$_RequestType_$2912_$returns$__$","typeString":"function (address,enum RequestType) view"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":226,"nodeType":"ExpressionStatement","src":"3009:63:0"},{"expression":{"hexValue":"74727565","id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3089:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":145,"id":228,"nodeType":"Return","src":"3082:11:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"1874:149:0","text":" @dev Check if given smart vault can be managed by MetaVault\n @param asset for MetaVault\n @param smartVault to validate"},"implemented":true,"kind":"function","modifiers":[],"name":"_validateSmartVault","nameLocation":"2037:19:0","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"asset","nameLocation":"2065:5:0","nodeType":"VariableDeclaration","scope":230,"src":"2057:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"2057:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":141,"mutability":"mutable","name":"smartVault","nameLocation":"2080:10:0","nodeType":"VariableDeclaration","scope":230,"src":"2072:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"2072:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2056:35:0"},"returnParameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":230,"src":"2115:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":143,"name":"bool","nodeType":"ElementaryTypeName","src":"2115:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2114:6:0"},"scope":259,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":258,"nodeType":"FunctionDefinition","src":"3106:250:0","nodes":[],"body":{"id":257,"nodeType":"Block","src":"3200:156:0","nodes":[],"statements":[{"assignments":[242],"declarations":[{"constant":false,"id":242,"mutability":"mutable","name":"guards","nameLocation":"3235:6:0","nodeType":"VariableDeclaration","scope":257,"src":"3210:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GuardDefinition_$1503_memory_ptr_$dyn_memory_ptr","typeString":"struct GuardDefinition[]"},"typeName":{"baseType":{"id":240,"nodeType":"UserDefinedTypeName","pathNode":{"id":239,"name":"GuardDefinition","nameLocations":["3210:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":1503,"src":"3210:15:0"},"referencedDeclaration":1503,"src":"3210:15:0","typeDescriptions":{"typeIdentifier":"t_struct$_GuardDefinition_$1503_storage_ptr","typeString":"struct GuardDefinition"}},"id":241,"nodeType":"ArrayTypeName","src":"3210:17:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GuardDefinition_$1503_storage_$dyn_storage_ptr","typeString":"struct GuardDefinition[]"}},"visibility":"internal"}],"id":248,"initialValue":{"arguments":[{"id":245,"name":"smartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"3268:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":246,"name":"requestType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"3280:11:0","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}],"expression":{"id":243,"name":"guardManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"3244:12:0","typeDescriptions":{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3257:10:0","memberName":"readGuards","nodeType":"MemberAccess","referencedDeclaration":1541,"src":"3244:23:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_enum$_RequestType_$2912_$returns$_t_array$_t_struct$_GuardDefinition_$1503_memory_ptr_$dyn_memory_ptr_$","typeString":"function (address,enum RequestType) view external returns (struct GuardDefinition memory[] memory)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GuardDefinition_$1503_memory_ptr_$dyn_memory_ptr","typeString":"struct GuardDefinition memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3210:82:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":249,"name":"guards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3306:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GuardDefinition_$1503_memory_ptr_$dyn_memory_ptr","typeString":"struct GuardDefinition memory[] memory"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3313:6:0","memberName":"length","nodeType":"MemberAccess","src":"3306:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3322:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3306:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":256,"nodeType":"IfStatement","src":"3302:47:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":253,"name":"NoGuardsAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"3332:15:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3332:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":255,"nodeType":"RevertStatement","src":"3325:24:0"}}]},"implemented":true,"kind":"function","modifiers":[],"name":"_validateSmartVaultGuards","nameLocation":"3115:25:0","parameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"smartVault","nameLocation":"3149:10:0","nodeType":"VariableDeclaration","scope":258,"src":"3141:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":231,"name":"address","nodeType":"ElementaryTypeName","src":"3141:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":235,"mutability":"mutable","name":"requestType","nameLocation":"3173:11:0","nodeType":"VariableDeclaration","scope":258,"src":"3161:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"},"typeName":{"id":234,"nodeType":"UserDefinedTypeName","pathNode":{"id":233,"name":"RequestType","nameLocations":["3161:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":2912,"src":"3161:11:0"},"referencedDeclaration":2912,"src":"3161:11:0","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}},"visibility":"internal"}],"src":"3140:45:0"},"returnParameters":{"id":237,"nodeType":"ParameterList","parameters":[],"src":"3200:0:0"},"scope":259,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[{"baseName":{"id":8,"name":"IMetaVaultGuard","nameLocations":["352:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":2063,"src":"352:15:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"352:15:0"}],"canonicalName":"CustomMetaVaultGuard","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"linearizedBaseContracts":[259,2063],"name":"CustomMetaVaultGuard","nameLocation":"328:20:0","scope":260,"usedErrors":[524,530,2032,2035,2038,2041]}],"license":"BUSL-1.1"}},"src/MetaVaultGuard.sol":{"id":1,"ast":{"absolutePath":"src/MetaVaultGuard.sol","id":520,"exportedSymbols":{"AddressNotContract":[546],"AssetGroupAlreadyExists":[708],"ConfigurationAddressZero":[530],"DEPOSIT_FEE_MAX":[590],"DepositBag":[843],"DepositExtras":[857],"DepositFeeTooLarge":[2298],"DepositIdOverflow":[2073],"DepositMetadata":[2107],"DepositSyncResult":[879],"ECOSYSTEM_FEE_MAX":[598],"ExchangeNotAllowed":[2658],"ExchangeRateOutOfSlippages":[536],"FULL_PERCENT":[565],"FULL_PERCENT_INT":[569],"FlushIndex":[2357],"GhostVault":[2307],"GuardDefinition":[1503],"GuardError":[1462],"GuardFailed":[1467],"GuardParamType":[1487],"GuardsAlreadyInitialized":[1458],"GuardsNotInitialized":[1460],"IAssetGroupRegistry":[790],"IDAI":[812],"IDepositManager":[1106],"IERC1155MetadataURIUpgradeable":[1121],"IERC1155ReceiverUpgradeable":[1162],"IERC1155Upgradeable":[1284],"IERC165Upgradeable":[1296],"IERC20":[1374],"IERC20Upgradeable":[1452],"IGuardManager":[1571],"IMetaVault":[2027],"IMetaVaultGuard":[2063],"INITIAL_LOCKED_SHARES":[668],"INITIAL_LOCKED_SHARES_ADDRESS":[675],"INITIAL_SHARE_MULTIPLIER":[662],"ISmartVault":[2258],"ISmartVaultManager":[2644],"ISmartVaultRegistry":[2367],"ISwapper":[2724],"IWithdrawalManager":[2904],"IncompleteGuardDefinition":[1477],"InsufficientBalance":[2271],"InvalidArrayLength":[524],"InvalidAssetGroup":[695],"InvalidAssetLengths":[819],"InvalidConfiguration":[533],"InvalidDepositNftId":[2081],"InvalidGuardParamType":[1471],"InvalidNftArrayLength":[822],"InvalidNftBalance":[2091],"InvalidNftTransferAmount":[2096],"InvalidStrategy":[541],"InvalidWithdrawalNftId":[2086],"MANAGEMENT_FEE_MAX":[586],"MAXIMAL_DEPOSIT_ID":[636],"MAXIMAL_WITHDRAWAL_ID":[644],"MAX_ACTION_COUNT":[683],"MAX_DHW_BASE_YIELD_LIMIT":[658],"MAX_GUARD_COUNT":[679],"MAX_RISK_SCORE":[606],"MAX_RISK_TOLERANCE":[614],"MIN_RISK_SCORE":[610],"MIN_RISK_TOLERANCE":[619],"ManagementFeeTooLarge":[2285],"MetaVaultGuard":[519],"NFT_MINTED_SHARES":[650],"NULL_ASSET_GROUP_ID":[687],"NoAssetsProvided":[698],"NoDepositsToRecover":[828],"NotGhostVault":[831],"NotSameAssetGroup":[527],"NotSwapper":[2663],"NothingToDeposit":[825],"NothingToFlush":[2274],"OnlyViewExecution":[551],"PerformanceFeeTooLarge":[2290],"ReallocateParamBag":[2352],"ReallocationParametersExpired":[2310],"RedeemBag":[2743],"RedeemExtras":[2767],"RedeemFastExtras":[2758],"RedeemForNotAllowed":[2301],"RequestContext":[1519],"RequestType":[2912],"SECONDS_IN_YEAR":[557],"SECONDS_IN_YEAR_INT":[561],"STATIC_RISK_PROVIDER":[626],"STATIC_RISK_SCORE":[630],"STRATEGY_COUNT_CAP":[654],"SV_PERFORMANCE_FEE_MAX":[594],"SenderEqualsRecipient":[2099],"SimulateDepositParams":[901],"SmartVaultAlreadyRegistered":[2277],"SmartVaultFees":[2119],"SmartVaultFeesCollected":[864],"SmartVaultNotRegisteredYet":[2280],"SmartVaultRegistrationForm":[2325],"StaticAllocationSmartVault":[2293],"SwapInfo":[2653],"TREASURY_FEE_MAX":[602],"TokenNotAllowed":[703],"TooManyGuards":[1474],"UnsortedArray":[711],"VaultNotSynced":[2304],"WithdrawalClaimBag":[2787],"WithdrawalIdOverflow":[2076],"WithdrawalMetadata":[2112],"WithdrawalNftNotSyncedYet":[2732],"YIELD_FULL_PERCENT":[582],"YIELD_FULL_PERCENT_INT":[575],"uint16a16":[2916],"uint16a16Lib":[3058]},"nodeType":"SourceUnit","src":"38:3313:1","nodes":[{"id":261,"nodeType":"PragmaDirective","src":"38:23:1","nodes":[],"literals":["solidity","0.8",".17"]},{"id":262,"nodeType":"ImportDirective","src":"63:45:1","nodes":[],"absolutePath":"src/interfaces/ISmartVaultManager.sol","file":"./interfaces/ISmartVaultManager.sol","nameLocation":"-1:-1:-1","scope":520,"sourceUnit":2645,"symbolAliases":[],"unitAlias":""},{"id":263,"nodeType":"ImportDirective","src":"109:46:1","nodes":[],"absolutePath":"src/interfaces/IAssetGroupRegistry.sol","file":"./interfaces/IAssetGroupRegistry.sol","nameLocation":"-1:-1:-1","scope":520,"sourceUnit":791,"symbolAliases":[],"unitAlias":""},{"id":264,"nodeType":"ImportDirective","src":"156:40:1","nodes":[],"absolutePath":"src/interfaces/IGuardManager.sol","file":"./interfaces/IGuardManager.sol","nameLocation":"-1:-1:-1","scope":520,"sourceUnit":1572,"symbolAliases":[],"unitAlias":""},{"id":265,"nodeType":"ImportDirective","src":"197:37:1","nodes":[],"absolutePath":"src/interfaces/IMetaVault.sol","file":"./interfaces/IMetaVault.sol","nameLocation":"-1:-1:-1","scope":520,"sourceUnit":2028,"symbolAliases":[],"unitAlias":""},{"id":266,"nodeType":"ImportDirective","src":"235:42:1","nodes":[],"absolutePath":"src/interfaces/IMetaVaultGuard.sol","file":"./interfaces/IMetaVaultGuard.sol","nameLocation":"-1:-1:-1","scope":520,"sourceUnit":2064,"symbolAliases":[],"unitAlias":""},{"id":267,"nodeType":"ImportDirective","src":"278:39:1","nodes":[],"absolutePath":"src/interfaces/CommonErrors.sol","file":"./interfaces/CommonErrors.sol","nameLocation":"-1:-1:-1","scope":520,"sourceUnit":552,"symbolAliases":[],"unitAlias":""},{"id":519,"nodeType":"ContractDefinition","src":"319:3032:1","nodes":[{"id":273,"nodeType":"VariableDeclaration","src":"423:55:1","nodes":[],"constant":false,"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"368:50:1","text":" @dev SmartVaultManager contract"},"mutability":"immutable","name":"smartVaultManager","nameLocation":"461:17:1","scope":519,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"},"typeName":{"id":272,"nodeType":"UserDefinedTypeName","pathNode":{"id":271,"name":"ISmartVaultManager","nameLocations":["423:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":2644,"src":"423:18:1"},"referencedDeclaration":2644,"src":"423:18:1","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"}},"visibility":"internal"},{"id":277,"nodeType":"VariableDeclaration","src":"540:57:1","nodes":[],"constant":false,"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"484:51:1","text":" @dev AssetGroupRegistry contract"},"mutability":"immutable","name":"assetGroupRegistry","nameLocation":"579:18:1","scope":519,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"},"typeName":{"id":276,"nodeType":"UserDefinedTypeName","pathNode":{"id":275,"name":"IAssetGroupRegistry","nameLocations":["540:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":790,"src":"540:19:1"},"referencedDeclaration":790,"src":"540:19:1","typeDescriptions":{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"}},"visibility":"internal"},{"id":281,"nodeType":"VariableDeclaration","src":"653:45:1","nodes":[],"constant":false,"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"603:45:1","text":" @dev GuardManager contract"},"mutability":"immutable","name":"guardManager","nameLocation":"686:12:1","scope":519,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"},"typeName":{"id":280,"nodeType":"UserDefinedTypeName","pathNode":{"id":279,"name":"IGuardManager","nameLocations":["653:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":1571,"src":"653:13:1"},"referencedDeclaration":1571,"src":"653:13:1","typeDescriptions":{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"}},"visibility":"internal"},{"id":339,"nodeType":"FunctionDefinition","src":"779:508:1","nodes":[],"body":{"id":338,"nodeType":"Block","src":"930:357:1","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":295,"name":"smartVaultManager_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"965:18:1","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"}],"id":294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"957:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"957:7:1","typeDescriptions":{}}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"957:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"988:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:1","typeDescriptions":{}}},"id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"988:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"957:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":304,"name":"assetGroupRegistry_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"1010:19:1","typeDescriptions":{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"}],"id":303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1002:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"1002:7:1","typeDescriptions":{}}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1002:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1042:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1034:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"1034:7:1","typeDescriptions":{}}},"id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1034:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1002:42:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"957:87:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":314,"name":"guardManager_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"1072:13:1","typeDescriptions":{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"}],"id":313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1064:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":312,"name":"address","nodeType":"ElementaryTypeName","src":"1064:7:1","typeDescriptions":{}}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1064:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1098:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1090:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":316,"name":"address","nodeType":"ElementaryTypeName","src":"1090:7:1","typeDescriptions":{}}},"id":319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1090:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1064:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"957:143:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":325,"nodeType":"IfStatement","src":"940:204:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":322,"name":"ConfigurationAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"1118:24:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1118:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"RevertStatement","src":"1111:33:1"}},{"expression":{"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":326,"name":"smartVaultManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"1154:17:1","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":327,"name":"smartVaultManager_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1174:18:1","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"}},"src":"1154:38:1","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"}},"id":329,"nodeType":"ExpressionStatement","src":"1154:38:1"},{"expression":{"id":332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":330,"name":"assetGroupRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"1202:18:1","typeDescriptions":{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":331,"name":"assetGroupRegistry_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"1223:19:1","typeDescriptions":{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"}},"src":"1202:40:1","typeDescriptions":{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"}},"id":333,"nodeType":"ExpressionStatement","src":"1202:40:1"},{"expression":{"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":334,"name":"guardManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"1252:12:1","typeDescriptions":{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":335,"name":"guardManager_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"1267:13:1","typeDescriptions":{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"}},"src":"1252:28:1","typeDescriptions":{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"}},"id":337,"nodeType":"ExpressionStatement","src":"1252:28:1"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"smartVaultManager_","nameLocation":"819:18:1","nodeType":"VariableDeclaration","scope":339,"src":"800:37:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"},"typeName":{"id":283,"nodeType":"UserDefinedTypeName","pathNode":{"id":282,"name":"ISmartVaultManager","nameLocations":["800:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":2644,"src":"800:18:1"},"referencedDeclaration":2644,"src":"800:18:1","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"}},"visibility":"internal"},{"constant":false,"id":287,"mutability":"mutable","name":"assetGroupRegistry_","nameLocation":"867:19:1","nodeType":"VariableDeclaration","scope":339,"src":"847:39:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"},"typeName":{"id":286,"nodeType":"UserDefinedTypeName","pathNode":{"id":285,"name":"IAssetGroupRegistry","nameLocations":["847:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":790,"src":"847:19:1"},"referencedDeclaration":790,"src":"847:19:1","typeDescriptions":{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"guardManager_","nameLocation":"910:13:1","nodeType":"VariableDeclaration","scope":339,"src":"896:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"},"typeName":{"id":289,"nodeType":"UserDefinedTypeName","pathNode":{"id":288,"name":"IGuardManager","nameLocations":["896:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":1571,"src":"896:13:1"},"referencedDeclaration":1571,"src":"896:13:1","typeDescriptions":{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"}},"visibility":"internal"}],"src":"790:139:1"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[],"src":"930:0:1"},"scope":519,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":355,"nodeType":"FunctionDefinition","src":"1329:162:1","nodes":[],"body":{"id":354,"nodeType":"Block","src":"1429:62:1","nodes":[],"statements":[{"expression":{"arguments":[{"id":350,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1466:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":351,"name":"smartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1473:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":349,"name":"_validateSmartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"1446:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1446:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":348,"id":353,"nodeType":"Return","src":"1439:45:1"}]},"baseFunctions":[2051],"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"1293:31:1","text":"@inheritdoc IMetaVaultGuard"},"functionSelector":"ffa9f16a","implemented":true,"kind":"function","modifiers":[],"name":"validateSmartVault","nameLocation":"1338:18:1","parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"asset","nameLocation":"1365:5:1","nodeType":"VariableDeclaration","scope":355,"src":"1357:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"1357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"smartVault","nameLocation":"1380:10:1","nodeType":"VariableDeclaration","scope":355,"src":"1372:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"1372:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1356:35:1"},"returnParameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"1423:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":346,"name":"bool","nodeType":"ElementaryTypeName","src":"1423:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1422:6:1"},"scope":519,"stateMutability":"view","virtual":true,"visibility":"external"},{"id":396,"nodeType":"FunctionDefinition","src":"1533:328:1","nodes":[],"body":{"id":395,"nodeType":"Block","src":"1646:215:1","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":366,"name":"smartVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"1660:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1672:6:1","memberName":"length","nodeType":"MemberAccess","src":"1660:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1682:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1660:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":373,"nodeType":"IfStatement","src":"1656:56:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":370,"name":"InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"1692:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1692:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"RevertStatement","src":"1685:27:1"}},{"body":{"id":391,"nodeType":"Block","src":"1767:67:1","statements":[{"expression":{"arguments":[{"id":385,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"1801:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":386,"name":"smartVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"1808:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":388,"indexExpression":{"id":387,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"1820:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1808:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":384,"name":"_validateSmartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"1781:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1781:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":390,"nodeType":"ExpressionStatement","src":"1781:42:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":377,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"1738:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":378,"name":"smartVaults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"1742:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1754:6:1","memberName":"length","nodeType":"MemberAccess","src":"1742:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1738:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":392,"initializationExpression":{"assignments":[375],"declarations":[{"constant":false,"id":375,"mutability":"mutable","name":"i","nameLocation":"1735:1:1","nodeType":"VariableDeclaration","scope":392,"src":"1727:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1727:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":376,"nodeType":"VariableDeclarationStatement","src":"1727:9:1"},"loopExpression":{"expression":{"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1762:3:1","subExpression":{"id":381,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"1762:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":383,"nodeType":"ExpressionStatement","src":"1762:3:1"},"nodeType":"ForStatement","src":"1722:112:1"},{"expression":{"hexValue":"74727565","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1850:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":365,"id":394,"nodeType":"Return","src":"1843:11:1"}]},"baseFunctions":[2062],"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"1497:31:1","text":"@inheritdoc IMetaVaultGuard"},"functionSelector":"a0c02faf","implemented":true,"kind":"function","modifiers":[],"name":"validateSmartVaults","nameLocation":"1542:19:1","parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"asset","nameLocation":"1570:5:1","nodeType":"VariableDeclaration","scope":396,"src":"1562:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"smartVaults","nameLocation":"1596:11:1","nodeType":"VariableDeclaration","scope":396,"src":"1577:30:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"1577:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":360,"nodeType":"ArrayTypeName","src":"1577:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1561:47:1"},"returnParameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":396,"src":"1640:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":363,"name":"bool","nodeType":"ElementaryTypeName","src":"1640:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1639:6:1"},"scope":519,"stateMutability":"view","virtual":true,"visibility":"external"},{"id":490,"nodeType":"FunctionDefinition","src":"2021:1072:1","nodes":[],"body":{"id":489,"nodeType":"Block","src":"2114:979:1","nodes":[],"statements":[{"assignments":[408],"declarations":[{"constant":false,"id":408,"mutability":"mutable","name":"fees","nameLocation":"2146:4:1","nodeType":"VariableDeclaration","scope":489,"src":"2124:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFees_$2119_memory_ptr","typeString":"struct SmartVaultFees"},"typeName":{"id":407,"nodeType":"UserDefinedTypeName","pathNode":{"id":406,"name":"SmartVaultFees","nameLocations":["2124:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"2124:14:1"},"referencedDeclaration":2119,"src":"2124:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFees_$2119_storage_ptr","typeString":"struct SmartVaultFees"}},"visibility":"internal"}],"id":413,"initialValue":{"arguments":[{"id":411,"name":"smartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2189:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":409,"name":"smartVaultManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"2153:17:1","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2171:17:1","memberName":"getSmartVaultFees","nodeType":"MemberAccess","referencedDeclaration":2388,"src":"2153:35:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_struct$_SmartVaultFees_$2119_memory_ptr_$","typeString":"function (address) view external returns (struct SmartVaultFees memory)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2153:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFees_$2119_memory_ptr","typeString":"struct SmartVaultFees memory"}},"nodeType":"VariableDeclarationStatement","src":"2124:76:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":414,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2269:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFees_$2119_memory_ptr","typeString":"struct SmartVaultFees memory"}},"id":415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2274:16:1","memberName":"managementFeePct","nodeType":"MemberAccess","referencedDeclaration":2114,"src":"2269:21:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2293:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2269:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":"management and deposit fees should be zero","id":421,"nodeType":"IfStatement","src":"2265:65:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":418,"name":"InvalidVaultManagementFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"2303:25:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":420,"nodeType":"RevertStatement","src":"2296:34:1"}},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":422,"name":"fees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2344:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFees_$2119_memory_ptr","typeString":"struct SmartVaultFees memory"}},"id":423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2349:13:1","memberName":"depositFeePct","nodeType":"MemberAccess","referencedDeclaration":2116,"src":"2344:18:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2365:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2344:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":429,"nodeType":"IfStatement","src":"2340:59:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":426,"name":"InvalidVaultDepositFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"2375:22:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2375:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"RevertStatement","src":"2368:31:1"}},{"assignments":[434],"declarations":[{"constant":false,"id":434,"mutability":"mutable","name":"vaultAssets","nameLocation":"2426:11:1","nodeType":"VariableDeclaration","scope":489,"src":"2409:28:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"2409:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":433,"nodeType":"ArrayTypeName","src":"2409:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":442,"initialValue":{"arguments":[{"arguments":[{"id":439,"name":"smartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2505:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":437,"name":"smartVaultManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"2474:17:1","typeDescriptions":{"typeIdentifier":"t_contract$_ISmartVaultManager_$2644","typeString":"contract ISmartVaultManager"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2492:12:1","memberName":"assetGroupId","nodeType":"MemberAccess","referencedDeclaration":2433,"src":"2474:30:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2474:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":435,"name":"assetGroupRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"2440:18:1","typeDescriptions":{"typeIdentifier":"t_contract$_IAssetGroupRegistry_$790","typeString":"contract IAssetGroupRegistry"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2459:14:1","memberName":"listAssetGroup","nodeType":"MemberAccess","referencedDeclaration":744,"src":"2440:33:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) view external returns (address[] memory)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2440:77:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2409:108:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":443,"name":"vaultAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"2601:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2613:6:1","memberName":"length","nodeType":"MemberAccess","src":"2601:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2623:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2601:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":447,"name":"vaultAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"2628:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":449,"indexExpression":{"hexValue":"30","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2640:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2628:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":450,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2646:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2628:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2601:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":"assetGroup should match the underlying asset of MetaVault","id":456,"nodeType":"IfStatement","src":"2597:82:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":453,"name":"InvalidVaultAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"2660:17:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"RevertStatement","src":"2653:26:1"}},{"documentation":"no guards are allowed","expression":{"arguments":[{"id":458,"name":"smartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2749:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":459,"name":"RequestType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"2761:11:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RequestType_$2912_$","typeString":"type(enum RequestType)"}},"id":460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2773:7:1","memberName":"Deposit","nodeType":"MemberAccess","referencedDeclaration":2907,"src":"2761:19:1","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}],"id":457,"name":"_validateSmartVaultGuards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"2723:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_enum$_RequestType_$2912_$returns$__$","typeString":"function (address,enum RequestType) view"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"ExpressionStatement","src":"2723:58:1"},{"expression":{"arguments":[{"id":464,"name":"smartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2817:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":465,"name":"RequestType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"2829:11:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RequestType_$2912_$","typeString":"type(enum RequestType)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2841:10:1","memberName":"Withdrawal","nodeType":"MemberAccess","referencedDeclaration":2908,"src":"2829:22:1","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}],"id":463,"name":"_validateSmartVaultGuards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"2791:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_enum$_RequestType_$2912_$returns$__$","typeString":"function (address,enum RequestType) view"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":468,"nodeType":"ExpressionStatement","src":"2791:61:1"},{"expression":{"arguments":[{"id":470,"name":"smartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2888:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":471,"name":"RequestType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"2900:11:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RequestType_$2912_$","typeString":"type(enum RequestType)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2912:11:1","memberName":"TransferNFT","nodeType":"MemberAccess","referencedDeclaration":2909,"src":"2900:23:1","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}],"id":469,"name":"_validateSmartVaultGuards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"2862:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_enum$_RequestType_$2912_$returns$__$","typeString":"function (address,enum RequestType) view"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2862:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":474,"nodeType":"ExpressionStatement","src":"2862:62:1"},{"expression":{"arguments":[{"id":476,"name":"smartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2960:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":477,"name":"RequestType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"2972:11:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RequestType_$2912_$","typeString":"type(enum RequestType)"}},"id":478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2984:7:1","memberName":"BurnNFT","nodeType":"MemberAccess","referencedDeclaration":2910,"src":"2972:19:1","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}],"id":475,"name":"_validateSmartVaultGuards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"2934:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_enum$_RequestType_$2912_$returns$__$","typeString":"function (address,enum RequestType) view"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2934:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":480,"nodeType":"ExpressionStatement","src":"2934:58:1"},{"expression":{"arguments":[{"id":482,"name":"smartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"3028:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":483,"name":"RequestType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"3040:11:1","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RequestType_$2912_$","typeString":"type(enum RequestType)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3052:12:1","memberName":"TransferSVTs","nodeType":"MemberAccess","referencedDeclaration":2911,"src":"3040:24:1","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}],"id":481,"name":"_validateSmartVaultGuards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3002:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_enum$_RequestType_$2912_$returns$__$","typeString":"function (address,enum RequestType) view"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3002:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":486,"nodeType":"ExpressionStatement","src":"3002:63:1"},{"expression":{"hexValue":"74727565","id":487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3082:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":405,"id":488,"nodeType":"Return","src":"3075:11:1"}]},"documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"1867:149:1","text":" @dev Check if given smart vault can be managed by MetaVault\n @param asset for MetaVault\n @param smartVault to validate"},"implemented":true,"kind":"function","modifiers":[],"name":"_validateSmartVault","nameLocation":"2030:19:1","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"asset","nameLocation":"2058:5:1","nodeType":"VariableDeclaration","scope":490,"src":"2050:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"2050:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"smartVault","nameLocation":"2073:10:1","nodeType":"VariableDeclaration","scope":490,"src":"2065:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"2065:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2049:35:1"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":490,"src":"2108:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":403,"name":"bool","nodeType":"ElementaryTypeName","src":"2108:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2107:6:1"},"scope":519,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":518,"nodeType":"FunctionDefinition","src":"3099:250:1","nodes":[],"body":{"id":517,"nodeType":"Block","src":"3193:156:1","nodes":[],"statements":[{"assignments":[502],"declarations":[{"constant":false,"id":502,"mutability":"mutable","name":"guards","nameLocation":"3228:6:1","nodeType":"VariableDeclaration","scope":517,"src":"3203:31:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GuardDefinition_$1503_memory_ptr_$dyn_memory_ptr","typeString":"struct GuardDefinition[]"},"typeName":{"baseType":{"id":500,"nodeType":"UserDefinedTypeName","pathNode":{"id":499,"name":"GuardDefinition","nameLocations":["3203:15:1"],"nodeType":"IdentifierPath","referencedDeclaration":1503,"src":"3203:15:1"},"referencedDeclaration":1503,"src":"3203:15:1","typeDescriptions":{"typeIdentifier":"t_struct$_GuardDefinition_$1503_storage_ptr","typeString":"struct GuardDefinition"}},"id":501,"nodeType":"ArrayTypeName","src":"3203:17:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GuardDefinition_$1503_storage_$dyn_storage_ptr","typeString":"struct GuardDefinition[]"}},"visibility":"internal"}],"id":508,"initialValue":{"arguments":[{"id":505,"name":"smartVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"3261:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":506,"name":"requestType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"3273:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}],"expression":{"id":503,"name":"guardManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3237:12:1","typeDescriptions":{"typeIdentifier":"t_contract$_IGuardManager_$1571","typeString":"contract IGuardManager"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3250:10:1","memberName":"readGuards","nodeType":"MemberAccess","referencedDeclaration":1541,"src":"3237:23:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_enum$_RequestType_$2912_$returns$_t_array$_t_struct$_GuardDefinition_$1503_memory_ptr_$dyn_memory_ptr_$","typeString":"function (address,enum RequestType) view external returns (struct GuardDefinition memory[] memory)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3237:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GuardDefinition_$1503_memory_ptr_$dyn_memory_ptr","typeString":"struct GuardDefinition memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3203:82:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":509,"name":"guards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"3299:6:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GuardDefinition_$1503_memory_ptr_$dyn_memory_ptr","typeString":"struct GuardDefinition memory[] memory"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3306:6:1","memberName":"length","nodeType":"MemberAccess","src":"3299:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3299:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":516,"nodeType":"IfStatement","src":"3295:47:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":513,"name":"NoGuardsAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"3325:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"RevertStatement","src":"3318:24:1"}}]},"implemented":true,"kind":"function","modifiers":[],"name":"_validateSmartVaultGuards","nameLocation":"3108:25:1","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"smartVault","nameLocation":"3142:10:1","nodeType":"VariableDeclaration","scope":518,"src":"3134:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"3134:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"requestType","nameLocation":"3166:11:1","nodeType":"VariableDeclaration","scope":518,"src":"3154:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"},"typeName":{"id":494,"nodeType":"UserDefinedTypeName","pathNode":{"id":493,"name":"RequestType","nameLocations":["3154:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":2912,"src":"3154:11:1"},"referencedDeclaration":2912,"src":"3154:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}},"visibility":"internal"}],"src":"3133:45:1"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"3193:0:1"},"scope":519,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[{"baseName":{"id":268,"name":"IMetaVaultGuard","nameLocations":["346:15:1"],"nodeType":"IdentifierPath","referencedDeclaration":2063,"src":"346:15:1"},"id":269,"nodeType":"InheritanceSpecifier","src":"346:15:1"}],"canonicalName":"MetaVaultGuard","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"linearizedBaseContracts":[519,2063],"name":"MetaVaultGuard","nameLocation":"328:14:1","scope":520,"usedErrors":[524,530,2032,2035,2038,2041]}],"license":"BUSL-1.1"}},"src/interfaces/CommonErrors.sol":{"id":2,"ast":{"absolutePath":"src/interfaces/CommonErrors.sol","id":552,"exportedSymbols":{"AddressNotContract":[546],"ConfigurationAddressZero":[530],"ExchangeRateOutOfSlippages":[536],"InvalidArrayLength":[524],"InvalidConfiguration":[533],"InvalidStrategy":[541],"NotSameAssetGroup":[527],"OnlyViewExecution":[551]},"nodeType":"SourceUnit","src":"37:1081:2","nodes":[{"id":521,"nodeType":"PragmaDirective","src":"37:23:2","nodes":[],"literals":["solidity","0.8",".17"]},{"id":524,"nodeType":"ErrorDefinition","src":"120:27:2","nodes":[],"documentation":{"id":522,"nodeType":"StructuredDocumentation","src":"62:57:2","text":" @notice Used when an array has invalid length."},"errorSelector":"9d89020a","name":"InvalidArrayLength","nameLocation":"126:18:2","parameters":{"id":523,"nodeType":"ParameterList","parameters":[],"src":"144:2:2"}},{"id":527,"nodeType":"ErrorDefinition","src":"244:26:2","nodes":[],"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"149:94:2","text":" @notice Used when group of smart vaults or strategies do not have same asset group."},"errorSelector":"061e1ba6","name":"NotSameAssetGroup","nameLocation":"250:17:2","parameters":{"id":526,"nodeType":"ParameterList","parameters":[],"src":"267:2:2"}},{"id":530,"nodeType":"ErrorDefinition","src":"345:33:2","nodes":[],"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"272:72:2","text":" @notice Used when configuring an address with a zero address."},"errorSelector":"bb0e4c35","name":"ConfigurationAddressZero","nameLocation":"351:24:2","parameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"375:2:2"}},{"id":533,"nodeType":"ErrorDefinition","src":"459:29:2","nodes":[],"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"380:78:2","text":" @notice Used when constructor or intializer parameters are invalid."},"errorSelector":"c52a9bd3","name":"InvalidConfiguration","nameLocation":"465:20:2","parameters":{"id":532,"nodeType":"ParameterList","parameters":[],"src":"485:2:2"}},{"id":536,"nodeType":"ErrorDefinition","src":"567:35:2","nodes":[],"documentation":{"id":534,"nodeType":"StructuredDocumentation","src":"490:76:2","text":" @notice Used when fetched exchange rate is out of slippage range."},"errorSelector":"9692d819","name":"ExchangeRateOutOfSlippages","nameLocation":"573:26:2","parameters":{"id":535,"nodeType":"ParameterList","parameters":[],"src":"599:2:2"}},{"id":541,"nodeType":"ErrorDefinition","src":"718:40:2","nodes":[],"documentation":{"id":537,"nodeType":"StructuredDocumentation","src":"604:113:2","text":" @notice Used when an invalid strategy is provided.\n @param address_ Address of the invalid strategy."},"errorSelector":"eb894b34","name":"InvalidStrategy","nameLocation":"724:15:2","parameters":{"id":540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"mutability":"mutable","name":"address_","nameLocation":"748:8:2","nodeType":"VariableDeclaration","scope":541,"src":"740:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":538,"name":"address","nodeType":"ElementaryTypeName","src":"740:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"739:18:2"}},{"id":546,"nodeType":"ErrorDefinition","src":"891:43:2","nodes":[],"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"760:130:2","text":" @notice Used when doing low-level call on an address that is not a contract.\n @param address_ Address of the contract"},"errorSelector":"247e9701","name":"AddressNotContract","nameLocation":"897:18:2","parameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"address_","nameLocation":"924:8:2","nodeType":"VariableDeclaration","scope":546,"src":"916:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"916:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"915:18:2"}},{"id":551,"nodeType":"ErrorDefinition","src":"1076:42:2","nodes":[],"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"936:139:2","text":" @notice Used when invoking an only view execution and tx.origin is not address zero.\n @param address_ Address of the tx.origin"},"errorSelector":"2aa28197","name":"OnlyViewExecution","nameLocation":"1082:17:2","parameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"address_","nameLocation":"1108:8:2","nodeType":"VariableDeclaration","scope":551,"src":"1100:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":548,"name":"address","nodeType":"ElementaryTypeName","src":"1100:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1099:18:2"}}],"license":"BUSL-1.1"}},"src/interfaces/Constants.sol":{"id":3,"ast":{"absolutePath":"src/interfaces/Constants.sol","id":688,"exportedSymbols":{"DEPOSIT_FEE_MAX":[590],"ECOSYSTEM_FEE_MAX":[598],"FULL_PERCENT":[565],"FULL_PERCENT_INT":[569],"INITIAL_LOCKED_SHARES":[668],"INITIAL_LOCKED_SHARES_ADDRESS":[675],"INITIAL_SHARE_MULTIPLIER":[662],"MANAGEMENT_FEE_MAX":[586],"MAXIMAL_DEPOSIT_ID":[636],"MAXIMAL_WITHDRAWAL_ID":[644],"MAX_ACTION_COUNT":[683],"MAX_DHW_BASE_YIELD_LIMIT":[658],"MAX_GUARD_COUNT":[679],"MAX_RISK_SCORE":[606],"MAX_RISK_TOLERANCE":[614],"MIN_RISK_SCORE":[610],"MIN_RISK_TOLERANCE":[619],"NFT_MINTED_SHARES":[650],"NULL_ASSET_GROUP_ID":[687],"SECONDS_IN_YEAR":[557],"SECONDS_IN_YEAR_INT":[561],"STATIC_RISK_PROVIDER":[626],"STATIC_RISK_SCORE":[630],"STRATEGY_COUNT_CAP":[654],"SV_PERFORMANCE_FEE_MAX":[594],"TREASURY_FEE_MAX":[602],"YIELD_FULL_PERCENT":[582],"YIELD_FULL_PERCENT_INT":[575]},"nodeType":"SourceUnit","src":"37:3179:3","nodes":[{"id":553,"nodeType":"PragmaDirective","src":"37:23:3","nodes":[],"literals":["solidity","0.8",".17"]},{"id":557,"nodeType":"VariableDeclaration","src":"109:45:3","nodes":[],"constant":true,"mutability":"constant","name":"SECONDS_IN_YEAR","nameLocation":"126:15:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"109:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33315f3535365f393236","id":556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"144:10:3","typeDescriptions":{"typeIdentifier":"t_rational_31556926_by_1","typeString":"int_const 31556926"},"value":"31_556_926"},"visibility":"internal"},{"id":561,"nodeType":"VariableDeclaration","src":"204:48:3","nodes":[],"constant":true,"mutability":"constant","name":"SECONDS_IN_YEAR_INT","nameLocation":"220:19:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":559,"name":"int256","nodeType":"ElementaryTypeName","src":"204:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"33315f3535365f393236","id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"242:10:3","typeDescriptions":{"typeIdentifier":"t_rational_31556926_by_1","typeString":"int_const 31556926"},"value":"31_556_926"},"visibility":"internal"},{"id":565,"nodeType":"VariableDeclaration","src":"281:38:3","nodes":[],"constant":true,"mutability":"constant","name":"FULL_PERCENT","nameLocation":"298:12:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint256","nodeType":"ElementaryTypeName","src":"281:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130305f3030","id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"313:6:3","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"100_00"},"visibility":"internal"},{"id":569,"nodeType":"VariableDeclaration","src":"348:41:3","nodes":[],"constant":true,"mutability":"constant","name":"FULL_PERCENT_INT","nameLocation":"364:16:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":567,"name":"int256","nodeType":"ElementaryTypeName","src":"348:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"hexValue":"3130305f3030","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"383:6:3","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"100_00"},"visibility":"internal"},{"id":575,"nodeType":"VariableDeclaration","src":"428:49:3","nodes":[],"constant":true,"mutability":"constant","name":"YIELD_FULL_PERCENT_INT","nameLocation":"444:22:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":571,"name":"int256","nodeType":"ElementaryTypeName","src":"428:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"id":574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"469:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3132","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"475:2:3","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"469:8:3","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"}},"visibility":"internal"},{"id":582,"nodeType":"VariableDeclaration","src":"516:69:3","nodes":[],"constant":true,"mutability":"constant","name":"YIELD_FULL_PERCENT","nameLocation":"533:18:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"516:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"arguments":[{"id":580,"name":"YIELD_FULL_PERCENT_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"562:22:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"554:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"554:7:3","typeDescriptions":{}}},"id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"554:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":586,"nodeType":"VariableDeclaration","src":"690:42:3","nodes":[],"constant":true,"mutability":"constant","name":"MANAGEMENT_FEE_MAX","nameLocation":"707:18:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":584,"name":"uint256","nodeType":"ElementaryTypeName","src":"690:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"355f3030","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"728:4:3","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"5_00"},"visibility":"internal"},{"id":590,"nodeType":"VariableDeclaration","src":"834:39:3","nodes":[],"constant":true,"mutability":"constant","name":"DEPOSIT_FEE_MAX","nameLocation":"851:15:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"834:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"355f3030","id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"869:4:3","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"5_00"},"visibility":"internal"},{"id":594,"nodeType":"VariableDeclaration","src":"991:47:3","nodes":[],"constant":true,"mutability":"constant","name":"SV_PERFORMANCE_FEE_MAX","nameLocation":"1008:22:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":592,"name":"uint256","nodeType":"ElementaryTypeName","src":"991:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32305f3030","id":593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1033:5:3","typeDescriptions":{"typeIdentifier":"t_rational_2000_by_1","typeString":"int_const 2000"},"value":"20_00"},"visibility":"internal"},{"id":598,"nodeType":"VariableDeclaration","src":"1139:42:3","nodes":[],"constant":true,"mutability":"constant","name":"ECOSYSTEM_FEE_MAX","nameLocation":"1156:17:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":596,"name":"uint256","nodeType":"ElementaryTypeName","src":"1139:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32305f3030","id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1176:5:3","typeDescriptions":{"typeIdentifier":"t_rational_2000_by_1","typeString":"int_const 2000"},"value":"20_00"},"visibility":"internal"},{"id":602,"nodeType":"VariableDeclaration","src":"1281:41:3","nodes":[],"constant":true,"mutability":"constant","name":"TREASURY_FEE_MAX","nameLocation":"1298:16:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":600,"name":"uint256","nodeType":"ElementaryTypeName","src":"1281:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31305f3030","id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1317:5:3","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"10_00"},"visibility":"internal"},{"id":606,"nodeType":"VariableDeclaration","src":"1381:36:3","nodes":[],"constant":true,"mutability":"constant","name":"MAX_RISK_SCORE","nameLocation":"1396:14:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":604,"name":"uint8","nodeType":"ElementaryTypeName","src":"1381:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31305f30","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:3","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"10_0"},"visibility":"internal"},{"id":610,"nodeType":"VariableDeclaration","src":"1476:33:3","nodes":[],"constant":true,"mutability":"constant","name":"MIN_RISK_SCORE","nameLocation":"1491:14:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":608,"name":"uint8","nodeType":"ElementaryTypeName","src":"1476:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1508:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"id":614,"nodeType":"VariableDeclaration","src":"1578:37:3","nodes":[],"constant":true,"mutability":"constant","name":"MAX_RISK_TOLERANCE","nameLocation":"1592:18:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":612,"name":"int8","nodeType":"ElementaryTypeName","src":"1578:4:3","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"value":{"hexValue":"3130","id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1613:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"internal"},{"id":619,"nodeType":"VariableDeclaration","src":"1684:38:3","nodes":[],"constant":true,"mutability":"constant","name":"MIN_RISK_TOLERANCE","nameLocation":"1698:18:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":616,"name":"int8","nodeType":"ElementaryTypeName","src":"1684:4:3","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"value":{"id":618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1719:3:3","subExpression":{"hexValue":"3130","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1720:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_10_by_1","typeString":"int_const -10"}},"visibility":"internal"},{"id":626,"nodeType":"VariableDeclaration","src":"1802:54:3","nodes":[],"constant":true,"mutability":"constant","name":"STATIC_RISK_PROVIDER","nameLocation":"1819:20:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"1802:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"3078616161","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1850:5:3","typeDescriptions":{"typeIdentifier":"t_rational_2730_by_1","typeString":"int_const 2730"},"value":"0xaaa"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2730_by_1","typeString":"int_const 2730"}],"id":623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1842:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"1842:7:3","typeDescriptions":{}}},"id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"id":630,"nodeType":"VariableDeclaration","src":"1936:36:3","nodes":[],"constant":true,"mutability":"constant","name":"STATIC_RISK_SCORE","nameLocation":"1951:17:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":628,"name":"uint8","nodeType":"ElementaryTypeName","src":"1936:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1971:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"id":636,"nodeType":"VariableDeclaration","src":"2017:46:3","nodes":[],"constant":true,"mutability":"constant","name":"MAXIMAL_DEPOSIT_ID","nameLocation":"2034:18:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2017:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2060:3:3","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2055:8:3","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"internal"},{"id":644,"nodeType":"VariableDeclaration","src":"2111:53:3","nodes":[],"constant":true,"mutability":"constant","name":"MAXIMAL_WITHDRAWAL_ID","nameLocation":"2128:21:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"},"id":643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1","typeString":"int_const 1157...(70 digits omitted)...9936"},"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2152:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323536","id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:3:3","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"2152:8:3","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1","typeString":"int_const 1157...(70 digits omitted)...9936"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2163:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2152:12:3","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"}},"visibility":"internal"},{"id":650,"nodeType":"VariableDeclaration","src":"2218:44:3","nodes":[],"constant":true,"mutability":"constant","name":"NFT_MINTED_SHARES","nameLocation":"2235:17:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"2218:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2255:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"36","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2261:1:3","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"2255:7:3","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}},"visibility":"internal"},{"id":654,"nodeType":"VariableDeclaration","src":"2337:40:3","nodes":[],"constant":true,"mutability":"constant","name":"STRATEGY_COUNT_CAP","nameLocation":"2354:18:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"2337:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3136","id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2375:2:3","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"visibility":"internal"},{"id":658,"nodeType":"VariableDeclaration","src":"2449:49:3","nodes":[],"constant":true,"mutability":"constant","name":"MAX_DHW_BASE_YIELD_LIMIT","nameLocation":"2466:24:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"2449:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31305f3030","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2493:5:3","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"10_00"},"visibility":"internal"},{"id":662,"nodeType":"VariableDeclaration","src":"2570:48:3","nodes":[],"constant":true,"mutability":"constant","name":"INITIAL_SHARE_MULTIPLIER","nameLocation":"2587:24:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303030","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2614:4:3","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"visibility":"internal"},{"id":668,"nodeType":"VariableDeclaration","src":"2699:49:3","nodes":[],"constant":true,"mutability":"constant","name":"INITIAL_LOCKED_SHARES","nameLocation":"2716:21:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"id":667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2740:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3132","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2746:2:3","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"2740:8:3","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"}},"visibility":"internal"},{"id":675,"nodeType":"VariableDeclaration","src":"2800:64:3","nodes":[],"constant":true,"mutability":"constant","name":"INITIAL_LOCKED_SHARES_ADDRESS","nameLocation":"2817:29:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"2800:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307864656164","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2857:6:3","typeDescriptions":{"typeIdentifier":"t_rational_57005_by_1","typeString":"int_const 57005"},"value":"0xdead"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57005_by_1","typeString":"int_const 57005"}],"id":672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"2849:7:3","typeDescriptions":{}}},"id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"id":679,"nodeType":"VariableDeclaration","src":"2938:37:3","nodes":[],"constant":true,"mutability":"constant","name":"MAX_GUARD_COUNT","nameLocation":"2955:15:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":677,"name":"uint256","nodeType":"ElementaryTypeName","src":"2938:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2973:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"internal"},{"id":683,"nodeType":"VariableDeclaration","src":"3050:38:3","nodes":[],"constant":true,"mutability":"constant","name":"MAX_ACTION_COUNT","nameLocation":"3067:16:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3086:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"internal"},{"id":687,"nodeType":"VariableDeclaration","src":"3175:40:3","nodes":[],"constant":true,"mutability":"constant","name":"NULL_ASSET_GROUP_ID","nameLocation":"3192:19:3","scope":688,"stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":685,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3214:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"}],"license":"BUSL-1.1"}},"src/interfaces/IAssetGroupRegistry.sol":{"id":4,"ast":{"absolutePath":"src/interfaces/IAssetGroupRegistry.sol","id":791,"exportedSymbols":{"AssetGroupAlreadyExists":[708],"IAssetGroupRegistry":[790],"IERC20":[1374],"InvalidAssetGroup":[695],"NoAssetsProvided":[698],"TokenNotAllowed":[703],"UnsortedArray":[711]},"nodeType":"SourceUnit","src":"37:4068:4","nodes":[{"id":689,"nodeType":"PragmaDirective","src":"37:23:4","nodes":[],"literals":["solidity","0.8",".17"]},{"id":690,"nodeType":"ImportDirective","src":"62:22:4","nodes":[],"absolutePath":"src/interfaces/IERC20.sol","file":"./IERC20.sol","nameLocation":"-1:-1:-1","scope":791,"sourceUnit":1375,"symbolAliases":[],"unitAlias":""},{"id":695,"nodeType":"ErrorDefinition","src":"242:46:4","nodes":[],"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"122:119:4","text":" @notice Used when invalid ID for asset group is provided.\n @param assetGroupId Invalid ID for asset group."},"errorSelector":"4b1f57ad","name":"InvalidAssetGroup","nameLocation":"248:17:4","parameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"assetGroupId","nameLocation":"274:12:4","nodeType":"VariableDeclaration","scope":695,"src":"266:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":692,"name":"uint256","nodeType":"ElementaryTypeName","src":"266:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"265:22:4"}},{"id":698,"nodeType":"ErrorDefinition","src":"362:25:4","nodes":[],"documentation":{"id":696,"nodeType":"StructuredDocumentation","src":"290:71:4","text":" @notice Used when no assets are provided for an asset group."},"errorSelector":"dde47394","name":"NoAssetsProvided","nameLocation":"368:16:4","parameters":{"id":697,"nodeType":"ParameterList","parameters":[],"src":"384:2:4"}},{"id":703,"nodeType":"ErrorDefinition","src":"521:37:4","nodes":[],"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"389:131:4","text":" @notice Used when token is not allowed to be used as an asset.\n @param token Address of the token that is not allowed."},"errorSelector":"94403b70","name":"TokenNotAllowed","nameLocation":"527:15:4","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"token","nameLocation":"551:5:4","nodeType":"VariableDeclaration","scope":703,"src":"543:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"543:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"542:15:4"}},{"id":708,"nodeType":"ErrorDefinition","src":"680:52:4","nodes":[],"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"560:119:4","text":" @notice Used when asset group already exists.\n @param assetGroupId ID of the already existing asset group."},"errorSelector":"b7250617","name":"AssetGroupAlreadyExists","nameLocation":"686:23:4","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"assetGroupId","nameLocation":"718:12:4","nodeType":"VariableDeclaration","scope":708,"src":"710:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":705,"name":"uint256","nodeType":"ElementaryTypeName","src":"710:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"709:22:4"}},{"id":711,"nodeType":"ErrorDefinition","src":"788:22:4","nodes":[],"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"734:53:4","text":" @notice Used when given array is unsorted."},"errorSelector":"bd5903a3","name":"UnsortedArray","nameLocation":"794:13:4","parameters":{"id":710,"nodeType":"ParameterList","parameters":[],"src":"807:2:4"}},{"id":790,"nodeType":"ContractDefinition","src":"852:3253:4","nodes":[{"id":716,"nodeType":"EventDefinition","src":"1065:42:4","nodes":[],"anonymous":false,"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"928:132:4","text":" @notice Emitted when token is allowed to be used as an asset.\n @param token Address of newly allowed token."},"eventSelector":"beceb48aeaa805aeae57be163cca6249077a18734e408a85aa74e875c4373809","name":"TokenAllowed","nameLocation":"1071:12:4","parameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"1100:5:4","nodeType":"VariableDeclaration","scope":716,"src":"1084:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"1084:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1083:23:4"}},{"id":721,"nodeType":"EventDefinition","src":"1251:57:4","nodes":[],"anonymous":false,"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"1113:133:4","text":" @notice Emitted when asset group is registered.\n @param assetGroupId ID of the newly registered asset group."},"eventSelector":"d7103fa7f47b4e44d49a12038d0409e12dd4cd610f3f78c4ca2b9aa058915726","name":"AssetGroupRegistered","nameLocation":"1257:20:4","parameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"indexed":true,"mutability":"mutable","name":"assetGroupId","nameLocation":"1294:12:4","nodeType":"VariableDeclaration","scope":721,"src":"1278:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"1278:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1277:30:4"}},{"id":729,"nodeType":"FunctionDefinition","src":"1559:78:4","nodes":[],"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"1362:192:4","text":" @notice Checks if token is allowed to be used as an asset.\n @param token Address of token to check.\n @return isAllowed True if token is allowed, false otherwise."},"functionSelector":"f9eaee0d","implemented":false,"kind":"function","modifiers":[],"name":"isTokenAllowed","nameLocation":"1568:14:4","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"token","nameLocation":"1591:5:4","nodeType":"VariableDeclaration","scope":729,"src":"1583:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1582:15:4"},"returnParameters":{"id":728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"isAllowed","nameLocation":"1626:9:4","nodeType":"VariableDeclaration","scope":729,"src":"1621:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":726,"name":"bool","nodeType":"ElementaryTypeName","src":"1621:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1620:16:4"},"scope":790,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":735,"nodeType":"FunctionDefinition","src":"1770:69:4","nodes":[],"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"1643:122:4","text":" @notice Gets number of registered asset groups.\n @return count Number of registered asset groups."},"functionSelector":"6184bcc8","implemented":false,"kind":"function","modifiers":[],"name":"numberOfAssetGroups","nameLocation":"1779:19:4","parameters":{"id":731,"nodeType":"ParameterList","parameters":[],"src":"1798:2:4"},"returnParameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"count","nameLocation":"1832:5:4","nodeType":"VariableDeclaration","scope":735,"src":"1824:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":732,"name":"uint256","nodeType":"ElementaryTypeName","src":"1824:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1823:15:4"},"scope":790,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":744,"nodeType":"FunctionDefinition","src":"2041:94:4","nodes":[],"documentation":{"id":736,"nodeType":"StructuredDocumentation","src":"1845:191:4","text":" @notice Gets asset group by its ID.\n @dev Requirements:\n - must provide a valid ID for the asset group\n @return assets Array of assets in the asset group."},"functionSelector":"dd0fe31a","implemented":false,"kind":"function","modifiers":[],"name":"listAssetGroup","nameLocation":"2050:14:4","parameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"assetGroupId","nameLocation":"2073:12:4","nodeType":"VariableDeclaration","scope":744,"src":"2065:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"2065:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2064:22:4"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"assets","nameLocation":"2127:6:4","nodeType":"VariableDeclaration","scope":744,"src":"2110:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"2110:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":741,"nodeType":"ArrayTypeName","src":"2110:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2109:25:4"},"scope":790,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":752,"nodeType":"FunctionDefinition","src":"2298:87:4","nodes":[],"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"2141:152:4","text":" @notice Gets asset group length.\n @dev Requirements:\n - must provide a valid ID for the asset group\n @return length"},"functionSelector":"46598eb4","implemented":false,"kind":"function","modifiers":[],"name":"assetGroupLength","nameLocation":"2307:16:4","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"assetGroupId","nameLocation":"2332:12:4","nodeType":"VariableDeclaration","scope":752,"src":"2324:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"2324:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2323:22:4"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"length","nameLocation":"2377:6:4","nodeType":"VariableDeclaration","scope":752,"src":"2369:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"2369:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2368:16:4"},"scope":790,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":758,"nodeType":"FunctionDefinition","src":"2591:64:4","nodes":[],"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"2391:195:4","text":" @notice Validates that provided ID represents an asset group.\n @dev Function reverts when ID does not represent an asset group.\n @param assetGroupId ID to validate."},"functionSelector":"e065ce6e","implemented":false,"kind":"function","modifiers":[],"name":"validateAssetGroup","nameLocation":"2600:18:4","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"assetGroupId","nameLocation":"2627:12:4","nodeType":"VariableDeclaration","scope":758,"src":"2619:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"2619:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2618:22:4"},"returnParameters":{"id":757,"nodeType":"ParameterList","parameters":[],"src":"2654:0:4"},"scope":790,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":767,"nodeType":"FunctionDefinition","src":"2941:90:4","nodes":[],"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"2661:275:4","text":" @notice Checks if asset group composed of assets already exists.\n Will revert if provided assets cannot form an asset group.\n @param assets Assets composing the asset group.\n @return Asset group ID if such asset group exists, 0 otherwise."},"functionSelector":"c1925bb6","implemented":false,"kind":"function","modifiers":[],"name":"checkAssetGroupExists","nameLocation":"2950:21:4","parameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"assets","nameLocation":"2991:6:4","nodeType":"VariableDeclaration","scope":767,"src":"2972:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":761,"nodeType":"ArrayTypeName","src":"2972:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2971:27:4"},"returnParameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"3022:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":764,"name":"uint256","nodeType":"ElementaryTypeName","src":"3022:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3021:9:4"},"scope":790,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":773,"nodeType":"FunctionDefinition","src":"3289:44:4","nodes":[],"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"3089:195:4","text":" @notice Allows a token to be used as an asset.\n @dev Requirements:\n - can only be called by the ROLE_SPOOL_ADMIN\n @param token Address of token to be allowed."},"functionSelector":"b53472ef","implemented":false,"kind":"function","modifiers":[],"name":"allowToken","nameLocation":"3298:10:4","parameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"token","nameLocation":"3317:5:4","nodeType":"VariableDeclaration","scope":773,"src":"3309:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"3309:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3308:15:4"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[],"src":"3332:0:4"},"scope":790,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":780,"nodeType":"FunctionDefinition","src":"3540:61:4","nodes":[],"documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"3339:196:4","text":" @notice Allows tokens to be used as assets.\n @dev Requirements:\n - can only be called by the ROLE_SPOOL_ADMIN\n @param tokens Addresses of tokens to be allowed."},"functionSelector":"256f5300","implemented":false,"kind":"function","modifiers":[],"name":"allowTokenBatch","nameLocation":"3549:15:4","parameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"tokens","nameLocation":"3584:6:4","nodeType":"VariableDeclaration","scope":780,"src":"3565:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"3565:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":776,"nodeType":"ArrayTypeName","src":"3565:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3564:27:4"},"returnParameters":{"id":779,"nodeType":"ParameterList","parameters":[],"src":"3600:0:4"},"scope":790,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":789,"nodeType":"FunctionDefinition","src":"4018:85:4","nodes":[],"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"3607:406:4","text":" @notice Registers a new asset group.\n @dev Requirements:\n - must provide at least one asset\n - all assets must be allowed\n - assets must be sorted\n - such asset group should not exist yet\n - can only be called by the ROLE_SPOOL_ADMIN\n @param assets Array of assets in the asset group.\n @return id Sequential ID assigned to the asset group."},"functionSelector":"17abe90c","implemented":false,"kind":"function","modifiers":[],"name":"registerAssetGroup","nameLocation":"4027:18:4","parameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"assets","nameLocation":"4065:6:4","nodeType":"VariableDeclaration","scope":789,"src":"4046:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"4046:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":783,"nodeType":"ArrayTypeName","src":"4046:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4045:27:4"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"id","nameLocation":"4099:2:4","nodeType":"VariableDeclaration","scope":789,"src":"4091:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":786,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4090:12:4"},"scope":790,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IAssetGroupRegistry","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[790],"name":"IAssetGroupRegistry","nameLocation":"862:19:4","scope":791,"usedErrors":[]}],"license":"BUSL-1.1"}},"src/interfaces/IDAI.sol":{"id":5,"ast":{"absolutePath":"src/interfaces/IDAI.sol","id":813,"exportedSymbols":{"IDAI":[812]},"nodeType":"SourceUnit","src":"32:252:5","nodes":[{"id":792,"nodeType":"PragmaDirective","src":"32:23:5","nodes":[],"literals":["solidity","0.8",".17"]},{"id":812,"nodeType":"ContractDefinition","src":"57:227:5","nodes":[{"id":811,"nodeType":"FunctionDefinition","src":"78:204:5","nodes":[],"functionSelector":"8fcbaf0c","implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"87:6:5","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"holder","nameLocation":"111:6:5","nodeType":"VariableDeclaration","scope":811,"src":"103:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"103:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":796,"mutability":"mutable","name":"spender","nameLocation":"135:7:5","nodeType":"VariableDeclaration","scope":811,"src":"127:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"127:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":798,"mutability":"mutable","name":"nonce","nameLocation":"160:5:5","nodeType":"VariableDeclaration","scope":811,"src":"152:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint256","nodeType":"ElementaryTypeName","src":"152:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":800,"mutability":"mutable","name":"expiry","nameLocation":"183:6:5","nodeType":"VariableDeclaration","scope":811,"src":"175:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":799,"name":"uint256","nodeType":"ElementaryTypeName","src":"175:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"allowed","nameLocation":"204:7:5","nodeType":"VariableDeclaration","scope":811,"src":"199:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":801,"name":"bool","nodeType":"ElementaryTypeName","src":"199:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":804,"mutability":"mutable","name":"v","nameLocation":"227:1:5","nodeType":"VariableDeclaration","scope":811,"src":"221:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":803,"name":"uint8","nodeType":"ElementaryTypeName","src":"221:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"r","nameLocation":"246:1:5","nodeType":"VariableDeclaration","scope":811,"src":"238:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"238:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"s","nameLocation":"265:1:5","nodeType":"VariableDeclaration","scope":811,"src":"257:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"257:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"93:179:5"},"returnParameters":{"id":810,"nodeType":"ParameterList","parameters":[],"src":"281:0:5"},"scope":812,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IDAI","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[812],"name":"IDAI","nameLocation":"67:4:5","scope":813,"usedErrors":[]}],"license":"MIT"}},"src/interfaces/IDepositManager.sol":{"id":6,"ast":{"absolutePath":"src/interfaces/IDepositManager.sol","id":1107,"exportedSymbols":{"DEPOSIT_FEE_MAX":[590],"DepositBag":[843],"DepositExtras":[857],"DepositIdOverflow":[2073],"DepositMetadata":[2107],"DepositSyncResult":[879],"ECOSYSTEM_FEE_MAX":[598],"FULL_PERCENT":[565],"FULL_PERCENT_INT":[569],"IDepositManager":[1106],"IERC1155MetadataURIUpgradeable":[1121],"IERC1155Upgradeable":[1284],"IERC165Upgradeable":[1296],"IERC20Upgradeable":[1452],"INITIAL_LOCKED_SHARES":[668],"INITIAL_LOCKED_SHARES_ADDRESS":[675],"INITIAL_SHARE_MULTIPLIER":[662],"ISmartVault":[2258],"InvalidAssetLengths":[819],"InvalidDepositNftId":[2081],"InvalidNftArrayLength":[822],"InvalidNftBalance":[2091],"InvalidNftTransferAmount":[2096],"InvalidWithdrawalNftId":[2086],"MANAGEMENT_FEE_MAX":[586],"MAXIMAL_DEPOSIT_ID":[636],"MAXIMAL_WITHDRAWAL_ID":[644],"MAX_ACTION_COUNT":[683],"MAX_DHW_BASE_YIELD_LIMIT":[658],"MAX_GUARD_COUNT":[679],"MAX_RISK_SCORE":[606],"MAX_RISK_TOLERANCE":[614],"MIN_RISK_SCORE":[610],"MIN_RISK_TOLERANCE":[619],"NFT_MINTED_SHARES":[650],"NULL_ASSET_GROUP_ID":[687],"NoDepositsToRecover":[828],"NotGhostVault":[831],"NothingToDeposit":[825],"RequestType":[2912],"SECONDS_IN_YEAR":[557],"SECONDS_IN_YEAR_INT":[561],"STATIC_RISK_PROVIDER":[626],"STATIC_RISK_SCORE":[630],"STRATEGY_COUNT_CAP":[654],"SV_PERFORMANCE_FEE_MAX":[594],"SenderEqualsRecipient":[2099],"SimulateDepositParams":[901],"SmartVaultFees":[2119],"SmartVaultFeesCollected":[864],"TREASURY_FEE_MAX":[602],"WithdrawalIdOverflow":[2076],"WithdrawalMetadata":[2112],"YIELD_FULL_PERCENT":[582],"YIELD_FULL_PERCENT_INT":[575],"uint16a16":[2916],"uint16a16Lib":[3058]},"nodeType":"SourceUnit","src":"37:10615:6","nodes":[{"id":814,"nodeType":"PragmaDirective","src":"37:23:6","nodes":[],"literals":["solidity","0.8",".17"]},{"id":815,"nodeType":"ImportDirective","src":"62:27:6","nodes":[],"absolutePath":"src/interfaces/ISmartVault.sol","file":"./ISmartVault.sol","nameLocation":"-1:-1:-1","scope":1107,"sourceUnit":2259,"symbolAliases":[],"unitAlias":""},{"id":816,"nodeType":"ImportDirective","src":"90:28:6","nodes":[],"absolutePath":"src/interfaces/uint16a16Lib.sol","file":"./uint16a16Lib.sol","nameLocation":"-1:-1:-1","scope":1107,"sourceUnit":3059,"symbolAliases":[],"unitAlias":""},{"id":819,"nodeType":"ErrorDefinition","src":"212:28:6","nodes":[],"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"120:91:6","text":" @notice Used when deposited assets are not the same length as underlying assets."},"errorSelector":"8329e5f4","name":"InvalidAssetLengths","nameLocation":"218:19:6","parameters":{"id":818,"nodeType":"ParameterList","parameters":[],"src":"237:2:6"}},{"id":822,"nodeType":"ErrorDefinition","src":"339:30:6","nodes":[],"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"242:96:6","text":" @notice Used when lengths of NFT id and amount arrays when claiming NFTs don't match."},"errorSelector":"4b4dfae6","name":"InvalidNftArrayLength","nameLocation":"345:21:6","parameters":{"id":821,"nodeType":"ParameterList","parameters":[],"src":"366:2:6"}},{"id":825,"nodeType":"ErrorDefinition","src":"450:25:6","nodes":[],"documentation":{"id":823,"nodeType":"StructuredDocumentation","src":"371:78:6","text":" @notice Used when trying to deposit zero assets into a smart vault."},"errorSelector":"9a4f66bf","name":"NothingToDeposit","nameLocation":"456:16:6","parameters":{"id":824,"nodeType":"ParameterList","parameters":[],"src":"472:2:6"}},{"id":828,"nodeType":"ErrorDefinition","src":"597:28:6","nodes":[],"documentation":{"id":826,"nodeType":"StructuredDocumentation","src":"477:119:6","text":" @notice Used when there are no pending deposits to recover.\n E.g., they were already recovered or flushed."},"errorSelector":"097f76b5","name":"NoDepositsToRecover","nameLocation":"603:19:6","parameters":{"id":827,"nodeType":"ParameterList","parameters":[],"src":"622:2:6"}},{"id":831,"nodeType":"ErrorDefinition","src":"741:22:6","nodes":[],"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"627:113:6","text":" @notice Used when trying to recover pending deposits from a smart vault that has non-ghost strategies."},"errorSelector":"7ee04d10","name":"NotGhostVault","nameLocation":"747:13:6","parameters":{"id":830,"nodeType":"ParameterList","parameters":[],"src":"760:2:6"}},{"id":843,"nodeType":"StructDefinition","src":"1168:129:6","nodes":[],"canonicalName":"DepositBag","members":[{"constant":false,"id":833,"mutability":"mutable","name":"smartVault","nameLocation":"1200:10:6","nodeType":"VariableDeclaration","scope":843,"src":"1192:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"1192:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"assets","nameLocation":"1226:6:6","nodeType":"VariableDeclaration","scope":843,"src":"1216:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":835,"nodeType":"ArrayTypeName","src":"1216:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":838,"mutability":"mutable","name":"receiver","nameLocation":"1246:8:6","nodeType":"VariableDeclaration","scope":843,"src":"1238:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":837,"name":"address","nodeType":"ElementaryTypeName","src":"1238:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":840,"mutability":"mutable","name":"referral","nameLocation":"1268:8:6","nodeType":"VariableDeclaration","scope":843,"src":"1260:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":842,"mutability":"mutable","name":"doFlush","nameLocation":"1287:7:6","nodeType":"VariableDeclaration","scope":843,"src":"1282:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":841,"name":"bool","nodeType":"ElementaryTypeName","src":"1282:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DepositBag","nameLocation":"1175:10:6","scope":1107,"visibility":"public"},{"id":857,"nodeType":"StructDefinition","src":"1672:146:6","nodes":[],"canonicalName":"DepositExtras","members":[{"constant":false,"id":845,"mutability":"mutable","name":"depositor","nameLocation":"1707:9:6","nodeType":"VariableDeclaration","scope":857,"src":"1699:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"tokens","nameLocation":"1732:6:6","nodeType":"VariableDeclaration","scope":857,"src":"1722:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1722:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":847,"nodeType":"ArrayTypeName","src":"1722:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"strategies","nameLocation":"1754:10:6","nodeType":"VariableDeclaration","scope":857,"src":"1744:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":849,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":850,"nodeType":"ArrayTypeName","src":"1744:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"allocations","nameLocation":"1780:11:6","nodeType":"VariableDeclaration","scope":857,"src":"1770:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"},"typeName":{"id":853,"nodeType":"UserDefinedTypeName","pathNode":{"id":852,"name":"uint16a16","nameLocations":["1770:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"1770:9:6"},"referencedDeclaration":2916,"src":"1770:9:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"flushIndex","nameLocation":"1805:10:6","nodeType":"VariableDeclaration","scope":857,"src":"1797:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"1797:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"DepositExtras","nameLocation":"1679:13:6","scope":1107,"visibility":"public"},{"id":864,"nodeType":"StructDefinition","src":"2078:116:6","nodes":[],"canonicalName":"SmartVaultFeesCollected","members":[{"constant":false,"id":859,"mutability":"mutable","name":"depositFees","nameLocation":"2123:11:6","nodeType":"VariableDeclaration","scope":864,"src":"2115:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2115:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":861,"mutability":"mutable","name":"performanceFees","nameLocation":"2148:15:6","nodeType":"VariableDeclaration","scope":864,"src":"2140:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":860,"name":"uint256","nodeType":"ElementaryTypeName","src":"2140:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":863,"mutability":"mutable","name":"managementFees","nameLocation":"2177:14:6","nodeType":"VariableDeclaration","scope":864,"src":"2169:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":862,"name":"uint256","nodeType":"ElementaryTypeName","src":"2169:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"SmartVaultFeesCollected","nameLocation":"2085:23:6","scope":1107,"visibility":"public"},{"id":879,"nodeType":"StructDefinition","src":"2645:198:6","nodes":[],"canonicalName":"DepositSyncResult","members":[{"constant":false,"id":866,"mutability":"mutable","name":"mintedSVTs","nameLocation":"2684:10:6","nodeType":"VariableDeclaration","scope":879,"src":"2676:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"2676:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"dhwTimestamp","nameLocation":"2708:12:6","nodeType":"VariableDeclaration","scope":879,"src":"2700:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"2700:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"feeSVTs","nameLocation":"2734:7:6","nodeType":"VariableDeclaration","scope":879,"src":"2726:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"2726:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"feesCollected","nameLocation":"2771:13:6","nodeType":"VariableDeclaration","scope":879,"src":"2747:37:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFeesCollected_$864_storage_ptr","typeString":"struct SmartVaultFeesCollected"},"typeName":{"id":872,"nodeType":"UserDefinedTypeName","pathNode":{"id":871,"name":"SmartVaultFeesCollected","nameLocations":["2747:23:6"],"nodeType":"IdentifierPath","referencedDeclaration":864,"src":"2747:23:6"},"referencedDeclaration":864,"src":"2747:23:6","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFeesCollected_$864_storage_ptr","typeString":"struct SmartVaultFeesCollected"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"initialLockedSVTs","nameLocation":"2798:17:6","nodeType":"VariableDeclaration","scope":879,"src":"2790:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"2790:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":878,"mutability":"mutable","name":"sstShares","nameLocation":"2831:9:6","nodeType":"VariableDeclaration","scope":879,"src":"2821:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"2821:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":877,"nodeType":"ArrayTypeName","src":"2821:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"DepositSyncResult","nameLocation":"2652:17:6","scope":1107,"visibility":"public"},{"id":901,"nodeType":"StructDefinition","src":"3310:274:6","nodes":[],"canonicalName":"SimulateDepositParams","members":[{"constant":false,"id":881,"mutability":"mutable","name":"smartVault","nameLocation":"3353:10:6","nodeType":"VariableDeclaration","scope":901,"src":"3345:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"3345:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":885,"mutability":"mutable","name":"bag","nameLocation":"3446:3:6","nodeType":"VariableDeclaration","scope":901,"src":"3435:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":882,"name":"uint256","nodeType":"ElementaryTypeName","src":"3435:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":884,"length":{"hexValue":"32","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3443:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"3435:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":888,"mutability":"mutable","name":"strategies","nameLocation":"3465:10:6","nodeType":"VariableDeclaration","scope":901,"src":"3455:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"3455:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":887,"nodeType":"ArrayTypeName","src":"3455:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"assetGroup","nameLocation":"3491:10:6","nodeType":"VariableDeclaration","scope":901,"src":"3481:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"3481:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":890,"nodeType":"ArrayTypeName","src":"3481:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"dhwIndexes","nameLocation":"3517:10:6","nodeType":"VariableDeclaration","scope":901,"src":"3507:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"},"typeName":{"id":893,"nodeType":"UserDefinedTypeName","pathNode":{"id":892,"name":"uint16a16","nameLocations":["3507:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"3507:9:6"},"referencedDeclaration":2916,"src":"3507:9:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"dhwIndexesOld","nameLocation":"3543:13:6","nodeType":"VariableDeclaration","scope":901,"src":"3533:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"},"typeName":{"id":896,"nodeType":"UserDefinedTypeName","pathNode":{"id":895,"name":"uint16a16","nameLocations":["3533:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"3533:9:6"},"referencedDeclaration":2916,"src":"3533:9:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"fees","nameLocation":"3577:4:6","nodeType":"VariableDeclaration","scope":901,"src":"3562:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFees_$2119_storage_ptr","typeString":"struct SmartVaultFees"},"typeName":{"id":899,"nodeType":"UserDefinedTypeName","pathNode":{"id":898,"name":"SmartVaultFees","nameLocations":["3562:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"3562:14:6"},"referencedDeclaration":2119,"src":"3562:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFees_$2119_storage_ptr","typeString":"struct SmartVaultFees"}},"visibility":"internal"}],"name":"SimulateDepositParams","nameLocation":"3317:21:6","scope":1107,"visibility":"public"},{"id":1106,"nodeType":"ContractDefinition","src":"3586:7066:6","nodes":[{"id":916,"nodeType":"EventDefinition","src":"3902:197:6","nodes":[],"anonymous":false,"documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"3618:279:6","text":" @notice User redeemed deposit NFTs for SVTs\n @param smartVault Smart vault address\n @param claimer Claimer address\n @param claimedVaultTokens Amount of SVTs claimed\n @param nftIds NFTs to burn\n @param nftAmounts NFT shares to burn"},"eventSelector":"05e705e1a2e55931ff614cec1bb060ac0956d83c944598c02489e11d8f274c60","name":"SmartVaultTokensClaimed","nameLocation":"3908:23:6","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"indexed":true,"mutability":"mutable","name":"smartVault","nameLocation":"3957:10:6","nodeType":"VariableDeclaration","scope":916,"src":"3941:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"3941:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":906,"indexed":true,"mutability":"mutable","name":"claimer","nameLocation":"3993:7:6","nodeType":"VariableDeclaration","scope":916,"src":"3977:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"3977:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":908,"indexed":false,"mutability":"mutable","name":"claimedVaultTokens","nameLocation":"4018:18:6","nodeType":"VariableDeclaration","scope":916,"src":"4010:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"4010:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":911,"indexed":false,"mutability":"mutable","name":"nftIds","nameLocation":"4056:6:6","nodeType":"VariableDeclaration","scope":916,"src":"4046:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"4046:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":910,"nodeType":"ArrayTypeName","src":"4046:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":914,"indexed":false,"mutability":"mutable","name":"nftAmounts","nameLocation":"4082:10:6","nodeType":"VariableDeclaration","scope":916,"src":"4072:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":912,"name":"uint256","nodeType":"ElementaryTypeName","src":"4072:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":913,"nodeType":"ArrayTypeName","src":"4072:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3931:167:6"}},{"id":934,"nodeType":"EventDefinition","src":"4531:241:6","nodes":[],"anonymous":false,"documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"4105:421:6","text":" @notice A deposit has been initiated\n @param smartVault Smart vault address\n @param receiver Beneficiary of the deposit\n @param depositId Deposit NFT ID for this deposit\n @param flushIndex Flush index the deposit was scheduled for\n @param assets Amount of assets to deposit\n @param depositor Address that initiated the deposit\n @param referral Referral address"},"eventSelector":"a6a70cc777947e6314128792031cd7a807f80f273c12fe5ebcced518030a7367","name":"DepositInitiated","nameLocation":"4537:16:6","parameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"indexed":true,"mutability":"mutable","name":"smartVault","nameLocation":"4579:10:6","nodeType":"VariableDeclaration","scope":934,"src":"4563:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"4563:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":921,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"4615:8:6","nodeType":"VariableDeclaration","scope":934,"src":"4599:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"4599:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":923,"indexed":true,"mutability":"mutable","name":"depositId","nameLocation":"4649:9:6","nodeType":"VariableDeclaration","scope":934,"src":"4633:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"4633:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":925,"indexed":false,"mutability":"mutable","name":"flushIndex","nameLocation":"4676:10:6","nodeType":"VariableDeclaration","scope":934,"src":"4668:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint256","nodeType":"ElementaryTypeName","src":"4668:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":928,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"4706:6:6","nodeType":"VariableDeclaration","scope":934,"src":"4696:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"4696:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":927,"nodeType":"ArrayTypeName","src":"4696:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":930,"indexed":false,"mutability":"mutable","name":"depositor","nameLocation":"4730:9:6","nodeType":"VariableDeclaration","scope":934,"src":"4722:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"4722:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":932,"indexed":false,"mutability":"mutable","name":"referral","nameLocation":"4757:8:6","nodeType":"VariableDeclaration","scope":934,"src":"4749:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"4749:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4553:218:6"}},{"id":942,"nodeType":"EventDefinition","src":"4946:86:6","nodes":[],"anonymous":false,"documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"4778:163:6","text":" @notice Pending deposits were recovered.\n @param smartVault Smart vault address.\n @param recoveredAssets Amount of assets recovered."},"eventSelector":"daca6c695ba7d08261722884fe84c5781ee154ba9bdad3576bafc55cd54a16bc","name":"PendingDepositsRecovered","nameLocation":"4952:24:6","parameters":{"id":941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"indexed":true,"mutability":"mutable","name":"smartVault","nameLocation":"4993:10:6","nodeType":"VariableDeclaration","scope":942,"src":"4977:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"4977:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":940,"indexed":false,"mutability":"mutable","name":"recoveredAssets","nameLocation":"5015:15:6","nodeType":"VariableDeclaration","scope":942,"src":"5005:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"5005:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":939,"nodeType":"ArrayTypeName","src":"5005:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4976:55:6"}},{"id":950,"nodeType":"EventDefinition","src":"5216:104:6","nodes":[],"anonymous":false,"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"5038:173:6","text":" @notice Smart vault fees collected.\n @param smartVault Smart vault address.\n @param smartVaultFeesCollected Collected smart vault fee amounts."},"eventSelector":"263ce985fe506cb67ef6c206d4cd39eaa07324bc5e3e797ec1626e7b9ceac305","name":"SmartVaultFeesMinted","nameLocation":"5222:20:6","parameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"indexed":true,"mutability":"mutable","name":"smartVault","nameLocation":"5259:10:6","nodeType":"VariableDeclaration","scope":950,"src":"5243:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"5243:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":948,"indexed":false,"mutability":"mutable","name":"smartVaultFeesCollected","nameLocation":"5295:23:6","nodeType":"VariableDeclaration","scope":950,"src":"5271:47:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFeesCollected_$864_memory_ptr","typeString":"struct SmartVaultFeesCollected"},"typeName":{"id":947,"nodeType":"UserDefinedTypeName","pathNode":{"id":946,"name":"SmartVaultFeesCollected","nameLocations":["5271:23:6"],"nodeType":"IdentifierPath","referencedDeclaration":864,"src":"5271:23:6"},"referencedDeclaration":864,"src":"5271:23:6","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFeesCollected_$864_storage_ptr","typeString":"struct SmartVaultFeesCollected"}},"visibility":"internal"}],"src":"5242:77:6"}},{"id":960,"nodeType":"FunctionDefinition","src":"5442:157:6","nodes":[],"documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"5326:111:6","text":" @notice Simulate vault synchronization (i.e. DHW was completed, but vault wasn't synced yet)"},"functionSelector":"71b5cb8d","implemented":false,"kind":"function","modifiers":[],"name":"syncDepositsSimulate","nameLocation":"5451:20:6","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"parameters","nameLocation":"5503:10:6","nodeType":"VariableDeclaration","scope":960,"src":"5472:41:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SimulateDepositParams_$901_calldata_ptr","typeString":"struct SimulateDepositParams"},"typeName":{"id":953,"nodeType":"UserDefinedTypeName","pathNode":{"id":952,"name":"SimulateDepositParams","nameLocations":["5472:21:6"],"nodeType":"IdentifierPath","referencedDeclaration":901,"src":"5472:21:6"},"referencedDeclaration":901,"src":"5472:21:6","typeDescriptions":{"typeIdentifier":"t_struct$_SimulateDepositParams_$901_storage_ptr","typeString":"struct SimulateDepositParams"}},"visibility":"internal"}],"src":"5471:43:6"},"returnParameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"syncResult","nameLocation":"5587:10:6","nodeType":"VariableDeclaration","scope":960,"src":"5562:35:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositSyncResult_$879_memory_ptr","typeString":"struct DepositSyncResult"},"typeName":{"id":957,"nodeType":"UserDefinedTypeName","pathNode":{"id":956,"name":"DepositSyncResult","nameLocations":["5562:17:6"],"nodeType":"IdentifierPath","referencedDeclaration":879,"src":"5562:17:6"},"referencedDeclaration":879,"src":"5562:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_DepositSyncResult_$879_storage_ptr","typeString":"struct DepositSyncResult"}},"visibility":"internal"}],"src":"5561:37:6"},"scope":1106,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":987,"nodeType":"FunctionDefinition","src":"6153:375:6","nodes":[],"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"5605:543:6","text":" @notice Synchronize vault deposits for completed DHW runs\n @dev Requirements:\n - caller must have role ROLE_SMART_VAULT_MANAGER\n @param smartVault Smart Vault address\n @param bag flushIndex, lastDhwSyncedTimestamp\n @param strategies vault strategy addresses\n @param dhwIndexes dhw indexes for given and previous flushIndex\n @param assetGroup vault asset group token addresses\n @param fees smart vault fee configuration\n @return syncResult Result of the smart vault sync."},"functionSelector":"41c4f075","implemented":false,"kind":"function","modifiers":[],"name":"syncDeposits","nameLocation":"6162:12:6","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"smartVault","nameLocation":"6192:10:6","nodeType":"VariableDeclaration","scope":987,"src":"6184:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"6184:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"bag","nameLocation":"6232:3:6","nodeType":"VariableDeclaration","scope":987,"src":"6212:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"6212:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":966,"length":{"hexValue":"32","id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6220:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"6212:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":970,"mutability":"mutable","name":"strategies","nameLocation":"6337:10:6","nodeType":"VariableDeclaration","scope":987,"src":"6318:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"6318:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":969,"nodeType":"ArrayTypeName","src":"6318:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":975,"mutability":"mutable","name":"dhwIndexes","nameLocation":"6379:10:6","nodeType":"VariableDeclaration","scope":987,"src":"6357:32:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_userDefinedValueType$_uint16a16_$2916_$2_calldata_ptr","typeString":"uint16a16[2]"},"typeName":{"baseType":{"id":972,"nodeType":"UserDefinedTypeName","pathNode":{"id":971,"name":"uint16a16","nameLocations":["6357:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"6357:9:6"},"referencedDeclaration":2916,"src":"6357:9:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"id":974,"length":{"hexValue":"32","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6367:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"6357:12:6","typeDescriptions":{"typeIdentifier":"t_array$_t_userDefinedValueType$_uint16a16_$2916_$2_storage_ptr","typeString":"uint16a16[2]"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"assetGroup","nameLocation":"6418:10:6","nodeType":"VariableDeclaration","scope":987,"src":"6399:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":976,"name":"address","nodeType":"ElementaryTypeName","src":"6399:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":977,"nodeType":"ArrayTypeName","src":"6399:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"fees","nameLocation":"6462:4:6","nodeType":"VariableDeclaration","scope":987,"src":"6438:28:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFees_$2119_calldata_ptr","typeString":"struct SmartVaultFees"},"typeName":{"id":980,"nodeType":"UserDefinedTypeName","pathNode":{"id":979,"name":"SmartVaultFees","nameLocations":["6438:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"6438:14:6"},"referencedDeclaration":2119,"src":"6438:14:6","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFees_$2119_storage_ptr","typeString":"struct SmartVaultFees"}},"visibility":"internal"}],"src":"6174:298:6"},"returnParameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"syncResult","nameLocation":"6516:10:6","nodeType":"VariableDeclaration","scope":987,"src":"6491:35:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositSyncResult_$879_memory_ptr","typeString":"struct DepositSyncResult"},"typeName":{"id":984,"nodeType":"UserDefinedTypeName","pathNode":{"id":983,"name":"DepositSyncResult","nameLocations":["6491:17:6"],"nodeType":"IdentifierPath","referencedDeclaration":879,"src":"6491:17:6"},"referencedDeclaration":879,"src":"6491:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_DepositSyncResult_$879_storage_ptr","typeString":"struct DepositSyncResult"}},"visibility":"internal"}],"src":"6490:37:6"},"scope":1106,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":999,"nodeType":"FunctionDefinition","src":"6806:110:6","nodes":[],"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"6534:267:6","text":" @notice Adds deposits for the next flush cycle.\n @dev Requirements:\n - caller must have role ROLE_SMART_VAULT_MANAGER\n @param bag Deposit parameters.\n @param bag2 Extra parameters.\n @return nftId ID of the deposit NFT."},"functionSelector":"237d311d","implemented":false,"kind":"function","modifiers":[],"name":"depositAssets","nameLocation":"6815:13:6","parameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"bag","nameLocation":"6849:3:6","nodeType":"VariableDeclaration","scope":999,"src":"6829:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBag_$843_calldata_ptr","typeString":"struct DepositBag"},"typeName":{"id":990,"nodeType":"UserDefinedTypeName","pathNode":{"id":989,"name":"DepositBag","nameLocations":["6829:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":843,"src":"6829:10:6"},"referencedDeclaration":843,"src":"6829:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBag_$843_storage_ptr","typeString":"struct DepositBag"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"bag2","nameLocation":"6877:4:6","nodeType":"VariableDeclaration","scope":999,"src":"6854:27:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_DepositExtras_$857_calldata_ptr","typeString":"struct DepositExtras"},"typeName":{"id":993,"nodeType":"UserDefinedTypeName","pathNode":{"id":992,"name":"DepositExtras","nameLocations":["6854:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":857,"src":"6854:13:6"},"referencedDeclaration":857,"src":"6854:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_DepositExtras_$857_storage_ptr","typeString":"struct DepositExtras"}},"visibility":"internal"}],"src":"6828:54:6"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":997,"mutability":"mutable","name":"nftId","nameLocation":"6909:5:6","nodeType":"VariableDeclaration","scope":999,"src":"6901:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"6901:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6900:15:6"},"scope":1106,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1019,"nodeType":"FunctionDefinition","src":"7413:232:6","nodes":[],"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"6922:486:6","text":" @notice Mark deposits ready to be processed in the next DHW cycle\n @dev Requirements:\n - caller must have role ROLE_SMART_VAULT_MANAGER\n @param smartVault Smart Vault address\n @param flushIndex index to flush\n @param strategies vault strategy addresses\n @param allocations vault strategy allocations\n @param tokens vault asset group token addresses\n @return dhwIndexes DHW indexes in which the deposits will be included"},"functionSelector":"fa6c18d8","implemented":false,"kind":"function","modifiers":[],"name":"flushSmartVault","nameLocation":"7422:15:6","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"smartVault","nameLocation":"7455:10:6","nodeType":"VariableDeclaration","scope":1019,"src":"7447:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"7447:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1004,"mutability":"mutable","name":"flushIndex","nameLocation":"7483:10:6","nodeType":"VariableDeclaration","scope":1019,"src":"7475:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1003,"name":"uint256","nodeType":"ElementaryTypeName","src":"7475:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"strategies","nameLocation":"7522:10:6","nodeType":"VariableDeclaration","scope":1019,"src":"7503:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"7503:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1006,"nodeType":"ArrayTypeName","src":"7503:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"allocations","nameLocation":"7552:11:6","nodeType":"VariableDeclaration","scope":1019,"src":"7542:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"},"typeName":{"id":1009,"nodeType":"UserDefinedTypeName","pathNode":{"id":1008,"name":"uint16a16","nameLocations":["7542:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"7542:9:6"},"referencedDeclaration":2916,"src":"7542:9:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"visibility":"internal"},{"constant":false,"id":1013,"mutability":"mutable","name":"tokens","nameLocation":"7592:6:6","nodeType":"VariableDeclaration","scope":1019,"src":"7573:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"7573:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1012,"nodeType":"ArrayTypeName","src":"7573:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7437:167:6"},"returnParameters":{"id":1018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"dhwIndexes","nameLocation":"7633:10:6","nodeType":"VariableDeclaration","scope":1019,"src":"7623:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"},"typeName":{"id":1016,"nodeType":"UserDefinedTypeName","pathNode":{"id":1015,"name":"uint16a16","nameLocations":["7623:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"7623:9:6"},"referencedDeclaration":2916,"src":"7623:9:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"visibility":"internal"}],"src":"7622:22:6"},"scope":1106,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1037,"nodeType":"FunctionDefinition","src":"8042:238:6","nodes":[],"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"7651:386:6","text":" @notice Get the number of SVTs that are available, but haven't been claimed yet, for the given NFT\n @param smartVaultAddress Smart Vault address\n @param data NFT deposit NFT metadata\n @param nftShares amount of NFT shares to burn for SVTs\n @param mintedSVTs amount of SVTs minted for this flush\n @param tokens vault asset group addresses"},"functionSelector":"708215b0","implemented":false,"kind":"function","modifiers":[],"name":"getClaimedVaultTokensPreview","nameLocation":"8051:28:6","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"smartVaultAddress","nameLocation":"8097:17:6","nodeType":"VariableDeclaration","scope":1037,"src":"8089:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"8089:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"data","nameLocation":"8147:4:6","nodeType":"VariableDeclaration","scope":1037,"src":"8124:27:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositMetadata_$2107_memory_ptr","typeString":"struct DepositMetadata"},"typeName":{"id":1024,"nodeType":"UserDefinedTypeName","pathNode":{"id":1023,"name":"DepositMetadata","nameLocations":["8124:15:6"],"nodeType":"IdentifierPath","referencedDeclaration":2107,"src":"8124:15:6"},"referencedDeclaration":2107,"src":"8124:15:6","typeDescriptions":{"typeIdentifier":"t_struct$_DepositMetadata_$2107_storage_ptr","typeString":"struct DepositMetadata"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"nftShares","nameLocation":"8169:9:6","nodeType":"VariableDeclaration","scope":1037,"src":"8161:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"8161:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"mintedSVTs","nameLocation":"8196:10:6","nodeType":"VariableDeclaration","scope":1037,"src":"8188:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"8188:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"tokens","nameLocation":"8235:6:6","nodeType":"VariableDeclaration","scope":1037,"src":"8216:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"8216:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1031,"nodeType":"ArrayTypeName","src":"8216:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"8079:168:6"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1037,"src":"8271:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"8271:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8270:9:6"},"scope":1106,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1050,"nodeType":"FunctionDefinition","src":"8363:157:6","nodes":[],"documentation":{"id":1038,"nodeType":"StructuredDocumentation","src":"8286:72:6","text":" @notice Fetch assets deposited in a given vault flush"},"functionSelector":"5e66a75e","implemented":false,"kind":"function","modifiers":[],"name":"smartVaultDeposits","nameLocation":"8372:18:6","parameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1040,"mutability":"mutable","name":"smartVault","nameLocation":"8399:10:6","nodeType":"VariableDeclaration","scope":1050,"src":"8391:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1039,"name":"address","nodeType":"ElementaryTypeName","src":"8391:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"flushIdx","nameLocation":"8419:8:6","nodeType":"VariableDeclaration","scope":1050,"src":"8411:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"8411:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"assetGroupLength","nameLocation":"8437:16:6","nodeType":"VariableDeclaration","scope":1050,"src":"8429:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"8429:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8390:64:6"},"returnParameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1050,"src":"8502:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"8502:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1047,"nodeType":"ArrayTypeName","src":"8502:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8501:18:6"},"scope":1106,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1073,"nodeType":"FunctionDefinition","src":"9130:298:6","nodes":[],"documentation":{"id":1051,"nodeType":"StructuredDocumentation","src":"8526:599:6","text":" @notice Claim SVTs by burning deposit NFTs.\n @dev Requirements:\n - caller must have role ROLE_SMART_VAULT_MANAGER\n @param smartVault Smart Vault address\n @param nftIds NFT ids to burn\n @param nftAmounts NFT amounts to burn (support for partial burn)\n @param tokens vault asset group token addresses\n @param owner address owning NFTs\n @param executor address executing the claim transaction\n @param flushIndexToSync next flush index to sync for the smart vault\n @return claimedTokens Amount of smart vault tokens claimed."},"functionSelector":"6521c194","implemented":false,"kind":"function","modifiers":[],"name":"claimSmartVaultTokens","nameLocation":"9139:21:6","parameters":{"id":1069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"smartVault","nameLocation":"9178:10:6","nodeType":"VariableDeclaration","scope":1073,"src":"9170:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"9170:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"nftIds","nameLocation":"9217:6:6","nodeType":"VariableDeclaration","scope":1073,"src":"9198:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"9198:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1055,"nodeType":"ArrayTypeName","src":"9198:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"nftAmounts","nameLocation":"9252:10:6","nodeType":"VariableDeclaration","scope":1073,"src":"9233:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1057,"name":"uint256","nodeType":"ElementaryTypeName","src":"9233:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1058,"nodeType":"ArrayTypeName","src":"9233:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"tokens","nameLocation":"9291:6:6","nodeType":"VariableDeclaration","scope":1073,"src":"9272:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"9272:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1061,"nodeType":"ArrayTypeName","src":"9272:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"owner","nameLocation":"9315:5:6","nodeType":"VariableDeclaration","scope":1073,"src":"9307:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"9307:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"executor","nameLocation":"9338:8:6","nodeType":"VariableDeclaration","scope":1073,"src":"9330:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"flushIndexToSync","nameLocation":"9364:16:6","nodeType":"VariableDeclaration","scope":1073,"src":"9356:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9160:226:6"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"claimedTokens","nameLocation":"9413:13:6","nodeType":"VariableDeclaration","scope":1073,"src":"9405:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1070,"name":"uint256","nodeType":"ElementaryTypeName","src":"9405:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9404:23:6"},"scope":1106,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1089,"nodeType":"FunctionDefinition","src":"9926:210:6","nodes":[],"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"9434:487:6","text":" @notice Recovers pending deposits from smart vault.\n @dev Requirements:\n - caller must have role ROLE_SMART_VAULT_MANAGER\n @param smartVault Smart vault from which to recover pending deposits.\n @param flushIndex Flush index for which to recover pending deposits.\n @param strategies Addresses of smart vault's strategies.\n @param tokens Asset group token addresses.\n @param emergencyWallet Address of emergency withdraw wallet."},"functionSelector":"b261ea8b","implemented":false,"kind":"function","modifiers":[],"name":"recoverPendingDeposits","nameLocation":"9935:22:6","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"smartVault","nameLocation":"9975:10:6","nodeType":"VariableDeclaration","scope":1089,"src":"9967:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"flushIndex","nameLocation":"10003:10:6","nodeType":"VariableDeclaration","scope":1089,"src":"9995:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint256","nodeType":"ElementaryTypeName","src":"9995:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"strategies","nameLocation":"10042:10:6","nodeType":"VariableDeclaration","scope":1089,"src":"10023:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1079,"name":"address","nodeType":"ElementaryTypeName","src":"10023:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1080,"nodeType":"ArrayTypeName","src":"10023:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"tokens","nameLocation":"10081:6:6","nodeType":"VariableDeclaration","scope":1089,"src":"10062:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"10062:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1083,"nodeType":"ArrayTypeName","src":"10062:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"emergencyWallet","nameLocation":"10105:15:6","nodeType":"VariableDeclaration","scope":1089,"src":"10097:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1085,"name":"address","nodeType":"ElementaryTypeName","src":"10097:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9957:169:6"},"returnParameters":{"id":1088,"nodeType":"ParameterList","parameters":[],"src":"10135:0:6"},"scope":1106,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1105,"nodeType":"FunctionDefinition","src":"10477:173:6","nodes":[],"documentation":{"id":1090,"nodeType":"StructuredDocumentation","src":"10142:330:6","text":" @notice Gets current required deposit ratio of a smart vault.\n @param tokens Asset tokens of the smart vault.\n @param allocations Allocation between strategies of the smart vault.\n @param strategies Strategies of the smart vault.\n @return ratio Required deposit ratio of the smart vault."},"functionSelector":"ac18ea13","implemented":false,"kind":"function","modifiers":[],"name":"getDepositRatio","nameLocation":"10486:15:6","parameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"tokens","nameLocation":"10519:6:6","nodeType":"VariableDeclaration","scope":1105,"src":"10502:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"10502:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1092,"nodeType":"ArrayTypeName","src":"10502:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"allocations","nameLocation":"10537:11:6","nodeType":"VariableDeclaration","scope":1105,"src":"10527:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"},"typeName":{"id":1095,"nodeType":"UserDefinedTypeName","pathNode":{"id":1094,"name":"uint16a16","nameLocations":["10527:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"10527:9:6"},"referencedDeclaration":2916,"src":"10527:9:6","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"strategies","nameLocation":"10567:10:6","nodeType":"VariableDeclaration","scope":1105,"src":"10550:27:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"10550:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1098,"nodeType":"ArrayTypeName","src":"10550:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10501:77:6"},"returnParameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"ratio","nameLocation":"10643:5:6","nodeType":"VariableDeclaration","scope":1105,"src":"10626:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"10626:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1102,"nodeType":"ArrayTypeName","src":"10626:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10625:24:6"},"scope":1106,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IDepositManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[1106],"name":"IDepositManager","nameLocation":"3596:15:6","scope":1107,"usedErrors":[]}],"license":"BUSL-1.1"}},"src/interfaces/IERC1155MetadataURIUpgradeable.sol":{"id":7,"ast":{"absolutePath":"src/interfaces/IERC1155MetadataURIUpgradeable.sol","id":1122,"exportedSymbols":{"IERC1155MetadataURIUpgradeable":[1121],"IERC1155Upgradeable":[1284],"IERC165Upgradeable":[1296]},"nodeType":"SourceUnit","src":"117:589:7","nodes":[{"id":1108,"nodeType":"PragmaDirective","src":"117:23:7","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":1109,"nodeType":"ImportDirective","src":"142:35:7","nodes":[],"absolutePath":"src/interfaces/IERC1155Upgradeable.sol","file":"./IERC1155Upgradeable.sol","nameLocation":"-1:-1:-1","scope":1122,"sourceUnit":1285,"symbolAliases":[],"unitAlias":""},{"id":1121,"nodeType":"ContractDefinition","src":"374:332:7","nodes":[{"id":1120,"nodeType":"FunctionDefinition","src":"641:63:7","nodes":[],"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"444:192:7","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"650:3:7","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"id","nameLocation":"662:2:7","nodeType":"VariableDeclaration","scope":1120,"src":"654:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"654:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:12:7"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1120,"src":"689:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1117,"name":"string","nodeType":"ElementaryTypeName","src":"689:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"688:15:7"},"scope":1121,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":1111,"name":"IERC1155Upgradeable","nameLocations":["418:19:7"],"nodeType":"IdentifierPath","referencedDeclaration":1284,"src":"418:19:7"},"id":1112,"nodeType":"InheritanceSpecifier","src":"418:19:7"}],"canonicalName":"IERC1155MetadataURIUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"179:194:7","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"linearizedBaseContracts":[1121,1284,1296],"name":"IERC1155MetadataURIUpgradeable","nameLocation":"384:30:7","scope":1122,"usedErrors":[]}],"license":"MIT"}},"src/interfaces/IERC1155ReceiverUpgradeable.sol":{"id":8,"ast":{"absolutePath":"src/interfaces/IERC1155ReceiverUpgradeable.sol","id":1163,"exportedSymbols":{"IERC1155ReceiverUpgradeable":[1162],"IERC165Upgradeable":[1296]},"nodeType":"SourceUnit","src":"118:2392:8","nodes":[{"id":1123,"nodeType":"PragmaDirective","src":"118:23:8","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":1124,"nodeType":"ImportDirective","src":"143:34:8","nodes":[],"absolutePath":"src/interfaces/IERC165Upgradeable.sol","file":"./IERC165Upgradeable.sol","nameLocation":"-1:-1:-1","scope":1163,"sourceUnit":1297,"symbolAliases":[],"unitAlias":""},{"id":1162,"nodeType":"ContractDefinition","src":"219:2291:8","nodes":[{"id":1143,"nodeType":"FunctionDefinition","src":"1116:179:8","nodes":[],"documentation":{"id":1128,"nodeType":"StructuredDocumentation","src":"285:826:8","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1125:17:8","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"operator","nameLocation":"1160:8:8","nodeType":"VariableDeclaration","scope":1143,"src":"1152:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"1152:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"from","nameLocation":"1186:4:8","nodeType":"VariableDeclaration","scope":1143,"src":"1178:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"1178:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"id","nameLocation":"1208:2:8","nodeType":"VariableDeclaration","scope":1143,"src":"1200:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"1200:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1136,"mutability":"mutable","name":"value","nameLocation":"1228:5:8","nodeType":"VariableDeclaration","scope":1143,"src":"1220:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1135,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"data","nameLocation":"1258:4:8","nodeType":"VariableDeclaration","scope":1143,"src":"1243:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1137,"name":"bytes","nodeType":"ElementaryTypeName","src":"1243:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1142:126:8"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1143,"src":"1287:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1140,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1287:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1286:8:8"},"scope":1162,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1161,"nodeType":"FunctionDefinition","src":"2300:208:8","nodes":[],"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"1301:994:8","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2309:22:8","parameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"operator","nameLocation":"2349:8:8","nodeType":"VariableDeclaration","scope":1161,"src":"2341:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1148,"mutability":"mutable","name":"from","nameLocation":"2375:4:8","nodeType":"VariableDeclaration","scope":1161,"src":"2367:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"2367:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"ids","nameLocation":"2408:3:8","nodeType":"VariableDeclaration","scope":1161,"src":"2389:22:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1149,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1150,"nodeType":"ArrayTypeName","src":"2389:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1154,"mutability":"mutable","name":"values","nameLocation":"2440:6:8","nodeType":"VariableDeclaration","scope":1161,"src":"2421:25:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"2421:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1153,"nodeType":"ArrayTypeName","src":"2421:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"data","nameLocation":"2471:4:8","nodeType":"VariableDeclaration","scope":1161,"src":"2456:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1155,"name":"bytes","nodeType":"ElementaryTypeName","src":"2456:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2331:150:8"},"returnParameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1161,"src":"2500:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1158,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2500:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2499:8:8"},"scope":1162,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":1126,"name":"IERC165Upgradeable","nameLocations":["260:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":1296,"src":"260:18:8"},"id":1127,"nodeType":"InheritanceSpecifier","src":"260:18:8"}],"canonicalName":"IERC1155ReceiverUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1125,"nodeType":"StructuredDocumentation","src":"179:39:8","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"linearizedBaseContracts":[1162,1296],"name":"IERC1155ReceiverUpgradeable","nameLocation":"229:27:8","scope":1163,"usedErrors":[]}],"license":"MIT"}},"src/interfaces/IERC1155Upgradeable.sol":{"id":9,"ast":{"absolutePath":"src/interfaces/IERC1155Upgradeable.sol","id":1285,"exportedSymbols":{"IERC1155Upgradeable":[1284],"IERC165Upgradeable":[1296]},"nodeType":"SourceUnit","src":"110:3972:9","nodes":[{"id":1164,"nodeType":"PragmaDirective","src":"110:23:9","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":1165,"nodeType":"ImportDirective","src":"135:34:9","nodes":[],"absolutePath":"src/interfaces/IERC165Upgradeable.sol","file":"./IERC165Upgradeable.sol","nameLocation":"-1:-1:-1","scope":1285,"sourceUnit":1297,"symbolAliases":[],"unitAlias":""},{"id":1284,"nodeType":"ContractDefinition","src":"337:3745:9","nodes":[{"id":1181,"nodeType":"EventDefinition","src":"521:116:9","nodes":[],"anonymous":false,"documentation":{"id":1169,"nodeType":"StructuredDocumentation","src":"395:121:9","text":" @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","name":"TransferSingle","nameLocation":"527:14:9","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"558:8:9","nodeType":"VariableDeclaration","scope":1181,"src":"542:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"542:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1173,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"584:4:9","nodeType":"VariableDeclaration","scope":1181,"src":"568:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1172,"name":"address","nodeType":"ElementaryTypeName","src":"568:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1175,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"606:2:9","nodeType":"VariableDeclaration","scope":1181,"src":"590:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"590:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1177,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"618:2:9","nodeType":"VariableDeclaration","scope":1181,"src":"610:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1176,"name":"uint256","nodeType":"ElementaryTypeName","src":"610:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1179,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"630:5:9","nodeType":"VariableDeclaration","scope":1181,"src":"622:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"622:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"541:95:9"}},{"id":1196,"nodeType":"EventDefinition","src":"792:167:9","nodes":[],"anonymous":false,"documentation":{"id":1182,"nodeType":"StructuredDocumentation","src":"643:144:9","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","name":"TransferBatch","nameLocation":"798:13:9","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"837:8:9","nodeType":"VariableDeclaration","scope":1196,"src":"821:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"821:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1186,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"871:4:9","nodeType":"VariableDeclaration","scope":1196,"src":"855:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"855:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1188,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"901:2:9","nodeType":"VariableDeclaration","scope":1196,"src":"885:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1191,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"923:3:9","nodeType":"VariableDeclaration","scope":1196,"src":"913:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"913:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1190,"nodeType":"ArrayTypeName","src":"913:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1194,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"946:6:9","nodeType":"VariableDeclaration","scope":1196,"src":"936:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1193,"nodeType":"ArrayTypeName","src":"936:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"811:147:9"}},{"id":1205,"nodeType":"EventDefinition","src":"1117:87:9","nodes":[],"anonymous":false,"documentation":{"id":1197,"nodeType":"StructuredDocumentation","src":"965:147:9","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","name":"ApprovalForAll","nameLocation":"1123:14:9","parameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1154:7:9","nodeType":"VariableDeclaration","scope":1205,"src":"1138:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1198,"name":"address","nodeType":"ElementaryTypeName","src":"1138:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1201,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1179:8:9","nodeType":"VariableDeclaration","scope":1205,"src":"1163:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1203,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1194:8:9","nodeType":"VariableDeclaration","scope":1205,"src":"1189:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1202,"name":"bool","nodeType":"ElementaryTypeName","src":"1189:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1137:66:9"}},{"id":1212,"nodeType":"EventDefinition","src":"1558:44:9","nodes":[],"anonymous":false,"documentation":{"id":1206,"nodeType":"StructuredDocumentation","src":"1210:343:9","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","name":"URI","nameLocation":"1564:3:9","parameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1575:5:9","nodeType":"VariableDeclaration","scope":1212,"src":"1568:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1207,"name":"string","nodeType":"ElementaryTypeName","src":"1568:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1210,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1598:2:9","nodeType":"VariableDeclaration","scope":1212,"src":"1582:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1209,"name":"uint256","nodeType":"ElementaryTypeName","src":"1582:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1567:34:9"}},{"id":1222,"nodeType":"FunctionDefinition","src":"1786:80:9","nodes":[],"documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"1608:173:9","text":" @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1795:9:9","parameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"account","nameLocation":"1813:7:9","nodeType":"VariableDeclaration","scope":1222,"src":"1805:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"1805:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"id","nameLocation":"1830:2:9","nodeType":"VariableDeclaration","scope":1222,"src":"1822:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"1822:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1804:29:9"},"returnParameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1222,"src":"1857:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"1857:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1856:9:9"},"scope":1284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1235,"nodeType":"FunctionDefinition","src":"2065:142:9","nodes":[],"documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"1872:188:9","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2074:14:9","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"accounts","nameLocation":"2108:8:9","nodeType":"VariableDeclaration","scope":1235,"src":"2089:27:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"2089:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1225,"nodeType":"ArrayTypeName","src":"2089:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"ids","nameLocation":"2137:3:9","nodeType":"VariableDeclaration","scope":1235,"src":"2118:22:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1227,"name":"uint256","nodeType":"ElementaryTypeName","src":"2118:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1228,"nodeType":"ArrayTypeName","src":"2118:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2088:53:9"},"returnParameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1235,"src":"2189:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1232,"nodeType":"ArrayTypeName","src":"2189:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2188:18:9"},"scope":1284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1243,"nodeType":"FunctionDefinition","src":"2466:69:9","nodes":[],"documentation":{"id":1236,"nodeType":"StructuredDocumentation","src":"2213:248:9","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."},"functionSelector":"a22cb465","implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2475:17:9","parameters":{"id":1241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1238,"mutability":"mutable","name":"operator","nameLocation":"2501:8:9","nodeType":"VariableDeclaration","scope":1243,"src":"2493:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"2493:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1240,"mutability":"mutable","name":"approved","nameLocation":"2516:8:9","nodeType":"VariableDeclaration","scope":1243,"src":"2511:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1239,"name":"bool","nodeType":"ElementaryTypeName","src":"2511:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2492:33:9"},"returnParameters":{"id":1242,"nodeType":"ParameterList","parameters":[],"src":"2534:0:9"},"scope":1284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1253,"nodeType":"FunctionDefinition","src":"2681:90:9","nodes":[],"documentation":{"id":1244,"nodeType":"StructuredDocumentation","src":"2541:135:9","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2690:16:9","parameters":{"id":1249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"account","nameLocation":"2715:7:9","nodeType":"VariableDeclaration","scope":1253,"src":"2707:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"2707:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1248,"mutability":"mutable","name":"operator","nameLocation":"2732:8:9","nodeType":"VariableDeclaration","scope":1253,"src":"2724:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"2724:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2706:35:9"},"returnParameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1253,"src":"2765:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1250,"name":"bool","nodeType":"ElementaryTypeName","src":"2765:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2764:6:9"},"scope":1284,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1267,"nodeType":"FunctionDefinition","src":"3338:156:9","nodes":[],"documentation":{"id":1254,"nodeType":"StructuredDocumentation","src":"2777:556:9","text":" @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3347:16:9","parameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"from","nameLocation":"3381:4:9","nodeType":"VariableDeclaration","scope":1267,"src":"3373:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"3373:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1258,"mutability":"mutable","name":"to","nameLocation":"3403:2:9","nodeType":"VariableDeclaration","scope":1267,"src":"3395:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1257,"name":"address","nodeType":"ElementaryTypeName","src":"3395:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"id","nameLocation":"3423:2:9","nodeType":"VariableDeclaration","scope":1267,"src":"3415:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"3415:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1262,"mutability":"mutable","name":"amount","nameLocation":"3443:6:9","nodeType":"VariableDeclaration","scope":1267,"src":"3435:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"3435:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1264,"mutability":"mutable","name":"data","nameLocation":"3474:4:9","nodeType":"VariableDeclaration","scope":1267,"src":"3459:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1263,"name":"bytes","nodeType":"ElementaryTypeName","src":"3459:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3363:121:9"},"returnParameters":{"id":1266,"nodeType":"ParameterList","parameters":[],"src":"3493:0:9"},"scope":1284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1283,"nodeType":"FunctionDefinition","src":"3895:185:9","nodes":[],"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"3500:390:9","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"3904:21:9","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"from","nameLocation":"3943:4:9","nodeType":"VariableDeclaration","scope":1283,"src":"3935:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"3935:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1272,"mutability":"mutable","name":"to","nameLocation":"3965:2:9","nodeType":"VariableDeclaration","scope":1283,"src":"3957:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"3957:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"ids","nameLocation":"3996:3:9","nodeType":"VariableDeclaration","scope":1283,"src":"3977:22:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"3977:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1274,"nodeType":"ArrayTypeName","src":"3977:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1278,"mutability":"mutable","name":"amounts","nameLocation":"4028:7:9","nodeType":"VariableDeclaration","scope":1283,"src":"4009:26:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"4009:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1277,"nodeType":"ArrayTypeName","src":"4009:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"data","nameLocation":"4060:4:9","nodeType":"VariableDeclaration","scope":1283,"src":"4045:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1279,"name":"bytes","nodeType":"ElementaryTypeName","src":"4045:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:145:9"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[],"src":"4079:0:9"},"scope":1284,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":1167,"name":"IERC165Upgradeable","nameLocations":["370:18:9"],"nodeType":"IdentifierPath","referencedDeclaration":1296,"src":"370:18:9"},"id":1168,"nodeType":"InheritanceSpecifier","src":"370:18:9"}],"canonicalName":"IERC1155Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1166,"nodeType":"StructuredDocumentation","src":"171:165:9","text":" @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"},"fullyImplemented":false,"linearizedBaseContracts":[1284,1296],"name":"IERC1155Upgradeable","nameLocation":"347:19:9","scope":1285,"usedErrors":[]}],"license":"MIT"}},"src/interfaces/IERC165Upgradeable.sol":{"id":10,"ast":{"absolutePath":"src/interfaces/IERC165Upgradeable.sol","id":1297,"exportedSymbols":{"IERC165Upgradeable":[1296]},"nodeType":"SourceUnit","src":"100:763:10","nodes":[{"id":1286,"nodeType":"PragmaDirective","src":"100:23:10","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":1296,"nodeType":"ContractDefinition","src":"405:458:10","nodes":[{"id":1295,"nodeType":"FunctionDefinition","src":"785:76:10","nodes":[],"documentation":{"id":1288,"nodeType":"StructuredDocumentation","src":"440:340:10","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"794:17:10","parameters":{"id":1291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"interfaceId","nameLocation":"819:11:10","nodeType":"VariableDeclaration","scope":1295,"src":"812:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1289,"name":"bytes4","nodeType":"ElementaryTypeName","src":"812:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"811:20:10"},"returnParameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1295,"src":"855:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1292,"name":"bool","nodeType":"ElementaryTypeName","src":"855:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"854:6:10"},"scope":1296,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IERC165Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1287,"nodeType":"StructuredDocumentation","src":"125:279:10","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"linearizedBaseContracts":[1296],"name":"IERC165Upgradeable","nameLocation":"415:18:10","scope":1297,"usedErrors":[]}],"license":"MIT"}},"src/interfaces/IERC20.sol":{"id":11,"ast":{"absolutePath":"src/interfaces/IERC20.sol","id":1375,"exportedSymbols":{"IERC20":[1374]},"nodeType":"SourceUnit","src":"106:2630:11","nodes":[{"id":1298,"nodeType":"PragmaDirective","src":"106:23:11","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":1374,"nodeType":"ContractDefinition","src":"202:2534:11","nodes":[{"id":1308,"nodeType":"EventDefinition","src":"388:72:11","nodes":[],"anonymous":false,"documentation":{"id":1300,"nodeType":"StructuredDocumentation","src":"225:158:11","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","name":"Transfer","nameLocation":"394:8:11","parameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:11","nodeType":"VariableDeclaration","scope":1308,"src":"403:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1301,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1304,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:11","nodeType":"VariableDeclaration","scope":1308,"src":"425:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1303,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1306,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:11","nodeType":"VariableDeclaration","scope":1308,"src":"445:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:11"}},{"id":1317,"nodeType":"EventDefinition","src":"619:78:11","nodes":[],"anonymous":false,"documentation":{"id":1309,"nodeType":"StructuredDocumentation","src":"466:148:11","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","name":"Approval","nameLocation":"625:8:11","parameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:11","nodeType":"VariableDeclaration","scope":1317,"src":"634:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1310,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1313,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:11","nodeType":"VariableDeclaration","scope":1317,"src":"657:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1315,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:11","nodeType":"VariableDeclaration","scope":1317,"src":"682:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1314,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:11"}},{"id":1323,"nodeType":"FunctionDefinition","src":"774:55:11","nodes":[],"documentation":{"id":1318,"nodeType":"StructuredDocumentation","src":"703:66:11","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:11","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[],"src":"794:2:11"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1323,"src":"820:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:11"},"scope":1374,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1331,"nodeType":"FunctionDefinition","src":"912:68:11","nodes":[],"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"835:72:11","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:11","parameters":{"id":1327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"account","nameLocation":"939:7:11","nodeType":"VariableDeclaration","scope":1331,"src":"931:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:11"},"returnParameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1331,"src":"971:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1328,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:11"},"scope":1374,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1341,"nodeType":"FunctionDefinition","src":"1193:70:11","nodes":[],"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"986:202:11","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:11","parameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"to","nameLocation":"1219:2:11","nodeType":"VariableDeclaration","scope":1341,"src":"1211:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"amount","nameLocation":"1231:6:11","nodeType":"VariableDeclaration","scope":1341,"src":"1223:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:11"},"returnParameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1341,"src":"1257:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1338,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:11"},"scope":1374,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1351,"nodeType":"FunctionDefinition","src":"1538:83:11","nodes":[],"documentation":{"id":1342,"nodeType":"StructuredDocumentation","src":"1269:264:11","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:11","parameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1344,"mutability":"mutable","name":"owner","nameLocation":"1565:5:11","nodeType":"VariableDeclaration","scope":1351,"src":"1557:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1346,"mutability":"mutable","name":"spender","nameLocation":"1580:7:11","nodeType":"VariableDeclaration","scope":1351,"src":"1572:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:11"},"returnParameters":{"id":1350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1351,"src":"1612:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:11"},"scope":1374,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1361,"nodeType":"FunctionDefinition","src":"2274:74:11","nodes":[],"documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"1627:642:11","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:11","parameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"spender","nameLocation":"2299:7:11","nodeType":"VariableDeclaration","scope":1361,"src":"2291:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1353,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1356,"mutability":"mutable","name":"amount","nameLocation":"2316:6:11","nodeType":"VariableDeclaration","scope":1361,"src":"2308:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1355,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:11"},"returnParameters":{"id":1360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1361,"src":"2342:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1358,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:11"},"scope":1374,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1373,"nodeType":"FunctionDefinition","src":"2646:88:11","nodes":[],"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"2354:287:11","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:11","parameters":{"id":1369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"from","nameLocation":"2676:4:11","nodeType":"VariableDeclaration","scope":1373,"src":"2668:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"to","nameLocation":"2690:2:11","nodeType":"VariableDeclaration","scope":1373,"src":"2682:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"amount","nameLocation":"2702:6:11","nodeType":"VariableDeclaration","scope":1373,"src":"2694:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1367,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:11"},"returnParameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1373,"src":"2728:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1370,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:11"},"scope":1374,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1299,"nodeType":"StructuredDocumentation","src":"131:70:11","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"linearizedBaseContracts":[1374],"name":"IERC20","nameLocation":"212:6:11","scope":1375,"usedErrors":[]}],"license":"MIT"}},"src/interfaces/IERC20Upgradeable.sol":{"id":12,"ast":{"absolutePath":"src/interfaces/IERC20Upgradeable.sol","id":1453,"exportedSymbols":{"IERC20Upgradeable":[1452]},"nodeType":"SourceUnit","src":"106:2671:12","nodes":[{"id":1376,"nodeType":"PragmaDirective","src":"106:23:12","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":1452,"nodeType":"ContractDefinition","src":"202:2575:12","nodes":[{"id":1386,"nodeType":"EventDefinition","src":"399:72:12","nodes":[],"anonymous":false,"documentation":{"id":1378,"nodeType":"StructuredDocumentation","src":"236:158:12","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","name":"Transfer","nameLocation":"405:8:12","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1380,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"430:4:12","nodeType":"VariableDeclaration","scope":1386,"src":"414:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1382,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"452:2:12","nodeType":"VariableDeclaration","scope":1386,"src":"436:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1384,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"464:5:12","nodeType":"VariableDeclaration","scope":1386,"src":"456:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"413:57:12"}},{"id":1395,"nodeType":"EventDefinition","src":"630:78:12","nodes":[],"anonymous":false,"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"477:148:12","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","name":"Approval","nameLocation":"636:8:12","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"661:5:12","nodeType":"VariableDeclaration","scope":1395,"src":"645:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1388,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1391,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"684:7:12","nodeType":"VariableDeclaration","scope":1395,"src":"668:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1390,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1393,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"701:5:12","nodeType":"VariableDeclaration","scope":1395,"src":"693:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"644:63:12"}},{"id":1401,"nodeType":"FunctionDefinition","src":"785:55:12","nodes":[],"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"714:66:12","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"794:11:12","parameters":{"id":1397,"nodeType":"ParameterList","parameters":[],"src":"805:2:12"},"returnParameters":{"id":1400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1401,"src":"831:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:9:12"},"scope":1452,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1409,"nodeType":"FunctionDefinition","src":"923:68:12","nodes":[],"documentation":{"id":1402,"nodeType":"StructuredDocumentation","src":"846:72:12","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"932:9:12","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1404,"mutability":"mutable","name":"account","nameLocation":"950:7:12","nodeType":"VariableDeclaration","scope":1409,"src":"942:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1403,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"941:17:12"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1409,"src":"982:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1406,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:9:12"},"scope":1452,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1419,"nodeType":"FunctionDefinition","src":"1204:70:12","nodes":[],"documentation":{"id":1410,"nodeType":"StructuredDocumentation","src":"997:202:12","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:12","parameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"to","nameLocation":"1230:2:12","nodeType":"VariableDeclaration","scope":1419,"src":"1222:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1414,"mutability":"mutable","name":"amount","nameLocation":"1242:6:12","nodeType":"VariableDeclaration","scope":1419,"src":"1234:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1413,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:28:12"},"returnParameters":{"id":1418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1419,"src":"1268:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1416,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:12"},"scope":1452,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1429,"nodeType":"FunctionDefinition","src":"1549:83:12","nodes":[],"documentation":{"id":1420,"nodeType":"StructuredDocumentation","src":"1280:264:12","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:12","parameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"owner","nameLocation":"1576:5:12","nodeType":"VariableDeclaration","scope":1429,"src":"1568:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1424,"mutability":"mutable","name":"spender","nameLocation":"1591:7:12","nodeType":"VariableDeclaration","scope":1429,"src":"1583:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:12"},"returnParameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1429,"src":"1623:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1426,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:12"},"scope":1452,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1439,"nodeType":"FunctionDefinition","src":"2285:74:12","nodes":[],"documentation":{"id":1430,"nodeType":"StructuredDocumentation","src":"1638:642:12","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2294:7:12","parameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"spender","nameLocation":"2310:7:12","nodeType":"VariableDeclaration","scope":1439,"src":"2302:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1434,"mutability":"mutable","name":"amount","nameLocation":"2327:6:12","nodeType":"VariableDeclaration","scope":1439,"src":"2319:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:33:12"},"returnParameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1439,"src":"2353:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1436,"name":"bool","nodeType":"ElementaryTypeName","src":"2353:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2352:6:12"},"scope":1452,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1451,"nodeType":"FunctionDefinition","src":"2657:118:12","nodes":[],"documentation":{"id":1440,"nodeType":"StructuredDocumentation","src":"2365:287:12","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2666:12:12","parameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"mutability":"mutable","name":"from","nameLocation":"2696:4:12","nodeType":"VariableDeclaration","scope":1451,"src":"2688:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1441,"name":"address","nodeType":"ElementaryTypeName","src":"2688:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1444,"mutability":"mutable","name":"to","nameLocation":"2718:2:12","nodeType":"VariableDeclaration","scope":1451,"src":"2710:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1443,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"amount","nameLocation":"2738:6:12","nodeType":"VariableDeclaration","scope":1451,"src":"2730:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1445,"name":"uint256","nodeType":"ElementaryTypeName","src":"2730:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:72:12"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1451,"src":"2769:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1448,"name":"bool","nodeType":"ElementaryTypeName","src":"2769:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2768:6:12"},"scope":1452,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IERC20Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1377,"nodeType":"StructuredDocumentation","src":"131:70:12","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"linearizedBaseContracts":[1452],"name":"IERC20Upgradeable","nameLocation":"212:17:12","scope":1453,"usedErrors":[]}],"license":"MIT"}},"src/interfaces/IGuardManager.sol":{"id":13,"ast":{"absolutePath":"src/interfaces/IGuardManager.sol","id":1572,"exportedSymbols":{"DEPOSIT_FEE_MAX":[590],"DepositIdOverflow":[2073],"DepositMetadata":[2107],"ECOSYSTEM_FEE_MAX":[598],"FULL_PERCENT":[565],"FULL_PERCENT_INT":[569],"GuardDefinition":[1503],"GuardError":[1462],"GuardFailed":[1467],"GuardParamType":[1487],"GuardsAlreadyInitialized":[1458],"GuardsNotInitialized":[1460],"IERC1155MetadataURIUpgradeable":[1121],"IERC1155Upgradeable":[1284],"IERC165Upgradeable":[1296],"IERC20Upgradeable":[1452],"IGuardManager":[1571],"INITIAL_LOCKED_SHARES":[668],"INITIAL_LOCKED_SHARES_ADDRESS":[675],"INITIAL_SHARE_MULTIPLIER":[662],"ISmartVault":[2258],"IncompleteGuardDefinition":[1477],"InvalidDepositNftId":[2081],"InvalidGuardParamType":[1471],"InvalidNftBalance":[2091],"InvalidNftTransferAmount":[2096],"InvalidWithdrawalNftId":[2086],"MANAGEMENT_FEE_MAX":[586],"MAXIMAL_DEPOSIT_ID":[636],"MAXIMAL_WITHDRAWAL_ID":[644],"MAX_ACTION_COUNT":[683],"MAX_DHW_BASE_YIELD_LIMIT":[658],"MAX_GUARD_COUNT":[679],"MAX_RISK_SCORE":[606],"MAX_RISK_TOLERANCE":[614],"MIN_RISK_SCORE":[610],"MIN_RISK_TOLERANCE":[619],"NFT_MINTED_SHARES":[650],"NULL_ASSET_GROUP_ID":[687],"RequestContext":[1519],"RequestType":[2912],"SECONDS_IN_YEAR":[557],"SECONDS_IN_YEAR_INT":[561],"STATIC_RISK_PROVIDER":[626],"STATIC_RISK_SCORE":[630],"STRATEGY_COUNT_CAP":[654],"SV_PERFORMANCE_FEE_MAX":[594],"SenderEqualsRecipient":[2099],"SmartVaultFees":[2119],"TREASURY_FEE_MAX":[602],"TooManyGuards":[1474],"WithdrawalIdOverflow":[2076],"WithdrawalMetadata":[2112],"YIELD_FULL_PERCENT":[582],"YIELD_FULL_PERCENT_INT":[575]},"nodeType":"SourceUnit","src":"37:5327:13","nodes":[{"id":1454,"nodeType":"PragmaDirective","src":"37:23:13","nodes":[],"literals":["solidity","0.8",".17"]},{"id":1455,"nodeType":"ImportDirective","src":"62:27:13","nodes":[],"absolutePath":"src/interfaces/ISmartVault.sol","file":"./ISmartVault.sol","nameLocation":"-1:-1:-1","scope":1572,"sourceUnit":2259,"symbolAliases":[],"unitAlias":""},{"id":1456,"nodeType":"ImportDirective","src":"90:27:13","nodes":[],"absolutePath":"src/interfaces/RequestType.sol","file":"./RequestType.sol","nameLocation":"-1:-1:-1","scope":1572,"sourceUnit":2913,"symbolAliases":[],"unitAlias":""},{"id":1458,"nodeType":"ErrorDefinition","src":"119:33:13","nodes":[],"errorSelector":"cf0b7d4e","name":"GuardsAlreadyInitialized","nameLocation":"125:24:13","parameters":{"id":1457,"nodeType":"ParameterList","parameters":[],"src":"149:2:13"}},{"id":1460,"nodeType":"ErrorDefinition","src":"153:29:13","nodes":[],"errorSelector":"36d24181","name":"GuardsNotInitialized","nameLocation":"159:20:13","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[],"src":"179:2:13"}},{"id":1462,"nodeType":"ErrorDefinition","src":"183:19:13","nodes":[],"errorSelector":"b6a383fd","name":"GuardError","nameLocation":"189:10:13","parameters":{"id":1461,"nodeType":"ParameterList","parameters":[],"src":"199:2:13"}},{"id":1467,"nodeType":"ErrorDefinition","src":"311:36:13","nodes":[],"documentation":{"id":1463,"nodeType":"StructuredDocumentation","src":"204:106:13","text":" @notice Used when a guard fails.\n @param guardNum Sequential number of the guard that failed."},"errorSelector":"d246c8d7","name":"GuardFailed","nameLocation":"317:11:13","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"guardNum","nameLocation":"337:8:13","nodeType":"VariableDeclaration","scope":1467,"src":"329:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"328:18:13"}},{"id":1471,"nodeType":"ErrorDefinition","src":"349:47:13","nodes":[],"errorSelector":"fab34f52","name":"InvalidGuardParamType","nameLocation":"355:21:13","parameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"paramType","nameLocation":"385:9:13","nodeType":"VariableDeclaration","scope":1471,"src":"377:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"377:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"376:19:13"}},{"id":1474,"nodeType":"ErrorDefinition","src":"484:22:13","nodes":[],"documentation":{"id":1472,"nodeType":"StructuredDocumentation","src":"398:85:13","text":" @notice Too many guard definitions have been passed when creating a vault."},"errorSelector":"cd084cff","name":"TooManyGuards","nameLocation":"490:13:13","parameters":{"id":1473,"nodeType":"ParameterList","parameters":[],"src":"503:2:13"}},{"id":1477,"nodeType":"ErrorDefinition","src":"582:34:13","nodes":[],"documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"508:73:13","text":" @notice The guard definition does not have all required inputs"},"errorSelector":"f63ee305","name":"IncompleteGuardDefinition","nameLocation":"588:25:13","parameters":{"id":1476,"nodeType":"ParameterList","parameters":[],"src":"613:2:13"}},{"id":1487,"nodeType":"EnumDefinition","src":"1241:160:13","nodes":[],"canonicalName":"GuardParamType","members":[{"id":1478,"name":"VaultAddress","nameLocation":"1267:12:13","nodeType":"EnumValue","src":"1267:12:13"},{"id":1479,"name":"Executor","nameLocation":"1285:8:13","nodeType":"EnumValue","src":"1285:8:13"},{"id":1480,"name":"Receiver","nameLocation":"1299:8:13","nodeType":"EnumValue","src":"1299:8:13"},{"id":1481,"name":"Owner","nameLocation":"1313:5:13","nodeType":"EnumValue","src":"1313:5:13"},{"id":1482,"name":"Assets","nameLocation":"1324:6:13","nodeType":"EnumValue","src":"1324:6:13"},{"id":1483,"name":"Tokens","nameLocation":"1336:6:13","nodeType":"EnumValue","src":"1336:6:13"},{"id":1484,"name":"AssetGroup","nameLocation":"1348:10:13","nodeType":"EnumValue","src":"1348:10:13"},{"id":1485,"name":"CustomValue","nameLocation":"1364:11:13","nodeType":"EnumValue","src":"1364:11:13"},{"id":1486,"name":"DynamicCustomValue","nameLocation":"1381:18:13","nodeType":"EnumValue","src":"1381:18:13"}],"name":"GuardParamType","nameLocation":"1246:14:13"},{"id":1503,"nodeType":"StructDefinition","src":"2463:201:13","nodes":[],"canonicalName":"GuardDefinition","members":[{"constant":false,"id":1489,"mutability":"mutable","name":"methodSignature","nameLocation":"2499:15:13","nodeType":"VariableDeclaration","scope":1503,"src":"2492:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1488,"name":"string","nodeType":"ElementaryTypeName","src":"2492:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1491,"mutability":"mutable","name":"contractAddress","nameLocation":"2528:15:13","nodeType":"VariableDeclaration","scope":1503,"src":"2520:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"2520:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1493,"mutability":"mutable","name":"operator","nameLocation":"2556:8:13","nodeType":"VariableDeclaration","scope":1503,"src":"2549:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"typeName":{"id":1492,"name":"bytes2","nodeType":"ElementaryTypeName","src":"2549:6:13","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"expectedValue","nameLocation":"2578:13:13","nodeType":"VariableDeclaration","scope":1503,"src":"2570:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1499,"mutability":"mutable","name":"methodParamTypes","nameLocation":"2614:16:13","nodeType":"VariableDeclaration","scope":1503,"src":"2597:33:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_GuardParamType_$1487_$dyn_storage_ptr","typeString":"enum GuardParamType[]"},"typeName":{"baseType":{"id":1497,"nodeType":"UserDefinedTypeName","pathNode":{"id":1496,"name":"GuardParamType","nameLocations":["2597:14:13"],"nodeType":"IdentifierPath","referencedDeclaration":1487,"src":"2597:14:13"},"referencedDeclaration":1487,"src":"2597:14:13","typeDescriptions":{"typeIdentifier":"t_enum$_GuardParamType_$1487","typeString":"enum GuardParamType"}},"id":1498,"nodeType":"ArrayTypeName","src":"2597:16:13","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_GuardParamType_$1487_$dyn_storage_ptr","typeString":"enum GuardParamType[]"}},"visibility":"internal"},{"constant":false,"id":1502,"mutability":"mutable","name":"methodParamValues","nameLocation":"2644:17:13","nodeType":"VariableDeclaration","scope":1503,"src":"2636:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1500,"name":"bytes","nodeType":"ElementaryTypeName","src":"2636:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1501,"nodeType":"ArrayTypeName","src":"2636:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"name":"GuardDefinition","nameLocation":"2470:15:13","scope":1572,"visibility":"public"},{"id":1519,"nodeType":"StructDefinition","src":"3137:161:13","nodes":[],"canonicalName":"RequestContext","members":[{"constant":false,"id":1505,"mutability":"mutable","name":"receiver","nameLocation":"3173:8:13","nodeType":"VariableDeclaration","scope":1519,"src":"3165:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1504,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1507,"mutability":"mutable","name":"executor","nameLocation":"3195:8:13","nodeType":"VariableDeclaration","scope":1519,"src":"3187:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"3187:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"owner","nameLocation":"3217:5:13","nodeType":"VariableDeclaration","scope":1519,"src":"3209:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1508,"name":"address","nodeType":"ElementaryTypeName","src":"3209:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1512,"mutability":"mutable","name":"requestType","nameLocation":"3240:11:13","nodeType":"VariableDeclaration","scope":1519,"src":"3228:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"},"typeName":{"id":1511,"nodeType":"UserDefinedTypeName","pathNode":{"id":1510,"name":"RequestType","nameLocations":["3228:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2912,"src":"3228:11:13"},"referencedDeclaration":2912,"src":"3228:11:13","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"assets","nameLocation":"3267:6:13","nodeType":"VariableDeclaration","scope":1519,"src":"3257:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1513,"name":"uint256","nodeType":"ElementaryTypeName","src":"3257:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1514,"nodeType":"ArrayTypeName","src":"3257:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1518,"mutability":"mutable","name":"tokens","nameLocation":"3289:6:13","nodeType":"VariableDeclaration","scope":1519,"src":"3279:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"3279:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1517,"nodeType":"ArrayTypeName","src":"3279:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"RequestContext","nameLocation":"3144:14:13","scope":1572,"visibility":"public"},{"id":1571,"nodeType":"ContractDefinition","src":"3300:2064:13","nodes":[{"id":1528,"nodeType":"FunctionDefinition","src":"3957:86:13","nodes":[],"documentation":{"id":1520,"nodeType":"StructuredDocumentation","src":"3330:622:13","text":" @notice Runs guards for a smart vault.\n @dev Reverts if any guard fails.\n The context.methodParamValues array should only include fixed/static values.\n Parameters that are resolved at runtime should be omitted. All values should be encoded using \"abi.encode\" before\n passing them to the GuardManager contract. We assume that all static types are encoded to 32 bytes. Fixed-size\n static arrays and structs with only static type members are not supported.\n @param smartVault Smart vault for which to run the guards.\n @param context Context for running the guards."},"functionSelector":"2c8dfb26","implemented":false,"kind":"function","modifiers":[],"name":"runGuards","nameLocation":"3966:9:13","parameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"smartVault","nameLocation":"3984:10:13","nodeType":"VariableDeclaration","scope":1528,"src":"3976:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1521,"name":"address","nodeType":"ElementaryTypeName","src":"3976:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1525,"mutability":"mutable","name":"context","nameLocation":"4020:7:13","nodeType":"VariableDeclaration","scope":1528,"src":"3996:31:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RequestContext_$1519_calldata_ptr","typeString":"struct RequestContext"},"typeName":{"id":1524,"nodeType":"UserDefinedTypeName","pathNode":{"id":1523,"name":"RequestContext","nameLocations":["3996:14:13"],"nodeType":"IdentifierPath","referencedDeclaration":1519,"src":"3996:14:13"},"referencedDeclaration":1519,"src":"3996:14:13","typeDescriptions":{"typeIdentifier":"t_struct$_RequestContext_$1519_storage_ptr","typeString":"struct RequestContext"}},"visibility":"internal"}],"src":"3975:53:13"},"returnParameters":{"id":1527,"nodeType":"ParameterList","parameters":[],"src":"4042:0:13"},"scope":1571,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1541,"nodeType":"FunctionDefinition","src":"4319:145:13","nodes":[],"documentation":{"id":1529,"nodeType":"StructuredDocumentation","src":"4049:265:13","text":" @notice Gets guards for smart vault and request type.\n @param smartVault Smart vault for which to get guards.\n @param requestType Request type for which to get guards.\n @return guards Guards for the smart vault and request type."},"functionSelector":"519fe8f6","implemented":false,"kind":"function","modifiers":[],"name":"readGuards","nameLocation":"4328:10:13","parameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"smartVault","nameLocation":"4347:10:13","nodeType":"VariableDeclaration","scope":1541,"src":"4339:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1530,"name":"address","nodeType":"ElementaryTypeName","src":"4339:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1534,"mutability":"mutable","name":"requestType","nameLocation":"4371:11:13","nodeType":"VariableDeclaration","scope":1541,"src":"4359:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"},"typeName":{"id":1533,"nodeType":"UserDefinedTypeName","pathNode":{"id":1532,"name":"RequestType","nameLocations":["4359:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2912,"src":"4359:11:13"},"referencedDeclaration":2912,"src":"4359:11:13","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}},"visibility":"internal"}],"src":"4338:45:13"},"returnParameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"guards","nameLocation":"4456:6:13","nodeType":"VariableDeclaration","scope":1541,"src":"4431:31:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GuardDefinition_$1503_memory_ptr_$dyn_memory_ptr","typeString":"struct GuardDefinition[]"},"typeName":{"baseType":{"id":1537,"nodeType":"UserDefinedTypeName","pathNode":{"id":1536,"name":"GuardDefinition","nameLocations":["4431:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":1503,"src":"4431:15:13"},"referencedDeclaration":1503,"src":"4431:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_GuardDefinition_$1503_storage_ptr","typeString":"struct GuardDefinition"}},"id":1538,"nodeType":"ArrayTypeName","src":"4431:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GuardDefinition_$1503_storage_$dyn_storage_ptr","typeString":"struct GuardDefinition[]"}},"visibility":"internal"}],"src":"4430:33:13"},"scope":1571,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1556,"nodeType":"FunctionDefinition","src":"4895:130:13","nodes":[],"documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"4470:420:13","text":" @notice Sets guards for the smart vault.\n @dev\n @dev Requirements:\n - caller must have role ROLE_SMART_VAULT_INTEGRATOR\n - guards should not have been already set for the smart vault\n @param smartVault Smart vault for which to set the guards.\n @param guards Guards to set. Grouped by the request types.\n @param requestTypes Request types for groups of guards."},"functionSelector":"39930590","implemented":false,"kind":"function","modifiers":[],"name":"setGuards","nameLocation":"4904:9:13","parameters":{"id":1554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"smartVault","nameLocation":"4922:10:13","nodeType":"VariableDeclaration","scope":1556,"src":"4914:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1543,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"guards","nameLocation":"4963:6:13","nodeType":"VariableDeclaration","scope":1556,"src":"4934:35:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_struct$_GuardDefinition_$1503_calldata_ptr_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"struct GuardDefinition[][]"},"typeName":{"baseType":{"baseType":{"id":1546,"nodeType":"UserDefinedTypeName","pathNode":{"id":1545,"name":"GuardDefinition","nameLocations":["4934:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":1503,"src":"4934:15:13"},"referencedDeclaration":1503,"src":"4934:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_GuardDefinition_$1503_storage_ptr","typeString":"struct GuardDefinition"}},"id":1547,"nodeType":"ArrayTypeName","src":"4934:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GuardDefinition_$1503_storage_$dyn_storage_ptr","typeString":"struct GuardDefinition[]"}},"id":1548,"nodeType":"ArrayTypeName","src":"4934:19:13","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_struct$_GuardDefinition_$1503_storage_$dyn_storage_$dyn_storage_ptr","typeString":"struct GuardDefinition[][]"}},"visibility":"internal"},{"constant":false,"id":1553,"mutability":"mutable","name":"requestTypes","nameLocation":"4994:12:13","nodeType":"VariableDeclaration","scope":1556,"src":"4971:35:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_RequestType_$2912_$dyn_calldata_ptr","typeString":"enum RequestType[]"},"typeName":{"baseType":{"id":1551,"nodeType":"UserDefinedTypeName","pathNode":{"id":1550,"name":"RequestType","nameLocations":["4971:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2912,"src":"4971:11:13"},"referencedDeclaration":2912,"src":"4971:11:13","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}},"id":1552,"nodeType":"ArrayTypeName","src":"4971:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_RequestType_$2912_$dyn_storage_ptr","typeString":"enum RequestType[]"}},"visibility":"internal"}],"src":"4913:94:13"},"returnParameters":{"id":1555,"nodeType":"ParameterList","parameters":[],"src":"5024:0:13"},"scope":1571,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1570,"nodeType":"EventDefinition","src":"5254:108:13","nodes":[],"anonymous":false,"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"5031:218:13","text":" @notice Emitted when guards are set for a smart vault.\n @param smartVault Smart vault for which guards were set.\n @param guards Guard definitions\n @param requestTypes Guard triggers"},"eventSelector":"b9f47a76b7534856ef0c4c98da9b5c95949f67ee9394a455848de9e081c42ee4","name":"GuardsInitialized","nameLocation":"5260:17:13","parameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"indexed":true,"mutability":"mutable","name":"smartVault","nameLocation":"5294:10:13","nodeType":"VariableDeclaration","scope":1570,"src":"5278:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1558,"name":"address","nodeType":"ElementaryTypeName","src":"5278:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1564,"indexed":false,"mutability":"mutable","name":"guards","nameLocation":"5326:6:13","nodeType":"VariableDeclaration","scope":1570,"src":"5306:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_struct$_GuardDefinition_$1503_memory_ptr_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"struct GuardDefinition[][]"},"typeName":{"baseType":{"baseType":{"id":1561,"nodeType":"UserDefinedTypeName","pathNode":{"id":1560,"name":"GuardDefinition","nameLocations":["5306:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":1503,"src":"5306:15:13"},"referencedDeclaration":1503,"src":"5306:15:13","typeDescriptions":{"typeIdentifier":"t_struct$_GuardDefinition_$1503_storage_ptr","typeString":"struct GuardDefinition"}},"id":1562,"nodeType":"ArrayTypeName","src":"5306:17:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GuardDefinition_$1503_storage_$dyn_storage_ptr","typeString":"struct GuardDefinition[]"}},"id":1563,"nodeType":"ArrayTypeName","src":"5306:19:13","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_struct$_GuardDefinition_$1503_storage_$dyn_storage_$dyn_storage_ptr","typeString":"struct GuardDefinition[][]"}},"visibility":"internal"},{"constant":false,"id":1568,"indexed":false,"mutability":"mutable","name":"requestTypes","nameLocation":"5348:12:13","nodeType":"VariableDeclaration","scope":1570,"src":"5334:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_RequestType_$2912_$dyn_memory_ptr","typeString":"enum RequestType[]"},"typeName":{"baseType":{"id":1566,"nodeType":"UserDefinedTypeName","pathNode":{"id":1565,"name":"RequestType","nameLocations":["5334:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2912,"src":"5334:11:13"},"referencedDeclaration":2912,"src":"5334:11:13","typeDescriptions":{"typeIdentifier":"t_enum$_RequestType_$2912","typeString":"enum RequestType"}},"id":1567,"nodeType":"ArrayTypeName","src":"5334:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_enum$_RequestType_$2912_$dyn_storage_ptr","typeString":"enum RequestType[]"}},"visibility":"internal"}],"src":"5277:84:13"}}],"abstract":false,"baseContracts":[],"canonicalName":"IGuardManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[1571],"name":"IGuardManager","nameLocation":"3310:13:13","scope":1572,"usedErrors":[]}],"license":"BUSL-1.1"}},"src/interfaces/IMetaVault.sol":{"id":14,"ast":{"absolutePath":"src/interfaces/IMetaVault.sol","id":2028,"exportedSymbols":{"IDAI":[812],"IERC1155ReceiverUpgradeable":[1162],"IERC165Upgradeable":[1296],"IERC20Upgradeable":[1452],"IMetaVault":[2027]},"nodeType":"SourceUnit","src":"37:10128:14","nodes":[{"id":1573,"nodeType":"PragmaDirective","src":"37:23:14","nodes":[],"literals":["solidity","0.8",".17"]},{"id":1574,"nodeType":"ImportDirective","src":"62:33:14","nodes":[],"absolutePath":"src/interfaces/IERC20Upgradeable.sol","file":"./IERC20Upgradeable.sol","nameLocation":"-1:-1:-1","scope":2028,"sourceUnit":1453,"symbolAliases":[],"unitAlias":""},{"id":1575,"nodeType":"ImportDirective","src":"96:43:14","nodes":[],"absolutePath":"src/interfaces/IERC1155ReceiverUpgradeable.sol","file":"./IERC1155ReceiverUpgradeable.sol","nameLocation":"-1:-1:-1","scope":2028,"sourceUnit":1163,"symbolAliases":[],"unitAlias":""},{"id":1576,"nodeType":"ImportDirective","src":"141:20:14","nodes":[],"absolutePath":"src/interfaces/IDAI.sol","file":"./IDAI.sol","nameLocation":"-1:-1:-1","scope":2028,"sourceUnit":813,"symbolAliases":[],"unitAlias":""},{"id":2027,"nodeType":"ContractDefinition","src":"163:10002:14","nodes":[{"id":1583,"nodeType":"ErrorDefinition","src":"364:23:14","nodes":[],"documentation":{"id":1581,"nodeType":"StructuredDocumentation","src":"309:50:14","text":" @dev There are no MVTs to claim"},"errorSelector":"969bf728","name":"NothingToClaim","nameLocation":"370:14:14","parameters":{"id":1582,"nodeType":"ParameterList","parameters":[],"src":"384:2:14"}},{"id":1588,"nodeType":"ErrorDefinition","src":"458:34:14","nodes":[],"documentation":{"id":1584,"nodeType":"StructuredDocumentation","src":"392:61:14","text":" @dev There are no SVTs to claim for nft id"},"errorSelector":"047ddeb0","name":"NoDepositNft","nameLocation":"464:12:14","parameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"nftId","nameLocation":"485:5:14","nodeType":"VariableDeclaration","scope":1588,"src":"477:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"477:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"476:15:14"}},{"id":1591,"nodeType":"ErrorDefinition","src":"554:26:14","nodes":[],"documentation":{"id":1589,"nodeType":"StructuredDocumentation","src":"497:52:14","text":" @dev User has nothing to withdraw"},"errorSelector":"d0d04f60","name":"NothingToWithdraw","nameLocation":"560:17:14","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[],"src":"577:2:14"}},{"id":1596,"nodeType":"ErrorDefinition","src":"642:38:14","nodes":[],"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"585:52:14","text":" @dev There are no withdrawal nfts"},"errorSelector":"cf252328","name":"NothingToFulfill","nameLocation":"648:16:14","parameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"nftId","nameLocation":"673:5:14","nodeType":"VariableDeclaration","scope":1596,"src":"665:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"665:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"664:15:14"}},{"id":1599,"nodeType":"ErrorDefinition","src":"756:24:14","nodes":[],"documentation":{"id":1597,"nodeType":"StructuredDocumentation","src":"685:66:14","text":" @dev Total allocation does not sum up to 100 bp"},"errorSelector":"d2b81256","name":"WrongAllocation","nameLocation":"762:15:14","parameters":{"id":1598,"nodeType":"ParameterList","parameters":[],"src":"777:2:14"}},{"id":1602,"nodeType":"ErrorDefinition","src":"843:31:14","nodes":[],"documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"785:53:14","text":" @dev Length of arrays is not equal"},"errorSelector":"970ff492","name":"ArgumentLengthMismatch","nameLocation":"849:22:14","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[],"src":"871:2:14"}},{"id":1605,"nodeType":"ErrorDefinition","src":"946:28:14","nodes":[],"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"879:62:14","text":" @dev Maximum smart vault amount is exceeded"},"errorSelector":"85aef3b1","name":"MaxSmartVaultAmount","nameLocation":"952:19:14","parameters":{"id":1604,"nodeType":"ParameterList","parameters":[],"src":"971:2:14"}},{"id":1608,"nodeType":"ErrorDefinition","src":"1067:20:14","nodes":[],"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"979:83:14","text":" @dev Flush and reallocation are blocked if there is pending sync"},"errorSelector":"07c4fbc1","name":"PendingSync","nameLocation":"1073:11:14","parameters":{"id":1607,"nodeType":"ParameterList","parameters":[],"src":"1084:2:14"}},{"id":1613,"nodeType":"ErrorDefinition","src":"1144:30:14","nodes":[],"documentation":{"id":1609,"nodeType":"StructuredDocumentation","src":"1092:47:14","text":" @dev Called method is paused"},"errorSelector":"a5ced19b","name":"Paused","nameLocation":"1150:6:14","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"selector","nameLocation":"1164:8:14","nodeType":"VariableDeclaration","scope":1613,"src":"1157:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1610,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1157:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1156:17:14"}},{"id":1616,"nodeType":"ErrorDefinition","src":"1255:25:14","nodes":[],"documentation":{"id":1614,"nodeType":"StructuredDocumentation","src":"1179:71:14","text":" @dev Flush is blocked until reallocation is not done"},"errorSelector":"7c63f042","name":"NeedReallocation","nameLocation":"1261:16:14","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[],"src":"1277:2:14"}},{"id":1619,"nodeType":"ErrorDefinition","src":"1397:32:14","nodes":[],"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"1285:107:14","text":" @dev Reallocation failed because more assets were lost then specified by MetaVault owner"},"errorSelector":"87f3851b","name":"MaxReallocationSlippage","nameLocation":"1403:23:14","parameters":{"id":1618,"nodeType":"ParameterList","parameters":[],"src":"1426:2:14"}},{"id":1628,"nodeType":"EventDefinition","src":"1569:80:14","nodes":[],"anonymous":false,"documentation":{"id":1620,"nodeType":"StructuredDocumentation","src":"1504:60:14","text":" @dev User deposited assets into MetaVault"},"eventSelector":"f4d446eb2bcb888f40b23f1c0d6060473b059e0a159b3d9753b58ff402585f12","name":"Deposit","nameLocation":"1575:7:14","parameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1622,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1599:4:14","nodeType":"VariableDeclaration","scope":1628,"src":"1583:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1624,"indexed":true,"mutability":"mutable","name":"flushIndex","nameLocation":"1621:10:14","nodeType":"VariableDeclaration","scope":1628,"src":"1605:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1623,"name":"uint128","nodeType":"ElementaryTypeName","src":"1605:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1626,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"1641:6:14","nodeType":"VariableDeclaration","scope":1628,"src":"1633:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1625,"name":"uint256","nodeType":"ElementaryTypeName","src":"1633:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1582:66:14"}},{"id":1637,"nodeType":"EventDefinition","src":"1712:78:14","nodes":[],"anonymous":false,"documentation":{"id":1629,"nodeType":"StructuredDocumentation","src":"1654:53:14","text":" @dev User claimed MetaVault shares"},"eventSelector":"32880694207a48db13e08796c9cbeb5a7eafc69334692d0346ef40be782066e8","name":"Claim","nameLocation":"1718:5:14","parameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1740:4:14","nodeType":"VariableDeclaration","scope":1637,"src":"1724:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1630,"name":"address","nodeType":"ElementaryTypeName","src":"1724:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1633,"indexed":true,"mutability":"mutable","name":"flushIndex","nameLocation":"1762:10:14","nodeType":"VariableDeclaration","scope":1637,"src":"1746:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1632,"name":"uint128","nodeType":"ElementaryTypeName","src":"1746:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1635,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"1782:6:14","nodeType":"VariableDeclaration","scope":1637,"src":"1774:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"1774:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1723:66:14"}},{"id":1646,"nodeType":"EventDefinition","src":"1873:79:14","nodes":[],"anonymous":false,"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"1795:73:14","text":" @dev User redeemed MetaVault shares to get assets back"},"eventSelector":"e5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929","name":"Redeem","nameLocation":"1879:6:14","parameters":{"id":1645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1902:4:14","nodeType":"VariableDeclaration","scope":1646,"src":"1886:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"1886:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1642,"indexed":true,"mutability":"mutable","name":"flushIndex","nameLocation":"1924:10:14","nodeType":"VariableDeclaration","scope":1646,"src":"1908:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1908:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1644,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"1944:6:14","nodeType":"VariableDeclaration","scope":1646,"src":"1936:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1643,"name":"uint256","nodeType":"ElementaryTypeName","src":"1936:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1885:66:14"}},{"id":1655,"nodeType":"EventDefinition","src":"2015:81:14","nodes":[],"anonymous":false,"documentation":{"id":1647,"nodeType":"StructuredDocumentation","src":"1957:53:14","text":" @dev User has withdrawn his assets"},"eventSelector":"f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568","name":"Withdraw","nameLocation":"2021:8:14","parameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2046:4:14","nodeType":"VariableDeclaration","scope":1655,"src":"2030:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1648,"name":"address","nodeType":"ElementaryTypeName","src":"2030:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1651,"indexed":true,"mutability":"mutable","name":"flushIndex","nameLocation":"2068:10:14","nodeType":"VariableDeclaration","scope":1655,"src":"2052:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"2052:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1653,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2088:6:14","nodeType":"VariableDeclaration","scope":1655,"src":"2080:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"2080:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2029:66:14"}},{"id":1662,"nodeType":"EventDefinition","src":"2150:63:14","nodes":[],"anonymous":false,"documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"2101:44:14","text":" @dev flushDeposit has run"},"eventSelector":"98c9b122055d9e114e23170216bc3505867cd943a296a1fe83aba890a3f8b228","name":"FlushDeposit","nameLocation":"2156:12:14","parameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"indexed":true,"mutability":"mutable","name":"flushIndex","nameLocation":"2185:10:14","nodeType":"VariableDeclaration","scope":1662,"src":"2169:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1657,"name":"uint256","nodeType":"ElementaryTypeName","src":"2169:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1660,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2205:6:14","nodeType":"VariableDeclaration","scope":1662,"src":"2197:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"2197:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2168:44:14"}},{"id":1669,"nodeType":"EventDefinition","src":"2270:66:14","nodes":[],"anonymous":false,"documentation":{"id":1663,"nodeType":"StructuredDocumentation","src":"2218:47:14","text":" @dev flushWithdrawal has run"},"eventSelector":"2f5f4ab72966b869255612d05087705cf4f4b42b96de14c0267e58b5bca08e45","name":"FlushWithdrawal","nameLocation":"2276:15:14","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"indexed":true,"mutability":"mutable","name":"flushIndex","nameLocation":"2308:10:14","nodeType":"VariableDeclaration","scope":1669,"src":"2292:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1667,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"2328:6:14","nodeType":"VariableDeclaration","scope":1669,"src":"2320:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"2320:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2291:44:14"}},{"id":1676,"nodeType":"EventDefinition","src":"2389:62:14","nodes":[],"anonymous":false,"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"2341:43:14","text":" @dev syncDeposit has run"},"eventSelector":"9bba94eabff06e8b70ff50ac1a386efedf1ae535324f7a2e9a76b76f6d93d944","name":"SyncDeposit","nameLocation":"2395:11:14","parameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"indexed":true,"mutability":"mutable","name":"flushIndex","nameLocation":"2423:10:14","nodeType":"VariableDeclaration","scope":1676,"src":"2407:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"2407:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1674,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"2443:6:14","nodeType":"VariableDeclaration","scope":1676,"src":"2435:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"2435:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2406:44:14"}},{"id":1683,"nodeType":"EventDefinition","src":"2507:65:14","nodes":[],"anonymous":false,"documentation":{"id":1677,"nodeType":"StructuredDocumentation","src":"2456:46:14","text":" @dev syncWithdrawal has run"},"eventSelector":"38f94ee643405aae9e1b75c54557213f626ed380ab72f895ec98aba2785bc19c","name":"SyncWithdrawal","nameLocation":"2513:14:14","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"indexed":true,"mutability":"mutable","name":"flushIndex","nameLocation":"2544:10:14","nodeType":"VariableDeclaration","scope":1683,"src":"2528:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1678,"name":"uint256","nodeType":"ElementaryTypeName","src":"2528:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1681,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2564:6:14","nodeType":"VariableDeclaration","scope":1683,"src":"2556:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"2556:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2527:44:14"}},{"id":1688,"nodeType":"EventDefinition","src":"2624:52:14","nodes":[],"anonymous":false,"documentation":{"id":1684,"nodeType":"StructuredDocumentation","src":"2577:42:14","text":" @dev reallocate has run"},"eventSelector":"36507b48ec2ef9dc3b15d78eea6fd081dab8a7ad00d6b80df763995ca2b79f3d","name":"Reallocate","nameLocation":"2630:10:14","parameters":{"id":1687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"indexed":true,"mutability":"mutable","name":"reallocationIndex","nameLocation":"2657:17:14","nodeType":"VariableDeclaration","scope":1688,"src":"2641:33:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1685,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2640:35:14"}},{"id":1693,"nodeType":"EventDefinition","src":"2732:56:14","nodes":[],"anonymous":false,"documentation":{"id":1689,"nodeType":"StructuredDocumentation","src":"2681:46:14","text":" @dev reallocateSync has run"},"eventSelector":"c42573886905fa3b343073e6f4bd334ace0016a117dc4075c2b66ba3dc3113fe","name":"ReallocateSync","nameLocation":"2738:14:14","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"indexed":true,"mutability":"mutable","name":"reallocationIndex","nameLocation":"2769:17:14","nodeType":"VariableDeclaration","scope":1693,"src":"2753:33:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"2753:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2752:35:14"}},{"id":1699,"nodeType":"EventDefinition","src":"2851:42:14","nodes":[],"anonymous":false,"documentation":{"id":1694,"nodeType":"StructuredDocumentation","src":"2793:53:14","text":" @dev SmartVaults have been changed"},"eventSelector":"9954dee5c7615339da9e6182c2432c6b136add10a776b1432be580470727f77e","name":"SmartVaultsChange","nameLocation":"2857:17:14","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"indexed":false,"mutability":"mutable","name":"vaults","nameLocation":"2885:6:14","nodeType":"VariableDeclaration","scope":1699,"src":"2875:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1695,"name":"address","nodeType":"ElementaryTypeName","src":"2875:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1696,"nodeType":"ArrayTypeName","src":"2875:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2874:18:14"}},{"id":1705,"nodeType":"EventDefinition","src":"2956:46:14","nodes":[],"anonymous":false,"documentation":{"id":1700,"nodeType":"StructuredDocumentation","src":"2898:53:14","text":" @dev Allocations have been changed"},"eventSelector":"24cd0d5e4300ebbb3636b82d3f0974f736abdfd896682ae9820c40721e191ea7","name":"AllocationChange","nameLocation":"2962:16:14","parameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"indexed":false,"mutability":"mutable","name":"allocations","nameLocation":"2989:11:14","nodeType":"VariableDeclaration","scope":1705,"src":"2979:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2979:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1702,"nodeType":"ArrayTypeName","src":"2979:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2978:23:14"}},{"id":1712,"nodeType":"EventDefinition","src":"3089:54:14","nodes":[],"anonymous":false,"documentation":{"id":1706,"nodeType":"StructuredDocumentation","src":"3007:77:14","text":" @dev Used for parameter gatherer to prepare slippages data"},"eventSelector":"8679a8ee3fc6af8a72fdb6b54832e8426dc0c765ea8071aa4f8f9f4c8a551533","name":"SvtToRedeem","nameLocation":"3095:11:14","parameters":{"id":1711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"indexed":false,"mutability":"mutable","name":"smartVault","nameLocation":"3115:10:14","nodeType":"VariableDeclaration","scope":1712,"src":"3107:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1707,"name":"address","nodeType":"ElementaryTypeName","src":"3107:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1710,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3135:6:14","nodeType":"VariableDeclaration","scope":1712,"src":"3127:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1709,"name":"uint256","nodeType":"ElementaryTypeName","src":"3127:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3106:36:14"}},{"id":1719,"nodeType":"EventDefinition","src":"3217:49:14","nodes":[],"anonymous":false,"documentation":{"id":1713,"nodeType":"StructuredDocumentation","src":"3148:64:14","text":" @dev Emitted when method is paused / unpaused"},"eventSelector":"32b5fe62f9c94d343f19c015afb554b207c6522397505ff1d1a9f3d6999a2eb6","name":"PausedChange","nameLocation":"3223:12:14","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"indexed":false,"mutability":"mutable","name":"selector","nameLocation":"3243:8:14","nodeType":"VariableDeclaration","scope":1719,"src":"3236:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1714,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3236:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":1717,"indexed":false,"mutability":"mutable","name":"paused","nameLocation":"3258:6:14","nodeType":"VariableDeclaration","scope":1719,"src":"3253:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1716,"name":"bool","nodeType":"ElementaryTypeName","src":"3253:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3235:30:14"}},{"id":1724,"nodeType":"EventDefinition","src":"3340:40:14","nodes":[],"anonymous":false,"documentation":{"id":1720,"nodeType":"StructuredDocumentation","src":"3271:64:14","text":" @dev Emitted when needReallocation is changed"},"eventSelector":"dfa08c8c24d11445a25ffc7ec95067b8b17cf20d43b1126795b71dbc4df97aea","name":"NeedReallocationState","nameLocation":"3346:21:14","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1722,"indexed":false,"mutability":"mutable","name":"state","nameLocation":"3373:5:14","nodeType":"VariableDeclaration","scope":1724,"src":"3368:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1721,"name":"bool","nodeType":"ElementaryTypeName","src":"3368:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3367:12:14"}},{"id":1731,"nodeType":"EventDefinition","src":"3453:60:14","nodes":[],"anonymous":false,"documentation":{"id":1725,"nodeType":"StructuredDocumentation","src":"3385:63:14","text":" @dev data for calculating share price of MVT"},"eventSelector":"e5b2abdc6cc21c8a500ff074e062890c5048437f55bfabbcbbef4d9392569856","name":"SharePrice","nameLocation":"3459:10:14","parameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1727,"indexed":false,"mutability":"mutable","name":"totalBalance","nameLocation":"3478:12:14","nodeType":"VariableDeclaration","scope":1731,"src":"3470:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1726,"name":"uint256","nodeType":"ElementaryTypeName","src":"3470:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1729,"indexed":false,"mutability":"mutable","name":"totalSupply","nameLocation":"3500:11:14","nodeType":"VariableDeclaration","scope":1731,"src":"3492:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1728,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3469:43:14"}},{"id":1736,"nodeType":"EventDefinition","src":"3594:51:14","nodes":[],"anonymous":false,"documentation":{"id":1732,"nodeType":"StructuredDocumentation","src":"3518:71:14","text":" @dev Emitted when maxReallocationSlippage is changed"},"eventSelector":"4d59bbcacd0a57dcd5bab1844b301f430c7bdd5545ff8a3e77fb679c69619ef0","name":"MaxReallocationSlippageChange","nameLocation":"3600:29:14","parameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1734,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"3638:5:14","nodeType":"VariableDeclaration","scope":1736,"src":"3630:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"3630:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3629:15:14"}},{"id":1742,"nodeType":"FunctionDefinition","src":"3806:66:14","nodes":[],"documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"3723:78:14","text":" @notice Maximum amount of smart vaults MetaVault can manage"},"functionSelector":"828306fe","implemented":false,"kind":"function","modifiers":[],"name":"MAX_SMART_VAULT_AMOUNT","nameLocation":"3815:22:14","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[],"src":"3837:2:14"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1742,"src":"3863:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:9:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1748,"nodeType":"FunctionDefinition","src":"3987:67:14","nodes":[],"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"3878:104:14","text":" @notice Maximum allowed percentage change of funds during reallocation in base points"},"functionSelector":"a8c4b95a","implemented":false,"kind":"function","modifiers":[],"name":"maxReallocationSlippage","nameLocation":"3996:23:14","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[],"src":"4019:2:14"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"4045:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"4045:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4044:9:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1758,"nodeType":"FunctionDefinition","src":"4230:88:14","nodes":[],"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"4060:165:14","text":" @notice Owner of MetaVault can add new smart vaults for management\n @param vaults list to add\n @param allocations for all smart vaults"},"functionSelector":"c706792d","implemented":false,"kind":"function","modifiers":[],"name":"addSmartVaults","nameLocation":"4239:14:14","parameters":{"id":1756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"vaults","nameLocation":"4271:6:14","nodeType":"VariableDeclaration","scope":1758,"src":"4254:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1750,"name":"address","nodeType":"ElementaryTypeName","src":"4254:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1751,"nodeType":"ArrayTypeName","src":"4254:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1755,"mutability":"mutable","name":"allocations","nameLocation":"4296:11:14","nodeType":"VariableDeclaration","scope":1758,"src":"4279:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1753,"name":"uint256","nodeType":"ElementaryTypeName","src":"4279:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1754,"nodeType":"ArrayTypeName","src":"4279:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4253:55:14"},"returnParameters":{"id":1757,"nodeType":"ParameterList","parameters":[],"src":"4317:0:14"},"scope":2027,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1764,"nodeType":"FunctionDefinition","src":"4393:49:14","nodes":[],"documentation":{"id":1759,"nodeType":"StructuredDocumentation","src":"4324:64:14","text":" @notice Underlying asset used for investments"},"functionSelector":"38d52e0f","implemented":false,"kind":"function","modifiers":[],"name":"asset","nameLocation":"4402:5:14","parameters":{"id":1760,"nodeType":"ParameterList","parameters":[],"src":"4407:2:14"},"returnParameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1764,"src":"4433:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"4433:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4432:9:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1772,"nodeType":"FunctionDefinition","src":"4571:69:14","nodes":[],"documentation":{"id":1765,"nodeType":"StructuredDocumentation","src":"4448:118:14","text":" @notice claim MetaVault shares\n @param flushIndex to claim from\n @return shares claimed"},"functionSelector":"60e72adb","implemented":false,"kind":"function","modifiers":[],"name":"claim","nameLocation":"4580:5:14","parameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"flushIndex","nameLocation":"4594:10:14","nodeType":"VariableDeclaration","scope":1772,"src":"4586:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1766,"name":"uint128","nodeType":"ElementaryTypeName","src":"4586:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"4585:20:14"},"returnParameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"shares","nameLocation":"4632:6:14","nodeType":"VariableDeclaration","scope":1772,"src":"4624:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1769,"name":"uint256","nodeType":"ElementaryTypeName","src":"4624:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4623:16:14"},"scope":2027,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1782,"nodeType":"FunctionDefinition","src":"4829:87:14","nodes":[],"documentation":{"id":1773,"nodeType":"StructuredDocumentation","src":"4646:178:14","text":" @notice amount of shares user will get from provided flushIndex\n @param user address\n @param flushIndex index\n @return shares will be claimed"},"functionSelector":"c1579f6b","implemented":false,"kind":"function","modifiers":[],"name":"claimable","nameLocation":"4838:9:14","parameters":{"id":1778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1775,"mutability":"mutable","name":"user","nameLocation":"4856:4:14","nodeType":"VariableDeclaration","scope":1782,"src":"4848:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1774,"name":"address","nodeType":"ElementaryTypeName","src":"4848:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1777,"mutability":"mutable","name":"flushIndex","nameLocation":"4870:10:14","nodeType":"VariableDeclaration","scope":1782,"src":"4862:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1776,"name":"uint128","nodeType":"ElementaryTypeName","src":"4862:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"4847:34:14"},"returnParameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1780,"mutability":"mutable","name":"shares","nameLocation":"4908:6:14","nodeType":"VariableDeclaration","scope":1782,"src":"4900:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"4900:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4899:16:14"},"scope":2027,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1788,"nodeType":"FunctionDefinition","src":"5014:42:14","nodes":[],"documentation":{"id":1783,"nodeType":"StructuredDocumentation","src":"4922:87:14","text":" @notice deposit assets into MetaVault\n @param amount of assets"},"functionSelector":"b6b55f25","implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"5023:7:14","parameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"mutability":"mutable","name":"amount","nameLocation":"5039:6:14","nodeType":"VariableDeclaration","scope":1788,"src":"5031:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"5031:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5030:16:14"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[],"src":"5055:0:14"},"scope":2027,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1796,"nodeType":"FunctionDefinition","src":"5194:60:14","nodes":[],"documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"5062:127:14","text":" @notice deposit assets into MetaVault\n @param amount of assets\n @param receiver of future shares"},"functionSelector":"6e553f65","implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"5203:7:14","parameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"amount","nameLocation":"5219:6:14","nodeType":"VariableDeclaration","scope":1796,"src":"5211:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1793,"mutability":"mutable","name":"receiver","nameLocation":"5235:8:14","nodeType":"VariableDeclaration","scope":1796,"src":"5227:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1792,"name":"address","nodeType":"ElementaryTypeName","src":"5227:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5210:34:14"},"returnParameters":{"id":1795,"nodeType":"ParameterList","parameters":[],"src":"5253:0:14"},"scope":2027,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1800,"nodeType":"FunctionDefinition","src":"5344:26:14","nodes":[],"documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"5260:79:14","text":" @notice flush deposits and redeems accumulated on MetaVault."},"functionSelector":"6b9f96ea","implemented":false,"kind":"function","modifiers":[],"name":"flush","nameLocation":"5353:5:14","parameters":{"id":1798,"nodeType":"ParameterList","parameters":[],"src":"5358:2:14"},"returnParameters":{"id":1799,"nodeType":"ParameterList","parameters":[],"src":"5369:0:14"},"scope":2027,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1808,"nodeType":"FunctionDefinition","src":"5475:73:14","nodes":[],"documentation":{"id":1801,"nodeType":"StructuredDocumentation","src":"5376:94:14","text":" @notice total amount of assets deposited by users in particular flush cycle"},"functionSelector":"8e8ecfd6","implemented":false,"kind":"function","modifiers":[],"name":"flushToDepositedAssets","nameLocation":"5484:22:14","parameters":{"id":1804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1808,"src":"5507:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1802,"name":"uint128","nodeType":"ElementaryTypeName","src":"5507:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5506:9:14"},"returnParameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1808,"src":"5539:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"5539:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5538:9:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1816,"nodeType":"FunctionDefinition","src":"5642:70:14","nodes":[],"documentation":{"id":1809,"nodeType":"StructuredDocumentation","src":"5554:83:14","text":" @notice total amount of shares minted for particular flush cycle"},"functionSelector":"197cdd63","implemented":false,"kind":"function","modifiers":[],"name":"flushToMintedShares","nameLocation":"5651:19:14","parameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1816,"src":"5671:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1810,"name":"uint128","nodeType":"ElementaryTypeName","src":"5671:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5670:9:14"},"returnParameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1816,"src":"5703:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1813,"name":"uint256","nodeType":"ElementaryTypeName","src":"5703:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5702:9:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1824,"nodeType":"FunctionDefinition","src":"5816:72:14","nodes":[],"documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"5718:93:14","text":" @notice total amount of shares redeemed by users in particular flush cycle"},"functionSelector":"dea21eac","implemented":false,"kind":"function","modifiers":[],"name":"flushToRedeemedShares","nameLocation":"5825:21:14","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1824,"src":"5847:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1818,"name":"uint128","nodeType":"ElementaryTypeName","src":"5847:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5846:9:14"},"returnParameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1824,"src":"5879:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1821,"name":"uint256","nodeType":"ElementaryTypeName","src":"5879:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5878:9:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1834,"nodeType":"FunctionDefinition","src":"6007:94:14","nodes":[],"documentation":{"id":1825,"nodeType":"StructuredDocumentation","src":"5894:108:14","text":" @notice withdrawal nft id associated with particular smart vault for specific flush index"},"functionSelector":"bc0cf99c","implemented":false,"kind":"function","modifiers":[],"name":"flushToSmartVaultToWithdrawalNftId","nameLocation":"6016:34:14","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1834,"src":"6051:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1826,"name":"uint128","nodeType":"ElementaryTypeName","src":"6051:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1834,"src":"6060:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1828,"name":"address","nodeType":"ElementaryTypeName","src":"6060:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6050:18:14"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1834,"src":"6092:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"6092:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6091:9:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1842,"nodeType":"FunctionDefinition","src":"6209:73:14","nodes":[],"documentation":{"id":1835,"nodeType":"StructuredDocumentation","src":"6107:97:14","text":" @notice total amount of assets received by MetaVault in particular flush cycle"},"functionSelector":"de3e1b1e","implemented":false,"kind":"function","modifiers":[],"name":"flushToWithdrawnAssets","nameLocation":"6218:22:14","parameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1842,"src":"6241:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1836,"name":"uint128","nodeType":"ElementaryTypeName","src":"6241:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"6240:9:14"},"returnParameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1842,"src":"6273:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"6273:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6272:9:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1851,"nodeType":"FunctionDefinition","src":"6468:90:14","nodes":[],"documentation":{"id":1843,"nodeType":"StructuredDocumentation","src":"6288:175:14","text":" @notice get the balance of underlying asset invested into smart vaults\n @return totalBalance of MetaVault and balances for each particular smart vault"},"functionSelector":"00113e08","implemented":false,"kind":"function","modifiers":[],"name":"getBalances","nameLocation":"6477:11:14","parameters":{"id":1844,"nodeType":"ParameterList","parameters":[],"src":"6488:2:14"},"returnParameters":{"id":1850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"totalBalance","nameLocation":"6517:12:14","nodeType":"VariableDeclaration","scope":1851,"src":"6509:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1845,"name":"uint256","nodeType":"ElementaryTypeName","src":"6509:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1849,"mutability":"mutable","name":"balances","nameLocation":"6548:8:14","nodeType":"VariableDeclaration","scope":1851,"src":"6531:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"6531:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1848,"nodeType":"ArrayTypeName","src":"6531:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6508:49:14"},"scope":2027,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1858,"nodeType":"FunctionDefinition","src":"6692:67:14","nodes":[],"documentation":{"id":1852,"nodeType":"StructuredDocumentation","src":"6564:123:14","text":" @notice get the list of smart vaults currently managed by MetaVault\n @return array of smart vaults"},"functionSelector":"dc9a6d7c","implemented":false,"kind":"function","modifiers":[],"name":"getSmartVaults","nameLocation":"6701:14:14","parameters":{"id":1853,"nodeType":"ParameterList","parameters":[],"src":"6715:2:14"},"returnParameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1858,"src":"6741:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"6741:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1855,"nodeType":"ArrayTypeName","src":"6741:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"6740:18:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1866,"nodeType":"FunctionDefinition","src":"6863:69:14","nodes":[],"documentation":{"id":1859,"nodeType":"StructuredDocumentation","src":"6765:93:14","text":" @notice current flush index. Used to process batch of deposits and redeems"},"functionSelector":"2986c0e5","implemented":false,"kind":"function","modifiers":[],"name":"index","nameLocation":"6872:5:14","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[],"src":"6877:2:14"},"returnParameters":{"id":1865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"flush","nameLocation":"6911:5:14","nodeType":"VariableDeclaration","scope":1866,"src":"6903:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1861,"name":"uint128","nodeType":"ElementaryTypeName","src":"6903:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"sync","nameLocation":"6926:4:14","nodeType":"VariableDeclaration","scope":1866,"src":"6918:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1863,"name":"uint128","nodeType":"ElementaryTypeName","src":"6918:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"6902:29:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1872,"nodeType":"FunctionDefinition","src":"7044:57:14","nodes":[],"documentation":{"id":1867,"nodeType":"StructuredDocumentation","src":"6938:101:14","text":" @notice indicates that allocation has changed and there is a need for reallocation"},"functionSelector":"58268065","implemented":false,"kind":"function","modifiers":[],"name":"needReallocation","nameLocation":"7053:16:14","parameters":{"id":1868,"nodeType":"ParameterList","parameters":[],"src":"7069:2:14"},"returnParameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"7095:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1869,"name":"bool","nodeType":"ElementaryTypeName","src":"7095:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7094:6:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1886,"nodeType":"FunctionDefinition","src":"7148:95:14","nodes":[],"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"7107:36:14","text":"@notice if asset supports EIP712"},"functionSelector":"d04622b2","implemented":false,"kind":"function","modifiers":[],"name":"permitAsset","nameLocation":"7157:11:14","parameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"amount","nameLocation":"7177:6:14","nodeType":"VariableDeclaration","scope":1886,"src":"7169:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1874,"name":"uint256","nodeType":"ElementaryTypeName","src":"7169:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1877,"mutability":"mutable","name":"deadline","nameLocation":"7193:8:14","nodeType":"VariableDeclaration","scope":1886,"src":"7185:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1876,"name":"uint256","nodeType":"ElementaryTypeName","src":"7185:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"v","nameLocation":"7209:1:14","nodeType":"VariableDeclaration","scope":1886,"src":"7203:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1878,"name":"uint8","nodeType":"ElementaryTypeName","src":"7203:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"r","nameLocation":"7220:1:14","nodeType":"VariableDeclaration","scope":1886,"src":"7212:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1880,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7212:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"s","nameLocation":"7231:1:14","nodeType":"VariableDeclaration","scope":1886,"src":"7223:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7223:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7168:65:14"},"returnParameters":{"id":1885,"nodeType":"ParameterList","parameters":[],"src":"7242:0:14"},"scope":2027,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1902,"nodeType":"FunctionDefinition","src":"7281:106:14","nodes":[],"documentation":{"id":1887,"nodeType":"StructuredDocumentation","src":"7249:27:14","text":"@notice if asset is DAI"},"functionSelector":"007feee4","implemented":false,"kind":"function","modifiers":[],"name":"permitDai","nameLocation":"7290:9:14","parameters":{"id":1900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"nonce","nameLocation":"7308:5:14","nodeType":"VariableDeclaration","scope":1902,"src":"7300:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1888,"name":"uint256","nodeType":"ElementaryTypeName","src":"7300:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1891,"mutability":"mutable","name":"deadline","nameLocation":"7323:8:14","nodeType":"VariableDeclaration","scope":1902,"src":"7315:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1890,"name":"uint256","nodeType":"ElementaryTypeName","src":"7315:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"allowed","nameLocation":"7338:7:14","nodeType":"VariableDeclaration","scope":1902,"src":"7333:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1892,"name":"bool","nodeType":"ElementaryTypeName","src":"7333:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"v","nameLocation":"7353:1:14","nodeType":"VariableDeclaration","scope":1902,"src":"7347:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1894,"name":"uint8","nodeType":"ElementaryTypeName","src":"7347:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1897,"mutability":"mutable","name":"r","nameLocation":"7364:1:14","nodeType":"VariableDeclaration","scope":1902,"src":"7356:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7356:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1899,"mutability":"mutable","name":"s","nameLocation":"7375:1:14","nodeType":"VariableDeclaration","scope":1902,"src":"7367:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7367:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7299:78:14"},"returnParameters":{"id":1901,"nodeType":"ParameterList","parameters":[],"src":"7386:0:14"},"scope":2027,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1911,"nodeType":"FunctionDefinition","src":"7627:61:14","nodes":[],"documentation":{"id":1903,"nodeType":"StructuredDocumentation","src":"7393:229:14","text":" @notice only DoHardWorker can reallocate positions\n if smartVaultToAllocation is zero all funds are withdrawn from this vault and it is removed from _smartVault.list\n @param slippages for redeemFast"},"functionSelector":"2ea8d439","implemented":false,"kind":"function","modifiers":[],"name":"reallocate","nameLocation":"7636:10:14","parameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1908,"mutability":"mutable","name":"slippages","nameLocation":"7668:9:14","nodeType":"VariableDeclaration","scope":1911,"src":"7647:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[][][]"},"typeName":{"baseType":{"baseType":{"baseType":{"id":1904,"name":"uint256","nodeType":"ElementaryTypeName","src":"7647:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1905,"nodeType":"ArrayTypeName","src":"7647:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":1906,"nodeType":"ArrayTypeName","src":"7647:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"id":1907,"nodeType":"ArrayTypeName","src":"7647:13:14","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][][]"}},"visibility":"internal"}],"src":"7646:32:14"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[],"src":"7687:0:14"},"scope":2027,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1915,"nodeType":"FunctionDefinition","src":"7794:35:14","nodes":[],"documentation":{"id":1912,"nodeType":"StructuredDocumentation","src":"7694:95:14","text":" @notice Finalize reallocation of MetaVault\n revert - DHW should be run"},"functionSelector":"60984ad9","implemented":false,"kind":"function","modifiers":[],"name":"reallocateSync","nameLocation":"7803:14:14","parameters":{"id":1913,"nodeType":"ParameterList","parameters":[],"src":"7817:2:14"},"returnParameters":{"id":1914,"nodeType":"ParameterList","parameters":[],"src":"7828:0:14"},"scope":2027,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1923,"nodeType":"FunctionDefinition","src":"7893:81:14","nodes":[],"documentation":{"id":1916,"nodeType":"StructuredDocumentation","src":"7835:53:14","text":" @notice current reallocation index"},"functionSelector":"692a4a91","implemented":false,"kind":"function","modifiers":[],"name":"reallocationIndex","nameLocation":"7902:17:14","parameters":{"id":1917,"nodeType":"ParameterList","parameters":[],"src":"7919:2:14"},"returnParameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"flush","nameLocation":"7953:5:14","nodeType":"VariableDeclaration","scope":1923,"src":"7945:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1918,"name":"uint128","nodeType":"ElementaryTypeName","src":"7945:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1921,"mutability":"mutable","name":"sync","nameLocation":"7968:4:14","nodeType":"VariableDeclaration","scope":1923,"src":"7960:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1920,"name":"uint128","nodeType":"ElementaryTypeName","src":"7960:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7944:29:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1929,"nodeType":"FunctionDefinition","src":"8096:41:14","nodes":[],"documentation":{"id":1924,"nodeType":"StructuredDocumentation","src":"7980:111:14","text":" @notice create a redeem request to get assets back\n @param shares of MetaVault to burn"},"functionSelector":"db006a75","implemented":false,"kind":"function","modifiers":[],"name":"redeem","nameLocation":"8105:6:14","parameters":{"id":1927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1926,"mutability":"mutable","name":"shares","nameLocation":"8120:6:14","nodeType":"VariableDeclaration","scope":1929,"src":"8112:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1925,"name":"uint256","nodeType":"ElementaryTypeName","src":"8112:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8111:16:14"},"returnParameters":{"id":1928,"nodeType":"ParameterList","parameters":[],"src":"8136:0:14"},"scope":2027,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1937,"nodeType":"FunctionDefinition","src":"8196:63:14","nodes":[],"documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"8143:48:14","text":" @notice function paused state"},"functionSelector":"f5e81a88","implemented":false,"kind":"function","modifiers":[],"name":"selectorToPaused","nameLocation":"8205:16:14","parameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1937,"src":"8222:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1931,"name":"bytes4","nodeType":"ElementaryTypeName","src":"8222:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"8221:8:14"},"returnParameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1937,"src":"8253:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1934,"name":"bool","nodeType":"ElementaryTypeName","src":"8253:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8252:6:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1945,"nodeType":"FunctionDefinition","src":"8324:58:14","nodes":[],"documentation":{"id":1938,"nodeType":"StructuredDocumentation","src":"8265:54:14","text":" @notice selectively pause functions"},"functionSelector":"1c9d458c","implemented":false,"kind":"function","modifiers":[],"name":"setPaused","nameLocation":"8333:9:14","parameters":{"id":1943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"selector","nameLocation":"8350:8:14","nodeType":"VariableDeclaration","scope":1945,"src":"8343:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1939,"name":"bytes4","nodeType":"ElementaryTypeName","src":"8343:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":1942,"mutability":"mutable","name":"paused","nameLocation":"8365:6:14","nodeType":"VariableDeclaration","scope":1945,"src":"8360:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1941,"name":"bool","nodeType":"ElementaryTypeName","src":"8360:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8342:30:14"},"returnParameters":{"id":1944,"nodeType":"ParameterList","parameters":[],"src":"8381:0:14"},"scope":2027,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1952,"nodeType":"FunctionDefinition","src":"8528:73:14","nodes":[],"documentation":{"id":1946,"nodeType":"StructuredDocumentation","src":"8388:135:14","text":" @notice only owner of MetaVault can change the allocations for managed smart vaults\n @param allocations to set"},"functionSelector":"c80057ad","implemented":false,"kind":"function","modifiers":[],"name":"setSmartVaultAllocations","nameLocation":"8537:24:14","parameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"allocations","nameLocation":"8579:11:14","nodeType":"VariableDeclaration","scope":1952,"src":"8562:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1947,"name":"uint256","nodeType":"ElementaryTypeName","src":"8562:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1948,"nodeType":"ArrayTypeName","src":"8562:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8561:30:14"},"returnParameters":{"id":1951,"nodeType":"ParameterList","parameters":[],"src":"8600:0:14"},"scope":2027,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1960,"nodeType":"FunctionDefinition","src":"8667:73:14","nodes":[],"documentation":{"id":1953,"nodeType":"StructuredDocumentation","src":"8607:55:14","text":" @notice allocation is in base points"},"functionSelector":"573e44e2","implemented":false,"kind":"function","modifiers":[],"name":"smartVaultToAllocation","nameLocation":"8676:22:14","parameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1960,"src":"8699:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1954,"name":"address","nodeType":"ElementaryTypeName","src":"8699:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8698:9:14"},"returnParameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1960,"src":"8731:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1957,"name":"uint256","nodeType":"ElementaryTypeName","src":"8731:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8730:9:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1968,"nodeType":"FunctionDefinition","src":"8810:75:14","nodes":[],"documentation":{"id":1961,"nodeType":"StructuredDocumentation","src":"8746:59:14","text":" @notice deposit nft from regular deposit"},"functionSelector":"071424eb","implemented":false,"kind":"function","modifiers":[],"name":"smartVaultToDepositNftId","nameLocation":"8819:24:14","parameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1968,"src":"8844:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1962,"name":"address","nodeType":"ElementaryTypeName","src":"8844:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8843:9:14"},"returnParameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1968,"src":"8876:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1965,"name":"uint256","nodeType":"ElementaryTypeName","src":"8876:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8875:9:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1976,"nodeType":"FunctionDefinition","src":"8952:91:14","nodes":[],"documentation":{"id":1969,"nodeType":"StructuredDocumentation","src":"8891:56:14","text":" @notice deposit nft from reallocation"},"functionSelector":"e3986c5d","implemented":false,"kind":"function","modifiers":[],"name":"smartVaultToDepositNftIdFromReallocation","nameLocation":"8961:40:14","parameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1976,"src":"9002:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1970,"name":"address","nodeType":"ElementaryTypeName","src":"9002:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9001:9:14"},"returnParameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1976,"src":"9034:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"9034:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9033:9:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1984,"nodeType":"FunctionDefinition","src":"9115:80:14","nodes":[],"documentation":{"id":1977,"nodeType":"StructuredDocumentation","src":"9049:61:14","text":" @notice flush indexes on SmartVaultManager"},"functionSelector":"3be3abb9","implemented":false,"kind":"function","modifiers":[],"name":"smartVaultToManagerFlushIndex","nameLocation":"9124:29:14","parameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1984,"src":"9154:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1978,"name":"address","nodeType":"ElementaryTypeName","src":"9154:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9153:9:14"},"returnParameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1984,"src":"9186:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"9186:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9185:9:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":1988,"nodeType":"FunctionDefinition","src":"9272:25:14","nodes":[],"documentation":{"id":1985,"nodeType":"StructuredDocumentation","src":"9201:66:14","text":" @notice sync MetaVault deposits and withdrawals"},"functionSelector":"fff6cae9","implemented":false,"kind":"function","modifiers":[],"name":"sync","nameLocation":"9281:4:14","parameters":{"id":1986,"nodeType":"ParameterList","parameters":[],"src":"9285:2:14"},"returnParameters":{"id":1987,"nodeType":"ParameterList","parameters":[],"src":"9296:0:14"},"scope":2027,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":1998,"nodeType":"FunctionDefinition","src":"9390:88:14","nodes":[],"documentation":{"id":1989,"nodeType":"StructuredDocumentation","src":"9303:82:14","text":" @notice amount of shares user deposited in specific flush index"},"functionSelector":"3f4eb4a0","implemented":false,"kind":"function","modifiers":[],"name":"userToFlushToDepositedAssets","nameLocation":"9399:28:14","parameters":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1998,"src":"9428:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1990,"name":"address","nodeType":"ElementaryTypeName","src":"9428:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1998,"src":"9437:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1992,"name":"uint128","nodeType":"ElementaryTypeName","src":"9437:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9427:18:14"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1998,"src":"9469:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"9469:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9468:9:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2008,"nodeType":"FunctionDefinition","src":"9570:87:14","nodes":[],"documentation":{"id":1999,"nodeType":"StructuredDocumentation","src":"9484:81:14","text":" @notice amount of shares user redeemed in specific flush index"},"functionSelector":"5071733e","implemented":false,"kind":"function","modifiers":[],"name":"userToFlushToRedeemedShares","nameLocation":"9579:27:14","parameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2008,"src":"9607:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2000,"name":"address","nodeType":"ElementaryTypeName","src":"9607:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2008,"src":"9616:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2002,"name":"uint128","nodeType":"ElementaryTypeName","src":"9616:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9606:18:14"},"returnParameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2008,"src":"9648:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2005,"name":"uint256","nodeType":"ElementaryTypeName","src":"9648:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9647:9:14"},"scope":2027,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2016,"nodeType":"FunctionDefinition","src":"9811:72:14","nodes":[],"documentation":{"id":2009,"nodeType":"StructuredDocumentation","src":"9663:143:14","text":" @notice user can withdraw assets once his request with specific withdrawal index is fulfilled\n @param flushIndex index"},"functionSelector":"02387a7b","implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"9820:8:14","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"flushIndex","nameLocation":"9837:10:14","nodeType":"VariableDeclaration","scope":2016,"src":"9829:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2010,"name":"uint128","nodeType":"ElementaryTypeName","src":"9829:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9828:20:14"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"amount","nameLocation":"9875:6:14","nodeType":"VariableDeclaration","scope":2016,"src":"9867:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2013,"name":"uint256","nodeType":"ElementaryTypeName","src":"9867:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9866:16:14"},"scope":2027,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2026,"nodeType":"FunctionDefinition","src":"10073:90:14","nodes":[],"documentation":{"id":2017,"nodeType":"StructuredDocumentation","src":"9889:179:14","text":" @notice get amount of assets user will get from particular flush index\n @param user address\n @param flushIndex index\n @return amount of assets"},"functionSelector":"f8dace54","implemented":false,"kind":"function","modifiers":[],"name":"withdrawable","nameLocation":"10082:12:14","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"user","nameLocation":"10103:4:14","nodeType":"VariableDeclaration","scope":2026,"src":"10095:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2018,"name":"address","nodeType":"ElementaryTypeName","src":"10095:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"flushIndex","nameLocation":"10117:10:14","nodeType":"VariableDeclaration","scope":2026,"src":"10109:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2020,"name":"uint128","nodeType":"ElementaryTypeName","src":"10109:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"10094:34:14"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"amount","nameLocation":"10155:6:14","nodeType":"VariableDeclaration","scope":2026,"src":"10147:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2023,"name":"uint256","nodeType":"ElementaryTypeName","src":"10147:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10146:16:14"},"scope":2027,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":1577,"name":"IERC20Upgradeable","nameLocations":["187:17:14"],"nodeType":"IdentifierPath","referencedDeclaration":1452,"src":"187:17:14"},"id":1578,"nodeType":"InheritanceSpecifier","src":"187:17:14"},{"baseName":{"id":1579,"name":"IERC1155ReceiverUpgradeable","nameLocations":["206:27:14"],"nodeType":"IdentifierPath","referencedDeclaration":1162,"src":"206:27:14"},"id":1580,"nodeType":"InheritanceSpecifier","src":"206:27:14"}],"canonicalName":"IMetaVault","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[2027,1162,1296,1452],"name":"IMetaVault","nameLocation":"173:10:14","scope":2028,"usedErrors":[1583,1588,1591,1596,1599,1602,1605,1608,1613,1616,1619]}],"license":"BUSL-1.1"}},"src/interfaces/IMetaVaultGuard.sol":{"id":15,"ast":{"absolutePath":"src/interfaces/IMetaVaultGuard.sol","id":2064,"exportedSymbols":{"IMetaVaultGuard":[2063]},"nodeType":"SourceUnit","src":"37:1176:15","nodes":[{"id":2029,"nodeType":"PragmaDirective","src":"37:23:15","nodes":[],"literals":["solidity","0.8",".17"]},{"id":2063,"nodeType":"ContractDefinition","src":"62:1151:15","nodes":[{"id":2032,"nodeType":"ErrorDefinition","src":"247:34:15","nodes":[],"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"163:79:15","text":" @dev Only SmartVaults with zero management fee are supported"},"errorSelector":"1e41c4f0","name":"InvalidVaultManagementFee","nameLocation":"253:25:15","parameters":{"id":2031,"nodeType":"ParameterList","parameters":[],"src":"278:2:15"}},{"id":2035,"nodeType":"ErrorDefinition","src":"367:31:15","nodes":[],"documentation":{"id":2033,"nodeType":"StructuredDocumentation","src":"286:76:15","text":" @dev Only SmartVaults with zero deposit fee are supported"},"errorSelector":"9b7b0796","name":"InvalidVaultDepositFee","nameLocation":"373:22:15","parameters":{"id":2034,"nodeType":"ParameterList","parameters":[],"src":"395:2:15"}},{"id":2038,"nodeType":"ErrorDefinition","src":"494:26:15","nodes":[],"documentation":{"id":2036,"nodeType":"StructuredDocumentation","src":"403:86:15","text":" @dev Only SmartVaults with the same underlying assets are supported"},"errorSelector":"36769106","name":"InvalidVaultAsset","nameLocation":"500:17:15","parameters":{"id":2037,"nodeType":"ParameterList","parameters":[],"src":"517:2:15"}},{"id":2041,"nodeType":"ErrorDefinition","src":"591:24:15","nodes":[],"documentation":{"id":2039,"nodeType":"StructuredDocumentation","src":"525:61:15","text":" @dev Any guard on SmartVault is prohibited"},"errorSelector":"e83c0f4f","name":"NoGuardsAllowed","nameLocation":"597:15:15","parameters":{"id":2040,"nodeType":"ParameterList","parameters":[],"src":"612:2:15"}},{"id":2051,"nodeType":"FunctionDefinition","src":"850:92:15","nodes":[],"documentation":{"id":2042,"nodeType":"StructuredDocumentation","src":"693:152:15","text":" @notice Check if given smart vault can be managed by MetaVault\n @param asset for MetaVault\n @param smartVault to validate"},"functionSelector":"ffa9f16a","implemented":false,"kind":"function","modifiers":[],"name":"validateSmartVault","nameLocation":"859:18:15","parameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"asset","nameLocation":"886:5:15","nodeType":"VariableDeclaration","scope":2051,"src":"878:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2043,"name":"address","nodeType":"ElementaryTypeName","src":"878:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2046,"mutability":"mutable","name":"smartVault","nameLocation":"901:10:15","nodeType":"VariableDeclaration","scope":2051,"src":"893:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"893:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"877:35:15"},"returnParameters":{"id":2050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2051,"src":"936:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2048,"name":"bool","nodeType":"ElementaryTypeName","src":"936:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"935:6:15"},"scope":2063,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2062,"nodeType":"FunctionDefinition","src":"1106:105:15","nodes":[],"documentation":{"id":2052,"nodeType":"StructuredDocumentation","src":"948:153:15","text":" @notice Check if given smart vault can be managed by MetaVault\n @param asset for MetaVault\n @param smartVaults to validate"},"functionSelector":"a0c02faf","implemented":false,"kind":"function","modifiers":[],"name":"validateSmartVaults","nameLocation":"1115:19:15","parameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"asset","nameLocation":"1143:5:15","nodeType":"VariableDeclaration","scope":2062,"src":"1135:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2053,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2057,"mutability":"mutable","name":"smartVaults","nameLocation":"1169:11:15","nodeType":"VariableDeclaration","scope":2062,"src":"1150:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2055,"name":"address","nodeType":"ElementaryTypeName","src":"1150:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2056,"nodeType":"ArrayTypeName","src":"1150:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1134:47:15"},"returnParameters":{"id":2061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2062,"src":"1205:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2059,"name":"bool","nodeType":"ElementaryTypeName","src":"1205:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1204:6:15"},"scope":2063,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IMetaVaultGuard","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[2063],"name":"IMetaVaultGuard","nameLocation":"72:15:15","scope":2064,"usedErrors":[2032,2035,2038,2041]}],"license":"BUSL-1.1"}},"src/interfaces/ISmartVault.sol":{"id":16,"ast":{"absolutePath":"src/interfaces/ISmartVault.sol","id":2259,"exportedSymbols":{"DEPOSIT_FEE_MAX":[590],"DepositIdOverflow":[2073],"DepositMetadata":[2107],"ECOSYSTEM_FEE_MAX":[598],"FULL_PERCENT":[565],"FULL_PERCENT_INT":[569],"IERC1155MetadataURIUpgradeable":[1121],"IERC1155Upgradeable":[1284],"IERC165Upgradeable":[1296],"IERC20Upgradeable":[1452],"INITIAL_LOCKED_SHARES":[668],"INITIAL_LOCKED_SHARES_ADDRESS":[675],"INITIAL_SHARE_MULTIPLIER":[662],"ISmartVault":[2258],"InvalidDepositNftId":[2081],"InvalidNftBalance":[2091],"InvalidNftTransferAmount":[2096],"InvalidWithdrawalNftId":[2086],"MANAGEMENT_FEE_MAX":[586],"MAXIMAL_DEPOSIT_ID":[636],"MAXIMAL_WITHDRAWAL_ID":[644],"MAX_ACTION_COUNT":[683],"MAX_DHW_BASE_YIELD_LIMIT":[658],"MAX_GUARD_COUNT":[679],"MAX_RISK_SCORE":[606],"MAX_RISK_TOLERANCE":[614],"MIN_RISK_SCORE":[610],"MIN_RISK_TOLERANCE":[619],"NFT_MINTED_SHARES":[650],"NULL_ASSET_GROUP_ID":[687],"RequestType":[2912],"SECONDS_IN_YEAR":[557],"SECONDS_IN_YEAR_INT":[561],"STATIC_RISK_PROVIDER":[626],"STATIC_RISK_SCORE":[630],"STRATEGY_COUNT_CAP":[654],"SV_PERFORMANCE_FEE_MAX":[594],"SenderEqualsRecipient":[2099],"SmartVaultFees":[2119],"TREASURY_FEE_MAX":[602],"WithdrawalIdOverflow":[2076],"WithdrawalMetadata":[2112],"YIELD_FULL_PERCENT":[582],"YIELD_FULL_PERCENT_INT":[575]},"nodeType":"SourceUnit","src":"37:7231:16","nodes":[{"id":2065,"nodeType":"PragmaDirective","src":"37:23:16","nodes":[],"literals":["solidity","0.8",".17"]},{"id":2066,"nodeType":"ImportDirective","src":"62:35:16","nodes":[],"absolutePath":"src/interfaces/IERC1155Upgradeable.sol","file":"./IERC1155Upgradeable.sol","nameLocation":"-1:-1:-1","scope":2259,"sourceUnit":1285,"symbolAliases":[],"unitAlias":""},{"id":2067,"nodeType":"ImportDirective","src":"98:33:16","nodes":[],"absolutePath":"src/interfaces/IERC20Upgradeable.sol","file":"./IERC20Upgradeable.sol","nameLocation":"-1:-1:-1","scope":2259,"sourceUnit":1453,"symbolAliases":[],"unitAlias":""},{"id":2068,"nodeType":"ImportDirective","src":"132:46:16","nodes":[],"absolutePath":"src/interfaces/IERC1155MetadataURIUpgradeable.sol","file":"./IERC1155MetadataURIUpgradeable.sol","nameLocation":"-1:-1:-1","scope":2259,"sourceUnit":1122,"symbolAliases":[],"unitAlias":""},{"id":2069,"nodeType":"ImportDirective","src":"179:25:16","nodes":[],"absolutePath":"src/interfaces/Constants.sol","file":"./Constants.sol","nameLocation":"-1:-1:-1","scope":2259,"sourceUnit":688,"symbolAliases":[],"unitAlias":""},{"id":2070,"nodeType":"ImportDirective","src":"205:27:16","nodes":[],"absolutePath":"src/interfaces/RequestType.sol","file":"./RequestType.sol","nameLocation":"-1:-1:-1","scope":2259,"sourceUnit":2913,"symbolAliases":[],"unitAlias":""},{"id":2073,"nodeType":"ErrorDefinition","src":"363:26:16","nodes":[],"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"270:92:16","text":" @notice Used when the ID for deposit NFTs overflows.\n @dev Should never happen."},"errorSelector":"839261c9","name":"DepositIdOverflow","nameLocation":"369:17:16","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[],"src":"386:2:16"}},{"id":2076,"nodeType":"ErrorDefinition","src":"487:29:16","nodes":[],"documentation":{"id":2074,"nodeType":"StructuredDocumentation","src":"391:95:16","text":" @notice Used when the ID for withdrawal NFTs overflows.\n @dev Should never happen."},"errorSelector":"f8bac3d1","name":"WithdrawalIdOverflow","nameLocation":"493:20:16","parameters":{"id":2075,"nodeType":"ParameterList","parameters":[],"src":"513:2:16"}},{"id":2081,"nodeType":"ErrorDefinition","src":"635:48:16","nodes":[],"documentation":{"id":2077,"nodeType":"StructuredDocumentation","src":"518:116:16","text":" @notice Used when ID does not represent a deposit NFT.\n @param depositNftId Invalid ID for deposit NFT."},"errorSelector":"cf77dbd8","name":"InvalidDepositNftId","nameLocation":"641:19:16","parameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"depositNftId","nameLocation":"669:12:16","nodeType":"VariableDeclaration","scope":2081,"src":"661:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"660:22:16"}},{"id":2086,"nodeType":"ErrorDefinition","src":"811:54:16","nodes":[],"documentation":{"id":2082,"nodeType":"StructuredDocumentation","src":"685:125:16","text":" @notice Used when ID does not represent a withdrawal NFT.\n @param withdrawalNftId Invalid ID for withdrawal NFT."},"errorSelector":"5a904393","name":"InvalidWithdrawalNftId","nameLocation":"817:22:16","parameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"withdrawalNftId","nameLocation":"848:15:16","nodeType":"VariableDeclaration","scope":2086,"src":"840:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2083,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"839:25:16"}},{"id":2091,"nodeType":"ErrorDefinition","src":"972:41:16","nodes":[],"documentation":{"id":2087,"nodeType":"StructuredDocumentation","src":"867:104:16","text":" @notice Used when balance of the NFT is invalid.\n @param balance Actual balance of the NFT."},"errorSelector":"e5e171ad","name":"InvalidNftBalance","nameLocation":"978:17:16","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"balance","nameLocation":"1004:7:16","nodeType":"VariableDeclaration","scope":2091,"src":"996:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2088,"name":"uint256","nodeType":"ElementaryTypeName","src":"996:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"995:17:16"}},{"id":2096,"nodeType":"ErrorDefinition","src":"1168:55:16","nodes":[],"documentation":{"id":2092,"nodeType":"StructuredDocumentation","src":"1015:152:16","text":" @notice Used when someone wants to transfer invalid NFT shares amount.\n @param transferAmount Amount of shares requested to be transferred."},"errorSelector":"d53d8d0b","name":"InvalidNftTransferAmount","nameLocation":"1174:24:16","parameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"transferAmount","nameLocation":"1207:14:16","nodeType":"VariableDeclaration","scope":2096,"src":"1199:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1198:24:16"}},{"id":2099,"nodeType":"ErrorDefinition","src":"1292:30:16","nodes":[],"documentation":{"id":2097,"nodeType":"StructuredDocumentation","src":"1225:66:16","text":" @notice Used when user tries to send tokens to himself."},"errorSelector":"bc6284b2","name":"SenderEqualsRecipient","nameLocation":"1298:21:16","parameters":{"id":2098,"nodeType":"ParameterList","parameters":[],"src":"1319:2:16"}},{"id":2107,"nodeType":"StructDefinition","src":"1361:95:16","nodes":[],"canonicalName":"DepositMetadata","members":[{"constant":false,"id":2102,"mutability":"mutable","name":"assets","nameLocation":"1400:6:16","nodeType":"VariableDeclaration","scope":2107,"src":"1390:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1390:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2101,"nodeType":"ArrayTypeName","src":"1390:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2104,"mutability":"mutable","name":"initiated","nameLocation":"1420:9:16","nodeType":"VariableDeclaration","scope":2107,"src":"1412:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1412:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2106,"mutability":"mutable","name":"flushIndex","nameLocation":"1443:10:16","nodeType":"VariableDeclaration","scope":2107,"src":"1435:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1435:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"DepositMetadata","nameLocation":"1368:15:16","scope":2259,"visibility":"public"},{"id":2112,"nodeType":"StructDefinition","src":"1663:78:16","nodes":[],"canonicalName":"WithdrawalMetadata","members":[{"constant":false,"id":2109,"mutability":"mutable","name":"vaultShares","nameLocation":"1703:11:16","nodeType":"VariableDeclaration","scope":2112,"src":"1695:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1695:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2111,"mutability":"mutable","name":"flushIndex","nameLocation":"1728:10:16","nodeType":"VariableDeclaration","scope":2112,"src":"1720:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"WithdrawalMetadata","nameLocation":"1670:18:16","scope":2259,"visibility":"public"},{"id":2119,"nodeType":"StructDefinition","src":"2007:110:16","nodes":[],"canonicalName":"SmartVaultFees","members":[{"constant":false,"id":2114,"mutability":"mutable","name":"managementFeePct","nameLocation":"2042:16:16","nodeType":"VariableDeclaration","scope":2119,"src":"2035:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2113,"name":"uint16","nodeType":"ElementaryTypeName","src":"2035:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2116,"mutability":"mutable","name":"depositFeePct","nameLocation":"2071:13:16","nodeType":"VariableDeclaration","scope":2119,"src":"2064:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2115,"name":"uint16","nodeType":"ElementaryTypeName","src":"2064:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"performanceFeePct","nameLocation":"2097:17:16","nodeType":"VariableDeclaration","scope":2119,"src":"2090:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2117,"name":"uint16","nodeType":"ElementaryTypeName","src":"2090:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"SmartVaultFees","nameLocation":"2014:14:16","scope":2259,"visibility":"public"},{"id":2258,"nodeType":"ContractDefinition","src":"2159:5109:16","nodes":[{"id":2133,"nodeType":"FunctionDefinition","src":"2554:108:16","nodes":[],"documentation":{"id":2124,"nodeType":"StructuredDocumentation","src":"2297:252:16","text":" @notice Fractional balance of a NFT (0 - NFT_MINTED_SHARES).\n @param account Account to check the balance for.\n @param id ID of the NFT to check.\n @return fractionalBalance Fractional balance of account for the NFT."},"functionSelector":"5d9c84ee","implemented":false,"kind":"function","modifiers":[],"name":"balanceOfFractional","nameLocation":"2563:19:16","parameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"account","nameLocation":"2591:7:16","nodeType":"VariableDeclaration","scope":2133,"src":"2583:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2125,"name":"address","nodeType":"ElementaryTypeName","src":"2583:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2128,"mutability":"mutable","name":"id","nameLocation":"2608:2:16","nodeType":"VariableDeclaration","scope":2133,"src":"2600:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2127,"name":"uint256","nodeType":"ElementaryTypeName","src":"2600:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2582:29:16"},"returnParameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"fractionalBalance","nameLocation":"2643:17:16","nodeType":"VariableDeclaration","scope":2133,"src":"2635:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2130,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2634:27:16"},"scope":2258,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2145,"nodeType":"FunctionDefinition","src":"2942:159:16","nodes":[],"documentation":{"id":2134,"nodeType":"StructuredDocumentation","src":"2668:269:16","text":" @notice Fractional balance of a NFTs (0 - NFT_MINTED_SHARES).\n @param account Account to check the balance for.\n @param ids IDs of the NFTs to check.\n @return fractionalBalances Fractional balances of account for each requested NFT."},"functionSelector":"539183e7","implemented":false,"kind":"function","modifiers":[],"name":"balanceOfFractionalBatch","nameLocation":"2951:24:16","parameters":{"id":2140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2136,"mutability":"mutable","name":"account","nameLocation":"2984:7:16","nodeType":"VariableDeclaration","scope":2145,"src":"2976:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2135,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2139,"mutability":"mutable","name":"ids","nameLocation":"3012:3:16","nodeType":"VariableDeclaration","scope":2145,"src":"2993:22:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2137,"name":"uint256","nodeType":"ElementaryTypeName","src":"2993:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2138,"nodeType":"ArrayTypeName","src":"2993:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2975:41:16"},"returnParameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"fractionalBalances","nameLocation":"3081:18:16","nodeType":"VariableDeclaration","scope":2145,"src":"3064:35:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2141,"name":"uint256","nodeType":"ElementaryTypeName","src":"3064:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2142,"nodeType":"ArrayTypeName","src":"3064:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3063:37:16"},"scope":2258,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2151,"nodeType":"FunctionDefinition","src":"3224:59:16","nodes":[],"documentation":{"id":2146,"nodeType":"StructuredDocumentation","src":"3106:113:16","text":" @notice Gets the asset group used by the smart vault.\n @return id ID of the asset group."},"functionSelector":"84ba89e3","implemented":false,"kind":"function","modifiers":[],"name":"assetGroupId","nameLocation":"3233:12:16","parameters":{"id":2147,"nodeType":"ParameterList","parameters":[],"src":"3245:2:16"},"returnParameters":{"id":2150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"mutability":"mutable","name":"id","nameLocation":"3279:2:16","nodeType":"VariableDeclaration","scope":2151,"src":"3271:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2148,"name":"uint256","nodeType":"ElementaryTypeName","src":"3271:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3270:12:16"},"scope":2258,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2157,"nodeType":"FunctionDefinition","src":"3393:64:16","nodes":[],"documentation":{"id":2152,"nodeType":"StructuredDocumentation","src":"3289:99:16","text":" @notice Gets the name of the smart vault.\n @return name Name of the vault."},"functionSelector":"0ace9ca0","implemented":false,"kind":"function","modifiers":[],"name":"vaultName","nameLocation":"3402:9:16","parameters":{"id":2153,"nodeType":"ParameterList","parameters":[],"src":"3411:2:16"},"returnParameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"name","nameLocation":"3451:4:16","nodeType":"VariableDeclaration","scope":2157,"src":"3437:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2154,"name":"string","nodeType":"ElementaryTypeName","src":"3437:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3436:20:16"},"scope":2258,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2167,"nodeType":"FunctionDefinition","src":"3609:96:16","nodes":[],"documentation":{"id":2158,"nodeType":"StructuredDocumentation","src":"3463:141:16","text":" @notice Gets metadata for NFTs.\n @param nftIds IDs of NFTs.\n @return metadata Metadata for each requested NFT."},"functionSelector":"a7614d81","implemented":false,"kind":"function","modifiers":[],"name":"getMetadata","nameLocation":"3618:11:16","parameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"nftIds","nameLocation":"3649:6:16","nodeType":"VariableDeclaration","scope":2167,"src":"3630:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2159,"name":"uint256","nodeType":"ElementaryTypeName","src":"3630:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2160,"nodeType":"ArrayTypeName","src":"3630:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3629:27:16"},"returnParameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"metadata","nameLocation":"3695:8:16","nodeType":"VariableDeclaration","scope":2167,"src":"3680:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2163,"name":"bytes","nodeType":"ElementaryTypeName","src":"3680:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2164,"nodeType":"ArrayTypeName","src":"3680:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3679:25:16"},"scope":2258,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2173,"nodeType":"FunctionDefinition","src":"3882:49:16","nodes":[],"documentation":{"id":2168,"nodeType":"StructuredDocumentation","src":"3772:105:16","text":" @notice Set a new base URI for ERC1155 metadata.\n @param uri_ new base URI value"},"functionSelector":"55f804b3","implemented":false,"kind":"function","modifiers":[],"name":"setBaseURI","nameLocation":"3891:10:16","parameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"uri_","nameLocation":"3916:4:16","nodeType":"VariableDeclaration","scope":2173,"src":"3902:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2169,"name":"string","nodeType":"ElementaryTypeName","src":"3902:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3901:20:16"},"returnParameters":{"id":2172,"nodeType":"ParameterList","parameters":[],"src":"3930:0:16"},"scope":2258,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2181,"nodeType":"FunctionDefinition","src":"4191:73:16","nodes":[],"documentation":{"id":2174,"nodeType":"StructuredDocumentation","src":"3937:249:16","text":" @notice Mints smart vault tokens for receiver.\n @dev Requirements:\n - caller must have role ROLE_SMART_VAULT_MANAGER\n @param receiver REceiver of minted tokens.\n @param vaultShares Amount of tokens to mint."},"functionSelector":"f20046a8","implemented":false,"kind":"function","modifiers":[],"name":"mintVaultShares","nameLocation":"4200:15:16","parameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"receiver","nameLocation":"4224:8:16","nodeType":"VariableDeclaration","scope":2181,"src":"4216:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2175,"name":"address","nodeType":"ElementaryTypeName","src":"4216:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"vaultShares","nameLocation":"4242:11:16","nodeType":"VariableDeclaration","scope":2181,"src":"4234:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2177,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4215:39:16"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[],"src":"4263:0:16"},"scope":2258,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2195,"nodeType":"FunctionDefinition","src":"4705:166:16","nodes":[],"documentation":{"id":2182,"nodeType":"StructuredDocumentation","src":"4270:430:16","text":" @notice Burns smart vault tokens and releases strategy shares back to strategies.\n @dev Requirements:\n - caller must have role ROLE_SMART_VAULT_MANAGER\n @param owner Address for which to burn the tokens.\n @param vaultShares Amount of tokens to burn.\n @param strategies Strategies for which to release the strategy shares.\n @param shares Amounts of strategy shares to release."},"functionSelector":"e2281e0a","implemented":false,"kind":"function","modifiers":[],"name":"burnVaultShares","nameLocation":"4714:15:16","parameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"mutability":"mutable","name":"owner","nameLocation":"4747:5:16","nodeType":"VariableDeclaration","scope":2195,"src":"4739:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2183,"name":"address","nodeType":"ElementaryTypeName","src":"4739:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2186,"mutability":"mutable","name":"vaultShares","nameLocation":"4770:11:16","nodeType":"VariableDeclaration","scope":2195,"src":"4762:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"4762:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2189,"mutability":"mutable","name":"strategies","nameLocation":"4810:10:16","nodeType":"VariableDeclaration","scope":2195,"src":"4791:29:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2187,"name":"address","nodeType":"ElementaryTypeName","src":"4791:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2188,"nodeType":"ArrayTypeName","src":"4791:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2192,"mutability":"mutable","name":"shares","nameLocation":"4849:6:16","nodeType":"VariableDeclaration","scope":2195,"src":"4830:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2190,"name":"uint256","nodeType":"ElementaryTypeName","src":"4830:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2191,"nodeType":"ArrayTypeName","src":"4830:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4729:132:16"},"returnParameters":{"id":2194,"nodeType":"ParameterList","parameters":[],"src":"4870:0:16"},"scope":2258,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2206,"nodeType":"FunctionDefinition","src":"5245:113:16","nodes":[],"documentation":{"id":2196,"nodeType":"StructuredDocumentation","src":"4877:363:16","text":" @notice Mints a new withdrawal NFT.\n @dev Supply of minted NFT is NFT_MINTED_SHARES (for partial burning).\n Requirements:\n - caller must have role ROLE_SMART_VAULT_MANAGER\n @param receiver Address that will receive the NFT.\n @param metadata Metadata to store for minted NFT.\n @return id ID of the minted NFT."},"functionSelector":"56ba9454","implemented":false,"kind":"function","modifiers":[],"name":"mintWithdrawalNFT","nameLocation":"5254:17:16","parameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"receiver","nameLocation":"5280:8:16","nodeType":"VariableDeclaration","scope":2206,"src":"5272:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2197,"name":"address","nodeType":"ElementaryTypeName","src":"5272:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2201,"mutability":"mutable","name":"metadata","nameLocation":"5318:8:16","nodeType":"VariableDeclaration","scope":2206,"src":"5290:36:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalMetadata_$2112_calldata_ptr","typeString":"struct WithdrawalMetadata"},"typeName":{"id":2200,"nodeType":"UserDefinedTypeName","pathNode":{"id":2199,"name":"WithdrawalMetadata","nameLocations":["5290:18:16"],"nodeType":"IdentifierPath","referencedDeclaration":2112,"src":"5290:18:16"},"referencedDeclaration":2112,"src":"5290:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalMetadata_$2112_storage_ptr","typeString":"struct WithdrawalMetadata"}},"visibility":"internal"}],"src":"5271:56:16"},"returnParameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2204,"mutability":"mutable","name":"id","nameLocation":"5354:2:16","nodeType":"VariableDeclaration","scope":2206,"src":"5346:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2203,"name":"uint256","nodeType":"ElementaryTypeName","src":"5346:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5345:12:16"},"scope":2258,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2217,"nodeType":"FunctionDefinition","src":"5729:107:16","nodes":[],"documentation":{"id":2207,"nodeType":"StructuredDocumentation","src":"5364:360:16","text":" @notice Mints a new deposit NFT.\n @dev Supply of minted NFT is NFT_MINTED_SHARES (for partial burning).\n Requirements:\n - caller must have role ROLE_SMART_VAULT_MANAGER\n @param receiver Address that will receive the NFT.\n @param metadata Metadata to store for minted NFT.\n @return id ID of the minted NFT."},"functionSelector":"b4316087","implemented":false,"kind":"function","modifiers":[],"name":"mintDepositNFT","nameLocation":"5738:14:16","parameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"receiver","nameLocation":"5761:8:16","nodeType":"VariableDeclaration","scope":2217,"src":"5753:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2208,"name":"address","nodeType":"ElementaryTypeName","src":"5753:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"metadata","nameLocation":"5796:8:16","nodeType":"VariableDeclaration","scope":2217,"src":"5771:33:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_DepositMetadata_$2107_calldata_ptr","typeString":"struct DepositMetadata"},"typeName":{"id":2211,"nodeType":"UserDefinedTypeName","pathNode":{"id":2210,"name":"DepositMetadata","nameLocations":["5771:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":2107,"src":"5771:15:16"},"referencedDeclaration":2107,"src":"5771:15:16","typeDescriptions":{"typeIdentifier":"t_struct$_DepositMetadata_$2107_storage_ptr","typeString":"struct DepositMetadata"}},"visibility":"internal"}],"src":"5752:53:16"},"returnParameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"id","nameLocation":"5832:2:16","nodeType":"VariableDeclaration","scope":2217,"src":"5824:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2214,"name":"uint256","nodeType":"ElementaryTypeName","src":"5824:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5823:12:16"},"scope":2258,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2232,"nodeType":"FunctionDefinition","src":"6228:150:16","nodes":[],"documentation":{"id":2218,"nodeType":"StructuredDocumentation","src":"5842:381:16","text":" @notice Burns NFTs and returns their metadata.\n Allows for partial burning.\n @dev Requirements:\n - caller must have role ROLE_SMART_VAULT_MANAGER\n @param owner Owner of NFTs to burn.\n @param nftIds IDs of NFTs to burn.\n @param nftAmounts NFT shares to burn (partial burn).\n @return metadata Metadata for each burned NFT."},"functionSelector":"a99fb771","implemented":false,"kind":"function","modifiers":[],"name":"burnNFTs","nameLocation":"6237:8:16","parameters":{"id":2227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2220,"mutability":"mutable","name":"owner","nameLocation":"6254:5:16","nodeType":"VariableDeclaration","scope":2232,"src":"6246:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2219,"name":"address","nodeType":"ElementaryTypeName","src":"6246:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2223,"mutability":"mutable","name":"nftIds","nameLocation":"6280:6:16","nodeType":"VariableDeclaration","scope":2232,"src":"6261:25:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2221,"name":"uint256","nodeType":"ElementaryTypeName","src":"6261:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2222,"nodeType":"ArrayTypeName","src":"6261:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2226,"mutability":"mutable","name":"nftAmounts","nameLocation":"6307:10:16","nodeType":"VariableDeclaration","scope":2232,"src":"6288:29:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"6288:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2225,"nodeType":"ArrayTypeName","src":"6288:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6245:73:16"},"returnParameters":{"id":2231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2230,"mutability":"mutable","name":"metadata","nameLocation":"6368:8:16","nodeType":"VariableDeclaration","scope":2232,"src":"6353:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2228,"name":"bytes","nodeType":"ElementaryTypeName","src":"6353:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2229,"nodeType":"ArrayTypeName","src":"6353:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6352:25:16"},"scope":2258,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2244,"nodeType":"FunctionDefinition","src":"6744:103:16","nodes":[],"documentation":{"id":2233,"nodeType":"StructuredDocumentation","src":"6384:355:16","text":" @notice Transfers smart vault tokens.\n @dev Requirements:\n - caller must have role ROLE_SMART_VAULT_MANAGER\n @param from Spender and owner of tokens.\n @param to Address to which tokens will be transferred.\n @param amount Amount of tokens to transfer.\n @return success True if transfer was successful."},"functionSelector":"2acf4637","implemented":false,"kind":"function","modifiers":[],"name":"transferFromSpender","nameLocation":"6753:19:16","parameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"from","nameLocation":"6781:4:16","nodeType":"VariableDeclaration","scope":2244,"src":"6773:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2234,"name":"address","nodeType":"ElementaryTypeName","src":"6773:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2237,"mutability":"mutable","name":"to","nameLocation":"6795:2:16","nodeType":"VariableDeclaration","scope":2244,"src":"6787:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2236,"name":"address","nodeType":"ElementaryTypeName","src":"6787:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"amount","nameLocation":"6807:6:16","nodeType":"VariableDeclaration","scope":2244,"src":"6799:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"6799:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6772:42:16"},"returnParameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2242,"mutability":"mutable","name":"success","nameLocation":"6838:7:16","nodeType":"VariableDeclaration","scope":2244,"src":"6833:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2241,"name":"bool","nodeType":"ElementaryTypeName","src":"6833:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6832:14:16"},"scope":2258,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2252,"nodeType":"FunctionDefinition","src":"7110:63:16","nodes":[],"documentation":{"id":2245,"nodeType":"StructuredDocumentation","src":"6853:252:16","text":" @notice Transfers unclaimed shares to claimer.\n @dev Requirements:\n - caller must have role ROLE_SMART_VAULT_MANAGER\n @param claimer Address that claims the shares.\n @param amount Amount of shares to transfer."},"functionSelector":"2ce5183f","implemented":false,"kind":"function","modifiers":[],"name":"claimShares","nameLocation":"7119:11:16","parameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"claimer","nameLocation":"7139:7:16","nodeType":"VariableDeclaration","scope":2252,"src":"7131:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2246,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2249,"mutability":"mutable","name":"amount","nameLocation":"7156:6:16","nodeType":"VariableDeclaration","scope":2252,"src":"7148:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"7148:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:33:16"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[],"src":"7172:0:16"},"scope":2258,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2257,"nodeType":"EventDefinition","src":"7229:37:16","nodes":[],"anonymous":false,"documentation":{"id":2253,"nodeType":"StructuredDocumentation","src":"7179:45:16","text":"@notice Emitted when base URI is changed."},"eventSelector":"5411e8ebf1636d9e83d5fc4900bf80cbac82e8790da2a4c94db4895e889eedf6","name":"BaseURIChanged","nameLocation":"7235:14:16","parameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"indexed":false,"mutability":"mutable","name":"baseUri","nameLocation":"7257:7:16","nodeType":"VariableDeclaration","scope":2257,"src":"7250:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2254,"name":"string","nodeType":"ElementaryTypeName","src":"7250:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7249:16:16"}}],"abstract":false,"baseContracts":[{"baseName":{"id":2120,"name":"IERC20Upgradeable","nameLocations":["2184:17:16"],"nodeType":"IdentifierPath","referencedDeclaration":1452,"src":"2184:17:16"},"id":2121,"nodeType":"InheritanceSpecifier","src":"2184:17:16"},{"baseName":{"id":2122,"name":"IERC1155MetadataURIUpgradeable","nameLocations":["2203:30:16"],"nodeType":"IdentifierPath","referencedDeclaration":1121,"src":"2203:30:16"},"id":2123,"nodeType":"InheritanceSpecifier","src":"2203:30:16"}],"canonicalName":"ISmartVault","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[2258,1121,1284,1296,1452],"name":"ISmartVault","nameLocation":"2169:11:16","scope":2259,"usedErrors":[]}],"license":"BUSL-1.1"}},"src/interfaces/ISmartVaultManager.sol":{"id":17,"ast":{"absolutePath":"src/interfaces/ISmartVaultManager.sol","id":2645,"exportedSymbols":{"DEPOSIT_FEE_MAX":[590],"DepositBag":[843],"DepositExtras":[857],"DepositFeeTooLarge":[2298],"DepositIdOverflow":[2073],"DepositMetadata":[2107],"DepositSyncResult":[879],"ECOSYSTEM_FEE_MAX":[598],"ExchangeNotAllowed":[2658],"FULL_PERCENT":[565],"FULL_PERCENT_INT":[569],"FlushIndex":[2357],"GhostVault":[2307],"IDepositManager":[1106],"IERC1155MetadataURIUpgradeable":[1121],"IERC1155Upgradeable":[1284],"IERC165Upgradeable":[1296],"IERC20Upgradeable":[1452],"INITIAL_LOCKED_SHARES":[668],"INITIAL_LOCKED_SHARES_ADDRESS":[675],"INITIAL_SHARE_MULTIPLIER":[662],"ISmartVault":[2258],"ISmartVaultManager":[2644],"ISmartVaultRegistry":[2367],"ISwapper":[2724],"IWithdrawalManager":[2904],"InsufficientBalance":[2271],"InvalidAssetLengths":[819],"InvalidDepositNftId":[2081],"InvalidNftArrayLength":[822],"InvalidNftBalance":[2091],"InvalidNftTransferAmount":[2096],"InvalidWithdrawalNftId":[2086],"MANAGEMENT_FEE_MAX":[586],"MAXIMAL_DEPOSIT_ID":[636],"MAXIMAL_WITHDRAWAL_ID":[644],"MAX_ACTION_COUNT":[683],"MAX_DHW_BASE_YIELD_LIMIT":[658],"MAX_GUARD_COUNT":[679],"MAX_RISK_SCORE":[606],"MAX_RISK_TOLERANCE":[614],"MIN_RISK_SCORE":[610],"MIN_RISK_TOLERANCE":[619],"ManagementFeeTooLarge":[2285],"NFT_MINTED_SHARES":[650],"NULL_ASSET_GROUP_ID":[687],"NoDepositsToRecover":[828],"NotGhostVault":[831],"NotSwapper":[2663],"NothingToDeposit":[825],"NothingToFlush":[2274],"PerformanceFeeTooLarge":[2290],"ReallocateParamBag":[2352],"ReallocationParametersExpired":[2310],"RedeemBag":[2743],"RedeemExtras":[2767],"RedeemFastExtras":[2758],"RedeemForNotAllowed":[2301],"RequestType":[2912],"SECONDS_IN_YEAR":[557],"SECONDS_IN_YEAR_INT":[561],"STATIC_RISK_PROVIDER":[626],"STATIC_RISK_SCORE":[630],"STRATEGY_COUNT_CAP":[654],"SV_PERFORMANCE_FEE_MAX":[594],"SenderEqualsRecipient":[2099],"SimulateDepositParams":[901],"SmartVaultAlreadyRegistered":[2277],"SmartVaultFees":[2119],"SmartVaultFeesCollected":[864],"SmartVaultNotRegisteredYet":[2280],"SmartVaultRegistrationForm":[2325],"StaticAllocationSmartVault":[2293],"SwapInfo":[2653],"TREASURY_FEE_MAX":[602],"VaultNotSynced":[2304],"WithdrawalClaimBag":[2787],"WithdrawalIdOverflow":[2076],"WithdrawalMetadata":[2112],"WithdrawalNftNotSyncedYet":[2732],"YIELD_FULL_PERCENT":[582],"YIELD_FULL_PERCENT_INT":[575],"uint16a16":[2916],"uint16a16Lib":[3058]},"nodeType":"SourceUnit","src":"37:14993:17","nodes":[{"id":2260,"nodeType":"PragmaDirective","src":"37:23:17","nodes":[],"literals":["solidity","0.8",".17"]},{"id":2261,"nodeType":"ImportDirective","src":"62:31:17","nodes":[],"absolutePath":"src/interfaces/IDepositManager.sol","file":"./IDepositManager.sol","nameLocation":"-1:-1:-1","scope":2645,"sourceUnit":1107,"symbolAliases":[],"unitAlias":""},{"id":2262,"nodeType":"ImportDirective","src":"94:27:17","nodes":[],"absolutePath":"src/interfaces/ISmartVault.sol","file":"./ISmartVault.sol","nameLocation":"-1:-1:-1","scope":2645,"sourceUnit":2259,"symbolAliases":[],"unitAlias":""},{"id":2263,"nodeType":"ImportDirective","src":"122:24:17","nodes":[],"absolutePath":"src/interfaces/ISwapper.sol","file":"./ISwapper.sol","nameLocation":"-1:-1:-1","scope":2645,"sourceUnit":2725,"symbolAliases":[],"unitAlias":""},{"id":2264,"nodeType":"ImportDirective","src":"147:34:17","nodes":[],"absolutePath":"src/interfaces/IWithdrawalManager.sol","file":"./IWithdrawalManager.sol","nameLocation":"-1:-1:-1","scope":2645,"sourceUnit":2905,"symbolAliases":[],"unitAlias":""},{"id":2271,"nodeType":"ErrorDefinition","src":"302:63:17","nodes":[],"documentation":{"id":2265,"nodeType":"StructuredDocumentation","src":"219:82:17","text":" @notice Used when user has insufficient balance for redeemal of shares."},"errorSelector":"cf479181","name":"InsufficientBalance","nameLocation":"308:19:17","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"available","nameLocation":"336:9:17","nodeType":"VariableDeclaration","scope":2271,"src":"328:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"328:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2269,"mutability":"mutable","name":"required","nameLocation":"355:8:17","nodeType":"VariableDeclaration","scope":2271,"src":"347:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2268,"name":"uint256","nodeType":"ElementaryTypeName","src":"347:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"327:37:17"}},{"id":2274,"nodeType":"ErrorDefinition","src":"423:23:17","nodes":[],"documentation":{"id":2272,"nodeType":"StructuredDocumentation","src":"367:55:17","text":" @notice Used when there is nothing to flush."},"errorSelector":"eb694a3c","name":"NothingToFlush","nameLocation":"429:14:17","parameters":{"id":2273,"nodeType":"ParameterList","parameters":[],"src":"443:2:17"}},{"id":2277,"nodeType":"ErrorDefinition","src":"539:36:17","nodes":[],"documentation":{"id":2275,"nodeType":"StructuredDocumentation","src":"448:90:17","text":" @notice Used when trying to register a smart vault that was already registered."},"errorSelector":"dafba3c4","name":"SmartVaultAlreadyRegistered","nameLocation":"545:27:17","parameters":{"id":2276,"nodeType":"ParameterList","parameters":[],"src":"572:2:17"}},{"id":2280,"nodeType":"ErrorDefinition","src":"679:35:17","nodes":[],"documentation":{"id":2278,"nodeType":"StructuredDocumentation","src":"577:101:17","text":" @notice Used when trying to perform an action for smart vault that was not registered yet."},"errorSelector":"cbf256f3","name":"SmartVaultNotRegisteredYet","nameLocation":"685:26:17","parameters":{"id":2279,"nodeType":"ParameterList","parameters":[],"src":"711:2:17"}},{"id":2285,"nodeType":"ErrorDefinition","src":"808:48:17","nodes":[],"documentation":{"id":2281,"nodeType":"StructuredDocumentation","src":"716:91:17","text":" @notice Used when user tries to configure a vault with too large management fee."},"errorSelector":"ab5e6584","name":"ManagementFeeTooLarge","nameLocation":"814:21:17","parameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"mgmtFeePct","nameLocation":"844:10:17","nodeType":"VariableDeclaration","scope":2285,"src":"836:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2282,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"835:20:17"}},{"id":2290,"nodeType":"ErrorDefinition","src":"951:56:17","nodes":[],"documentation":{"id":2286,"nodeType":"StructuredDocumentation","src":"858:92:17","text":" @notice Used when user tries to configure a vault with too large performance fee."},"errorSelector":"af603d45","name":"PerformanceFeeTooLarge","nameLocation":"957:22:17","parameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"performanceFeePct","nameLocation":"988:17:17","nodeType":"VariableDeclaration","scope":2290,"src":"980:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"980:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"979:27:17"}},{"id":2293,"nodeType":"ErrorDefinition","src":"1097:35:17","nodes":[],"documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"1009:87:17","text":" @notice Used when smart vault in reallocation has statically set allocation."},"errorSelector":"337ce502","name":"StaticAllocationSmartVault","nameLocation":"1103:26:17","parameters":{"id":2292,"nodeType":"ParameterList","parameters":[],"src":"1129:2:17"}},{"id":2298,"nodeType":"ErrorDefinition","src":"1223:48:17","nodes":[],"documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"1134:88:17","text":" @notice Used when user tries to configure a vault with too large deposit fee."},"errorSelector":"37291fce","name":"DepositFeeTooLarge","nameLocation":"1229:18:17","parameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"depositFeePct","nameLocation":"1256:13:17","nodeType":"VariableDeclaration","scope":2298,"src":"1248:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1248:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1247:23:17"}},{"id":2301,"nodeType":"ErrorDefinition","src":"1381:28:17","nodes":[],"documentation":{"id":2299,"nodeType":"StructuredDocumentation","src":"1273:107:17","text":" @notice Used when user tries redeem on behalf of another user, but the vault does not support it"},"errorSelector":"b6ad2a37","name":"RedeemForNotAllowed","nameLocation":"1387:19:17","parameters":{"id":2300,"nodeType":"ParameterList","parameters":[],"src":"1406:2:17"}},{"id":2304,"nodeType":"ErrorDefinition","src":"1495:23:17","nodes":[],"documentation":{"id":2302,"nodeType":"StructuredDocumentation","src":"1411:83:17","text":" @notice Used when trying to flush a vault that still needs to be synced."},"errorSelector":"835fa209","name":"VaultNotSynced","nameLocation":"1501:14:17","parameters":{"id":2303,"nodeType":"ParameterList","parameters":[],"src":"1515:2:17"}},{"id":2307,"nodeType":"ErrorDefinition","src":"1641:19:17","nodes":[],"documentation":{"id":2305,"nodeType":"StructuredDocumentation","src":"1520:120:17","text":" @notice Used when trying to deposit into, redeem from, or flush a smart vault that has only ghost strategies."},"errorSelector":"08c6ead3","name":"GhostVault","nameLocation":"1647:10:17","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[],"src":"1657:2:17"}},{"id":2310,"nodeType":"ErrorDefinition","src":"1739:38:17","nodes":[],"documentation":{"id":2308,"nodeType":"StructuredDocumentation","src":"1662:76:17","text":" @notice Used when reallocation is called with expired parameters."},"errorSelector":"ffea2f96","name":"ReallocationParametersExpired","nameLocation":"1745:29:17","parameters":{"id":2309,"nodeType":"ParameterList","parameters":[],"src":"1774:2:17"}},{"id":2325,"nodeType":"StructDefinition","src":"2339:208:17","nodes":[],"canonicalName":"SmartVaultRegistrationForm","members":[{"constant":false,"id":2312,"mutability":"mutable","name":"assetGroupId","nameLocation":"2387:12:17","nodeType":"VariableDeclaration","scope":2325,"src":"2379:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"2379:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2315,"mutability":"mutable","name":"strategies","nameLocation":"2415:10:17","nodeType":"VariableDeclaration","scope":2325,"src":"2405:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2313,"name":"address","nodeType":"ElementaryTypeName","src":"2405:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2314,"nodeType":"ArrayTypeName","src":"2405:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2318,"mutability":"mutable","name":"strategyAllocation","nameLocation":"2441:18:17","nodeType":"VariableDeclaration","scope":2325,"src":"2431:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"},"typeName":{"id":2317,"nodeType":"UserDefinedTypeName","pathNode":{"id":2316,"name":"uint16a16","nameLocations":["2431:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"2431:9:17"},"referencedDeclaration":2916,"src":"2431:9:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"visibility":"internal"},{"constant":false,"id":2320,"mutability":"mutable","name":"managementFeePct","nameLocation":"2472:16:17","nodeType":"VariableDeclaration","scope":2325,"src":"2465:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2319,"name":"uint16","nodeType":"ElementaryTypeName","src":"2465:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2322,"mutability":"mutable","name":"depositFeePct","nameLocation":"2501:13:17","nodeType":"VariableDeclaration","scope":2325,"src":"2494:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2321,"name":"uint16","nodeType":"ElementaryTypeName","src":"2494:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2324,"mutability":"mutable","name":"performanceFeePct","nameLocation":"2527:17:17","nodeType":"VariableDeclaration","scope":2325,"src":"2520:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2323,"name":"uint16","nodeType":"ElementaryTypeName","src":"2520:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"SmartVaultRegistrationForm","nameLocation":"2346:26:17","scope":2645,"visibility":"public"},{"id":2352,"nodeType":"StructDefinition","src":"3306:244:17","nodes":[],"canonicalName":"ReallocateParamBag","members":[{"constant":false,"id":2328,"mutability":"mutable","name":"smartVaults","nameLocation":"3348:11:17","nodeType":"VariableDeclaration","scope":2352,"src":"3338:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2326,"name":"address","nodeType":"ElementaryTypeName","src":"3338:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2327,"nodeType":"ArrayTypeName","src":"3338:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2331,"mutability":"mutable","name":"strategies","nameLocation":"3375:10:17","nodeType":"VariableDeclaration","scope":2352,"src":"3365:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2329,"name":"address","nodeType":"ElementaryTypeName","src":"3365:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2330,"nodeType":"ArrayTypeName","src":"3365:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2336,"mutability":"mutable","name":"swapInfo","nameLocation":"3404:8:17","nodeType":"VariableDeclaration","scope":2352,"src":"3391:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_struct$_SwapInfo_$2653_storage_$dyn_storage_$dyn_storage_ptr","typeString":"struct SwapInfo[][]"},"typeName":{"baseType":{"baseType":{"id":2333,"nodeType":"UserDefinedTypeName","pathNode":{"id":2332,"name":"SwapInfo","nameLocations":["3391:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2653,"src":"3391:8:17"},"referencedDeclaration":2653,"src":"3391:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_SwapInfo_$2653_storage_ptr","typeString":"struct SwapInfo"}},"id":2334,"nodeType":"ArrayTypeName","src":"3391:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapInfo_$2653_storage_$dyn_storage_ptr","typeString":"struct SwapInfo[]"}},"id":2335,"nodeType":"ArrayTypeName","src":"3391:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_struct$_SwapInfo_$2653_storage_$dyn_storage_$dyn_storage_ptr","typeString":"struct SwapInfo[][]"}},"visibility":"internal"},{"constant":false,"id":2340,"mutability":"mutable","name":"depositSlippages","nameLocation":"3430:16:17","nodeType":"VariableDeclaration","scope":2352,"src":"3418:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"3418:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2338,"nodeType":"ArrayTypeName","src":"3418:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":2339,"nodeType":"ArrayTypeName","src":"3418:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"},{"constant":false,"id":2344,"mutability":"mutable","name":"withdrawalSlippages","nameLocation":"3464:19:17","nodeType":"VariableDeclaration","scope":2352,"src":"3452:31:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":2341,"name":"uint256","nodeType":"ElementaryTypeName","src":"3452:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2342,"nodeType":"ArrayTypeName","src":"3452:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":2343,"nodeType":"ArrayTypeName","src":"3452:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"},{"constant":false,"id":2349,"mutability":"mutable","name":"exchangeRateSlippages","nameLocation":"3502:21:17","nodeType":"VariableDeclaration","scope":2352,"src":"3489:34:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$dyn_storage_ptr","typeString":"uint256[2][]"},"typeName":{"baseType":{"baseType":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2347,"length":{"hexValue":"32","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3497:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"3489:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"id":2348,"nodeType":"ArrayTypeName","src":"3489:12:17","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$2_storage_$dyn_storage_ptr","typeString":"uint256[2][]"}},"visibility":"internal"},{"constant":false,"id":2351,"mutability":"mutable","name":"validUntil","nameLocation":"3537:10:17","nodeType":"VariableDeclaration","scope":2352,"src":"3529:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"3529:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReallocateParamBag","nameLocation":"3313:18:17","scope":2645,"visibility":"public"},{"id":2357,"nodeType":"StructDefinition","src":"3552:62:17","nodes":[],"canonicalName":"FlushIndex","members":[{"constant":false,"id":2354,"mutability":"mutable","name":"current","nameLocation":"3584:7:17","nodeType":"VariableDeclaration","scope":2357,"src":"3576:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2353,"name":"uint128","nodeType":"ElementaryTypeName","src":"3576:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2356,"mutability":"mutable","name":"toSync","nameLocation":"3605:6:17","nodeType":"VariableDeclaration","scope":2357,"src":"3597:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2355,"name":"uint128","nodeType":"ElementaryTypeName","src":"3597:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"FlushIndex","nameLocation":"3559:10:17","scope":2645,"visibility":"public"},{"id":2367,"nodeType":"ContractDefinition","src":"3656:433:17","nodes":[{"id":2366,"nodeType":"FunctionDefinition","src":"3976:111:17","nodes":[],"documentation":{"id":2358,"nodeType":"StructuredDocumentation","src":"3692:279:17","text":" @notice Registers smart vault into the Spool protocol.\n @dev Requirements:\n - caller must have role ROLE_SMART_VAULT_INTEGRATOR\n @param smartVault Smart vault to register.\n @param registrationForm Form with information for registration."},"functionSelector":"146c6743","implemented":false,"kind":"function","modifiers":[],"name":"registerSmartVault","nameLocation":"3985:18:17","parameters":{"id":2364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"smartVault","nameLocation":"4012:10:17","nodeType":"VariableDeclaration","scope":2366,"src":"4004:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2359,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2363,"mutability":"mutable","name":"registrationForm","nameLocation":"4060:16:17","nodeType":"VariableDeclaration","scope":2366,"src":"4024:52:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultRegistrationForm_$2325_calldata_ptr","typeString":"struct SmartVaultRegistrationForm"},"typeName":{"id":2362,"nodeType":"UserDefinedTypeName","pathNode":{"id":2361,"name":"SmartVaultRegistrationForm","nameLocations":["4024:26:17"],"nodeType":"IdentifierPath","referencedDeclaration":2325,"src":"4024:26:17"},"referencedDeclaration":2325,"src":"4024:26:17","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultRegistrationForm_$2325_storage_ptr","typeString":"struct SmartVaultRegistrationForm"}},"visibility":"internal"}],"src":"4003:74:17"},"returnParameters":{"id":2365,"nodeType":"ParameterList","parameters":[],"src":"4086:0:17"},"scope":2367,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"ISmartVaultRegistry","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[2367],"name":"ISmartVaultRegistry","nameLocation":"3666:19:17","scope":2645,"usedErrors":[]},{"id":2644,"nodeType":"ContractDefinition","src":"4091:10939:17","nodes":[{"id":2379,"nodeType":"FunctionDefinition","src":"4298:101:17","nodes":[],"documentation":{"id":2370,"nodeType":"StructuredDocumentation","src":"4206:87:17","text":" @dev Check whether all DHW runs were completed for given flush index"},"functionSelector":"ea52c910","implemented":false,"kind":"function","modifiers":[],"name":"areAllDhwRunsCompleted","nameLocation":"4307:22:17","parameters":{"id":2375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"smartVault","nameLocation":"4338:10:17","nodeType":"VariableDeclaration","scope":2379,"src":"4330:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2371,"name":"address","nodeType":"ElementaryTypeName","src":"4330:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2374,"mutability":"mutable","name":"flushIndex","nameLocation":"4358:10:17","nodeType":"VariableDeclaration","scope":2379,"src":"4350:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2373,"name":"uint256","nodeType":"ElementaryTypeName","src":"4350:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4329:40:17"},"returnParameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2379,"src":"4393:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2376,"name":"bool","nodeType":"ElementaryTypeName","src":"4393:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4392:6:17"},"scope":2644,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2388,"nodeType":"FunctionDefinition","src":"4524:93:17","nodes":[],"documentation":{"id":2380,"nodeType":"StructuredDocumentation","src":"4405:114:17","text":" @notice Get smartVault fees\n @param smartVault Smart vault.\n @return SmartVaultFees"},"functionSelector":"5aa090a0","implemented":false,"kind":"function","modifiers":[],"name":"getSmartVaultFees","nameLocation":"4533:17:17","parameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"smartVault","nameLocation":"4559:10:17","nodeType":"VariableDeclaration","scope":2388,"src":"4551:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2381,"name":"address","nodeType":"ElementaryTypeName","src":"4551:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4550:20:17"},"returnParameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2388,"src":"4594:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFees_$2119_memory_ptr","typeString":"struct SmartVaultFees"},"typeName":{"id":2385,"nodeType":"UserDefinedTypeName","pathNode":{"id":2384,"name":"SmartVaultFees","nameLocations":["4594:14:17"],"nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"4594:14:17"},"referencedDeclaration":2119,"src":"4594:14:17","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultFees_$2119_storage_ptr","typeString":"struct SmartVaultFees"}},"visibility":"internal"}],"src":"4593:23:17"},"scope":2644,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2399,"nodeType":"FunctionDefinition","src":"4840:105:17","nodes":[],"documentation":{"id":2389,"nodeType":"StructuredDocumentation","src":"4623:212:17","text":" @notice Gets do-hard-work indexes.\n @param smartVault Smart vault.\n @param flushIndex Flush index.\n @return dhwIndexes Do-hard-work indexes for flush index of the smart vault."},"functionSelector":"e90173bd","implemented":false,"kind":"function","modifiers":[],"name":"dhwIndexes","nameLocation":"4849:10:17","parameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"smartVault","nameLocation":"4868:10:17","nodeType":"VariableDeclaration","scope":2399,"src":"4860:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2390,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2393,"mutability":"mutable","name":"flushIndex","nameLocation":"4888:10:17","nodeType":"VariableDeclaration","scope":2399,"src":"4880:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2392,"name":"uint256","nodeType":"ElementaryTypeName","src":"4880:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:40:17"},"returnParameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2397,"mutability":"mutable","name":"dhwIndexes","nameLocation":"4933:10:17","nodeType":"VariableDeclaration","scope":2399,"src":"4923:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"},"typeName":{"id":2396,"nodeType":"UserDefinedTypeName","pathNode":{"id":2395,"name":"uint16a16","nameLocations":["4923:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"4923:9:17"},"referencedDeclaration":2916,"src":"4923:9:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"visibility":"internal"}],"src":"4922:22:17"},"scope":2644,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2407,"nodeType":"FunctionDefinition","src":"5129:92:17","nodes":[],"documentation":{"id":2400,"nodeType":"StructuredDocumentation","src":"4951:173:17","text":" @notice Gets latest flush index for a smart vault.\n @param smartVault Smart vault.\n @return flushIndex Latest flush index for the smart vault."},"functionSelector":"a1280e4d","implemented":false,"kind":"function","modifiers":[],"name":"getLatestFlushIndex","nameLocation":"5138:19:17","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"smartVault","nameLocation":"5166:10:17","nodeType":"VariableDeclaration","scope":2407,"src":"5158:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2401,"name":"address","nodeType":"ElementaryTypeName","src":"5158:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5157:20:17"},"returnParameters":{"id":2406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2405,"mutability":"mutable","name":"flushIndex","nameLocation":"5209:10:17","nodeType":"VariableDeclaration","scope":2407,"src":"5201:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"5201:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5200:20:17"},"scope":2644,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2416,"nodeType":"FunctionDefinition","src":"5407:86:17","nodes":[],"documentation":{"id":2408,"nodeType":"StructuredDocumentation","src":"5227:175:17","text":" @notice Gets strategy allocation for a smart vault.\n @param smartVault Smart vault.\n @return allocation Strategy allocation for the smart vault."},"functionSelector":"52a9039c","implemented":false,"kind":"function","modifiers":[],"name":"allocations","nameLocation":"5416:11:17","parameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2410,"mutability":"mutable","name":"smartVault","nameLocation":"5436:10:17","nodeType":"VariableDeclaration","scope":2416,"src":"5428:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2409,"name":"address","nodeType":"ElementaryTypeName","src":"5428:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5427:20:17"},"returnParameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"allocation","nameLocation":"5481:10:17","nodeType":"VariableDeclaration","scope":2416,"src":"5471:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"},"typeName":{"id":2413,"nodeType":"UserDefinedTypeName","pathNode":{"id":2412,"name":"uint16a16","nameLocations":["5471:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"5471:9:17"},"referencedDeclaration":2916,"src":"5471:9:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"visibility":"internal"}],"src":"5470:22:17"},"scope":2644,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2425,"nodeType":"FunctionDefinition","src":"5665:92:17","nodes":[],"documentation":{"id":2417,"nodeType":"StructuredDocumentation","src":"5499:161:17","text":" @notice Gets strategies used by a smart vault.\n @param smartVault Smart vault.\n @return strategies Strategies for the smart vault."},"functionSelector":"39ebf823","implemented":false,"kind":"function","modifiers":[],"name":"strategies","nameLocation":"5674:10:17","parameters":{"id":2420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"smartVault","nameLocation":"5693:10:17","nodeType":"VariableDeclaration","scope":2425,"src":"5685:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2418,"name":"address","nodeType":"ElementaryTypeName","src":"5685:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5684:20:17"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2423,"mutability":"mutable","name":"strategies","nameLocation":"5745:10:17","nodeType":"VariableDeclaration","scope":2425,"src":"5728:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2421,"name":"address","nodeType":"ElementaryTypeName","src":"5728:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2422,"nodeType":"ArrayTypeName","src":"5728:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"5727:29:17"},"scope":2644,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2433,"nodeType":"FunctionDefinition","src":"5947:87:17","nodes":[],"documentation":{"id":2426,"nodeType":"StructuredDocumentation","src":"5763:179:17","text":" @notice Gets asest group used by a smart vault.\n @param smartVault Smart vault.\n @return assetGroupId ID of the asset group used by the smart vault."},"functionSelector":"6e6462d6","implemented":false,"kind":"function","modifiers":[],"name":"assetGroupId","nameLocation":"5956:12:17","parameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2428,"mutability":"mutable","name":"smartVault","nameLocation":"5977:10:17","nodeType":"VariableDeclaration","scope":2433,"src":"5969:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2427,"name":"address","nodeType":"ElementaryTypeName","src":"5969:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5968:20:17"},"returnParameters":{"id":2432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"assetGroupId","nameLocation":"6020:12:17","nodeType":"VariableDeclaration","scope":2433,"src":"6012:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2430,"name":"uint256","nodeType":"ElementaryTypeName","src":"6012:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6011:22:17"},"scope":2644,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2442,"nodeType":"FunctionDefinition","src":"6221:89:17","nodes":[],"documentation":{"id":2434,"nodeType":"StructuredDocumentation","src":"6040:176:17","text":" @notice Gets required deposit ratio for a smart vault.\n @param smartVault Smart vault.\n @return ratio Required deposit ratio for the smart vault."},"functionSelector":"f8fdca7a","implemented":false,"kind":"function","modifiers":[],"name":"depositRatio","nameLocation":"6230:12:17","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"smartVault","nameLocation":"6251:10:17","nodeType":"VariableDeclaration","scope":2442,"src":"6243:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2435,"name":"address","nodeType":"ElementaryTypeName","src":"6243:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6242:20:17"},"returnParameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2440,"mutability":"mutable","name":"ratio","nameLocation":"6303:5:17","nodeType":"VariableDeclaration","scope":2442,"src":"6286:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2438,"name":"uint256","nodeType":"ElementaryTypeName","src":"6286:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2439,"nodeType":"ArrayTypeName","src":"6286:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6285:24:17"},"scope":2644,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2448,"nodeType":"FunctionDefinition","src":"6514:54:17","nodes":[],"documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"6377:132:17","text":" @notice Flushes deposits and withdrawal for the next do-hard-work.\n @param smartVault Smart vault to flush."},"functionSelector":"0d574535","implemented":false,"kind":"function","modifiers":[],"name":"flushSmartVault","nameLocation":"6523:15:17","parameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"smartVault","nameLocation":"6547:10:17","nodeType":"VariableDeclaration","scope":2448,"src":"6539:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2444,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6538:20:17"},"returnParameters":{"id":2447,"nodeType":"ParameterList","parameters":[],"src":"6567:0:17"},"scope":2644,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2455,"nodeType":"FunctionDefinition","src":"6932:75:17","nodes":[],"documentation":{"id":2449,"nodeType":"StructuredDocumentation","src":"6574:353:17","text":" @notice Reallocates smart vaults.\n @dev Requirements:\n - caller must have a ROLE_REALLOCATOR role\n - smart vaults must be registered\n - smart vaults must use same asset group\n - strategies must represent a set of strategies used by smart vaults\n @param reallocateParams Paramaters for reallocation."},"functionSelector":"fe19c168","implemented":false,"kind":"function","modifiers":[],"name":"reallocate","nameLocation":"6941:10:17","parameters":{"id":2453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2452,"mutability":"mutable","name":"reallocateParams","nameLocation":"6980:16:17","nodeType":"VariableDeclaration","scope":2455,"src":"6952:44:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ReallocateParamBag_$2352_calldata_ptr","typeString":"struct ReallocateParamBag"},"typeName":{"id":2451,"nodeType":"UserDefinedTypeName","pathNode":{"id":2450,"name":"ReallocateParamBag","nameLocations":["6952:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":2352,"src":"6952:18:17"},"referencedDeclaration":2352,"src":"6952:18:17","typeDescriptions":{"typeIdentifier":"t_struct$_ReallocateParamBag_$2352_storage_ptr","typeString":"struct ReallocateParamBag"}},"visibility":"internal"}],"src":"6951:46:17"},"returnParameters":{"id":2454,"nodeType":"ParameterList","parameters":[],"src":"7006:0:17"},"scope":2644,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2466,"nodeType":"FunctionDefinition","src":"7459:110:17","nodes":[],"documentation":{"id":2456,"nodeType":"StructuredDocumentation","src":"7013:441:17","text":" @notice Removes strategy from vaults, and optionally removes it from the system as well.\n @dev Requirements:\n - caller must have role ROLE_SPOOL_ADMIN\n - the strategy has to be active (requires ROLE_STRATEGY)\n @param strategy Strategy address to remove.\n @param vaults Array of vaults from which to remove the strategy\n @param disableStrategy Also disable the strategy across the system"},"functionSelector":"a1bd9cc1","implemented":false,"kind":"function","modifiers":[],"name":"removeStrategyFromVaults","nameLocation":"7468:24:17","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"strategy","nameLocation":"7501:8:17","nodeType":"VariableDeclaration","scope":2466,"src":"7493:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2457,"name":"address","nodeType":"ElementaryTypeName","src":"7493:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2461,"mutability":"mutable","name":"vaults","nameLocation":"7530:6:17","nodeType":"VariableDeclaration","scope":2466,"src":"7511:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2459,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2460,"nodeType":"ArrayTypeName","src":"7511:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"disableStrategy","nameLocation":"7543:15:17","nodeType":"VariableDeclaration","scope":2466,"src":"7538:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2462,"name":"bool","nodeType":"ElementaryTypeName","src":"7538:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7492:67:17"},"returnParameters":{"id":2465,"nodeType":"ParameterList","parameters":[],"src":"7568:0:17"},"scope":2644,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2474,"nodeType":"FunctionDefinition","src":"7828:73:17","nodes":[],"documentation":{"id":2467,"nodeType":"StructuredDocumentation","src":"7575:248:17","text":" @notice Syncs smart vault with strategies.\n @param smartVault Smart vault to sync.\n @param revertIfError If true, sync will revert if every flush index cannot be synced; if false it will sync all flush indexes it can."},"functionSelector":"73bf0e50","implemented":false,"kind":"function","modifiers":[],"name":"syncSmartVault","nameLocation":"7837:14:17","parameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"smartVault","nameLocation":"7860:10:17","nodeType":"VariableDeclaration","scope":2474,"src":"7852:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2468,"name":"address","nodeType":"ElementaryTypeName","src":"7852:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2471,"mutability":"mutable","name":"revertIfError","nameLocation":"7877:13:17","nodeType":"VariableDeclaration","scope":2474,"src":"7872:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2470,"name":"bool","nodeType":"ElementaryTypeName","src":"7872:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7851:40:17"},"returnParameters":{"id":2473,"nodeType":"ParameterList","parameters":[],"src":"7900:0:17"},"scope":2644,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2489,"nodeType":"FunctionDefinition","src":"8758:178:17","nodes":[],"documentation":{"id":2475,"nodeType":"StructuredDocumentation","src":"7907:846:17","text":" @dev Calculate number of SVTs that haven't been synced yet after DHW runs\n DHW has minted strategy shares, but vaults haven't claimed them yet.\n Includes management fees (percentage of assets under management, distributed throughout a year) and deposit fees .\n Invariants:\n - There can't be more than once un-synced flush index per vault at any given time.\n - Flush index can't be synced, if all DHWs haven't been completed yet.\n Can be used to retrieve the number of SSTs the vault would claim during sync.\n @param smartVault SmartVault address\n @return oldTotalSVTs Amount of SVTs before sync\n @return mintedSVTs Amount of SVTs minted during sync\n @return feeSVTs Amount of SVTs pertaining to fees\n @return sstShares Amount of SSTs claimed per strategy"},"functionSelector":"bb9a7578","implemented":false,"kind":"function","modifiers":[],"name":"simulateSync","nameLocation":"8767:12:17","parameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2477,"mutability":"mutable","name":"smartVault","nameLocation":"8788:10:17","nodeType":"VariableDeclaration","scope":2489,"src":"8780:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2476,"name":"address","nodeType":"ElementaryTypeName","src":"8780:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8779:20:17"},"returnParameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"oldTotalSVTs","nameLocation":"8855:12:17","nodeType":"VariableDeclaration","scope":2489,"src":"8847:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2479,"name":"uint256","nodeType":"ElementaryTypeName","src":"8847:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2482,"mutability":"mutable","name":"mintedSVTs","nameLocation":"8877:10:17","nodeType":"VariableDeclaration","scope":2489,"src":"8869:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"8869:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2484,"mutability":"mutable","name":"feeSVTs","nameLocation":"8897:7:17","nodeType":"VariableDeclaration","scope":2489,"src":"8889:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2483,"name":"uint256","nodeType":"ElementaryTypeName","src":"8889:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"sstShares","nameLocation":"8925:9:17","nodeType":"VariableDeclaration","scope":2489,"src":"8906:28:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"8906:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2486,"nodeType":"ArrayTypeName","src":"8906:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8846:89:17"},"scope":2644,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2502,"nodeType":"FunctionDefinition","src":"9240:159:17","nodes":[],"documentation":{"id":2490,"nodeType":"StructuredDocumentation","src":"8942:293:17","text":" @dev Simulate sync when burning dNFTs and return their svts value.\n @param smartVault SmartVault address\n @param userAddress User address that owns dNFTs\n @param nftIds Ids of dNFTs\n @return svts Amount of svts user would get if he burns dNFTs"},"functionSelector":"ab1e74ca","implemented":false,"kind":"function","modifiers":[],"name":"simulateSyncWithBurn","nameLocation":"9249:20:17","parameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"smartVault","nameLocation":"9278:10:17","nodeType":"VariableDeclaration","scope":2502,"src":"9270:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2491,"name":"address","nodeType":"ElementaryTypeName","src":"9270:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2494,"mutability":"mutable","name":"userAddress","nameLocation":"9298:11:17","nodeType":"VariableDeclaration","scope":2502,"src":"9290:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2493,"name":"address","nodeType":"ElementaryTypeName","src":"9290:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2497,"mutability":"mutable","name":"nftIds","nameLocation":"9330:6:17","nodeType":"VariableDeclaration","scope":2502,"src":"9311:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2495,"name":"uint256","nodeType":"ElementaryTypeName","src":"9311:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2496,"nodeType":"ArrayTypeName","src":"9311:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"9269:68:17"},"returnParameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2500,"mutability":"mutable","name":"svts","nameLocation":"9393:4:17","nodeType":"VariableDeclaration","scope":2502,"src":"9385:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"9385:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9384:14:17"},"scope":2644,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":2516,"nodeType":"FunctionDefinition","src":"9655:154:17","nodes":[],"documentation":{"id":2503,"nodeType":"StructuredDocumentation","src":"9405:245:17","text":" @notice Instantly redeems smart vault shares for assets.\n @param bag Parameters for fast redeemal.\n @param withdrawalSlippages Slippages guarding redeemal.\n @return withdrawnAssets Amount of assets withdrawn."},"functionSelector":"e1c2eea6","implemented":false,"kind":"function","modifiers":[],"name":"redeemFast","nameLocation":"9664:10:17","parameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"bag","nameLocation":"9694:3:17","nodeType":"VariableDeclaration","scope":2516,"src":"9675:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RedeemBag_$2743_calldata_ptr","typeString":"struct RedeemBag"},"typeName":{"id":2505,"nodeType":"UserDefinedTypeName","pathNode":{"id":2504,"name":"RedeemBag","nameLocations":["9675:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2743,"src":"9675:9:17"},"referencedDeclaration":2743,"src":"9675:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_RedeemBag_$2743_storage_ptr","typeString":"struct RedeemBag"}},"visibility":"internal"},{"constant":false,"id":2510,"mutability":"mutable","name":"withdrawalSlippages","nameLocation":"9720:19:17","nodeType":"VariableDeclaration","scope":2516,"src":"9699:40:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":2507,"name":"uint256","nodeType":"ElementaryTypeName","src":"9699:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2508,"nodeType":"ArrayTypeName","src":"9699:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":2509,"nodeType":"ArrayTypeName","src":"9699:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"}],"src":"9674:66:17"},"returnParameters":{"id":2515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2514,"mutability":"mutable","name":"withdrawnAssets","nameLocation":"9792:15:17","nodeType":"VariableDeclaration","scope":2516,"src":"9775:32:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2512,"name":"uint256","nodeType":"ElementaryTypeName","src":"9775:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2513,"nodeType":"ArrayTypeName","src":"9775:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"9774:34:17"},"scope":2644,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2532,"nodeType":"FunctionDefinition","src":"10214:176:17","nodes":[],"documentation":{"id":2517,"nodeType":"StructuredDocumentation","src":"9815:394:17","text":" @notice Simulates redeem fast of smart vault shares.\n @dev Should only be run by address zero to simulate the redeemal and parse logs.\n @param bag Parameters for fast redeemal.\n @param withdrawalSlippages Slippages guarding redeemal.\n @param redeemer Address of a user to simulate redeem for.\n @return withdrawnAssets Amount of assets withdrawn."},"functionSelector":"c6a6d7cb","implemented":false,"kind":"function","modifiers":[],"name":"redeemFastView","nameLocation":"10223:14:17","parameters":{"id":2527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"bag","nameLocation":"10257:3:17","nodeType":"VariableDeclaration","scope":2532,"src":"10238:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RedeemBag_$2743_calldata_ptr","typeString":"struct RedeemBag"},"typeName":{"id":2519,"nodeType":"UserDefinedTypeName","pathNode":{"id":2518,"name":"RedeemBag","nameLocations":["10238:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2743,"src":"10238:9:17"},"referencedDeclaration":2743,"src":"10238:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_RedeemBag_$2743_storage_ptr","typeString":"struct RedeemBag"}},"visibility":"internal"},{"constant":false,"id":2524,"mutability":"mutable","name":"withdrawalSlippages","nameLocation":"10283:19:17","nodeType":"VariableDeclaration","scope":2532,"src":"10262:40:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"10262:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2522,"nodeType":"ArrayTypeName","src":"10262:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":2523,"nodeType":"ArrayTypeName","src":"10262:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"},{"constant":false,"id":2526,"mutability":"mutable","name":"redeemer","nameLocation":"10312:8:17","nodeType":"VariableDeclaration","scope":2532,"src":"10304:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2525,"name":"address","nodeType":"ElementaryTypeName","src":"10304:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10237:84:17"},"returnParameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"withdrawnAssets","nameLocation":"10373:15:17","nodeType":"VariableDeclaration","scope":2532,"src":"10356:32:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2528,"name":"uint256","nodeType":"ElementaryTypeName","src":"10356:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2529,"nodeType":"ArrayTypeName","src":"10356:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10355:34:17"},"scope":2644,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2551,"nodeType":"FunctionDefinition","src":"10871:230:17","nodes":[],"documentation":{"id":2533,"nodeType":"StructuredDocumentation","src":"10396:470:17","text":" @notice Claims withdrawal of assets by burning withdrawal NFT.\n @dev Requirements:\n - withdrawal NFT must be valid\n @param smartVault Address of the smart vault that issued the withdrawal NFT.\n @param nftIds ID of withdrawal NFT to burn.\n @param nftAmounts amounts\n @param receiver Receiver of claimed assets.\n @return assetAmounts Amounts of assets claimed.\n @return assetGroupId ID of the asset group."},"functionSelector":"f8a70486","implemented":false,"kind":"function","modifiers":[],"name":"claimWithdrawal","nameLocation":"10880:15:17","parameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2535,"mutability":"mutable","name":"smartVault","nameLocation":"10913:10:17","nodeType":"VariableDeclaration","scope":2551,"src":"10905:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2534,"name":"address","nodeType":"ElementaryTypeName","src":"10905:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2538,"mutability":"mutable","name":"nftIds","nameLocation":"10952:6:17","nodeType":"VariableDeclaration","scope":2551,"src":"10933:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2536,"name":"uint256","nodeType":"ElementaryTypeName","src":"10933:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2537,"nodeType":"ArrayTypeName","src":"10933:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2541,"mutability":"mutable","name":"nftAmounts","nameLocation":"10987:10:17","nodeType":"VariableDeclaration","scope":2551,"src":"10968:29:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"10968:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2540,"nodeType":"ArrayTypeName","src":"10968:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2543,"mutability":"mutable","name":"receiver","nameLocation":"11015:8:17","nodeType":"VariableDeclaration","scope":2551,"src":"11007:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2542,"name":"address","nodeType":"ElementaryTypeName","src":"11007:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10895:134:17"},"returnParameters":{"id":2550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"assetAmounts","nameLocation":"11065:12:17","nodeType":"VariableDeclaration","scope":2551,"src":"11048:29:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2546,"nodeType":"ArrayTypeName","src":"11048:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2549,"mutability":"mutable","name":"assetGroupId","nameLocation":"11087:12:17","nodeType":"VariableDeclaration","scope":2551,"src":"11079:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"11079:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11047:53:17"},"scope":2644,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2565,"nodeType":"FunctionDefinition","src":"11523:173:17","nodes":[],"documentation":{"id":2552,"nodeType":"StructuredDocumentation","src":"11107:411:17","text":" @notice Claims smart vault tokens by burning the deposit NFT.\n @dev Requirements:\n - deposit NFT must be valid\n - flush must be synced\n @param smartVaultAddress Address of the smart vault that issued the deposit NFT.\n @param nftIds ID of the deposit NFT to burn.\n @param nftAmounts amounts\n @return claimedAmount Amount of smart vault tokens claimed."},"functionSelector":"61189dd3","implemented":false,"kind":"function","modifiers":[],"name":"claimSmartVaultTokens","nameLocation":"11532:21:17","parameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2554,"mutability":"mutable","name":"smartVaultAddress","nameLocation":"11562:17:17","nodeType":"VariableDeclaration","scope":2565,"src":"11554:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2553,"name":"address","nodeType":"ElementaryTypeName","src":"11554:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2557,"mutability":"mutable","name":"nftIds","nameLocation":"11600:6:17","nodeType":"VariableDeclaration","scope":2565,"src":"11581:25:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"11581:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2556,"nodeType":"ArrayTypeName","src":"11581:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2560,"mutability":"mutable","name":"nftAmounts","nameLocation":"11627:10:17","nodeType":"VariableDeclaration","scope":2565,"src":"11608:29:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2558,"name":"uint256","nodeType":"ElementaryTypeName","src":"11608:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2559,"nodeType":"ArrayTypeName","src":"11608:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11553:85:17"},"returnParameters":{"id":2564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"claimedAmount","nameLocation":"11681:13:17","nodeType":"VariableDeclaration","scope":2565,"src":"11673:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2562,"name":"uint256","nodeType":"ElementaryTypeName","src":"11673:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11672:23:17"},"scope":2644,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2578,"nodeType":"FunctionDefinition","src":"12224:107:17","nodes":[],"documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"11702:517:17","text":" @notice Initiates a withdrawal process and mints a withdrawal NFT. Once all DHWs are executed, user can\n use the withdrawal NFT to claim the assets.\n Optionally, caller can pass a list of deposit NFTs to unwrap.\n @param bag smart vault address, amount of shares to redeem, nft ids and amounts to burn\n @param receiver address that will receive the withdrawal NFT\n @param doFlush optionally flush the smart vault\n @return receipt ID of the receipt withdrawal NFT."},"functionSelector":"388bbfd3","implemented":false,"kind":"function","modifiers":[],"name":"redeem","nameLocation":"12233:6:17","parameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"bag","nameLocation":"12259:3:17","nodeType":"VariableDeclaration","scope":2578,"src":"12240:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RedeemBag_$2743_calldata_ptr","typeString":"struct RedeemBag"},"typeName":{"id":2568,"nodeType":"UserDefinedTypeName","pathNode":{"id":2567,"name":"RedeemBag","nameLocations":["12240:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2743,"src":"12240:9:17"},"referencedDeclaration":2743,"src":"12240:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_RedeemBag_$2743_storage_ptr","typeString":"struct RedeemBag"}},"visibility":"internal"},{"constant":false,"id":2571,"mutability":"mutable","name":"receiver","nameLocation":"12272:8:17","nodeType":"VariableDeclaration","scope":2578,"src":"12264:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2570,"name":"address","nodeType":"ElementaryTypeName","src":"12264:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2573,"mutability":"mutable","name":"doFlush","nameLocation":"12287:7:17","nodeType":"VariableDeclaration","scope":2578,"src":"12282:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2572,"name":"bool","nodeType":"ElementaryTypeName","src":"12282:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12239:56:17"},"returnParameters":{"id":2577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2576,"mutability":"mutable","name":"receipt","nameLocation":"12322:7:17","nodeType":"VariableDeclaration","scope":2578,"src":"12314:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2575,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:17:17"},"scope":2644,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2591,"nodeType":"FunctionDefinition","src":"12891:107:17","nodes":[],"documentation":{"id":2579,"nodeType":"StructuredDocumentation","src":"12337:549:17","text":" @notice Initiates a withdrawal process and mints a withdrawal NFT. Once all DHWs are executed, user can\n use the withdrawal NFT to claim the assets.\n Optionally, caller can pass a list of deposit NFTs to unwrap.\n @param bag smart vault address, amount of shares to redeem, nft ids and amounts to burn\n @param owner address that owns the shares to be redeemed and will receive the withdrawal NFT\n @param doFlush optionally flush the smart vault\n @return receipt ID of the receipt withdrawal NFT."},"functionSelector":"7f03e683","implemented":false,"kind":"function","modifiers":[],"name":"redeemFor","nameLocation":"12900:9:17","parameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"bag","nameLocation":"12929:3:17","nodeType":"VariableDeclaration","scope":2591,"src":"12910:22:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RedeemBag_$2743_calldata_ptr","typeString":"struct RedeemBag"},"typeName":{"id":2581,"nodeType":"UserDefinedTypeName","pathNode":{"id":2580,"name":"RedeemBag","nameLocations":["12910:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2743,"src":"12910:9:17"},"referencedDeclaration":2743,"src":"12910:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_RedeemBag_$2743_storage_ptr","typeString":"struct RedeemBag"}},"visibility":"internal"},{"constant":false,"id":2584,"mutability":"mutable","name":"owner","nameLocation":"12942:5:17","nodeType":"VariableDeclaration","scope":2591,"src":"12934:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2583,"name":"address","nodeType":"ElementaryTypeName","src":"12934:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2586,"mutability":"mutable","name":"doFlush","nameLocation":"12954:7:17","nodeType":"VariableDeclaration","scope":2591,"src":"12949:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2585,"name":"bool","nodeType":"ElementaryTypeName","src":"12949:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12909:53:17"},"returnParameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2589,"mutability":"mutable","name":"receipt","nameLocation":"12989:7:17","nodeType":"VariableDeclaration","scope":2591,"src":"12981:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"12981:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12980:17:17"},"scope":2644,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2600,"nodeType":"FunctionDefinition","src":"13315:77:17","nodes":[],"documentation":{"id":2592,"nodeType":"StructuredDocumentation","src":"13004:306:17","text":" @notice Initiated a deposit and mints a deposit NFT. Once all DHWs are executed, user can\n unwrap the deposit NDF and claim his SVTs.\n @param bag smartVault address, assets, NFT receiver address, referral address, doFlush\n @return receipt ID of the receipt deposit NFT."},"functionSelector":"fa15b91b","implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"13324:7:17","parameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"bag","nameLocation":"13352:3:17","nodeType":"VariableDeclaration","scope":2600,"src":"13332:23:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBag_$843_calldata_ptr","typeString":"struct DepositBag"},"typeName":{"id":2594,"nodeType":"UserDefinedTypeName","pathNode":{"id":2593,"name":"DepositBag","nameLocations":["13332:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":843,"src":"13332:10:17"},"referencedDeclaration":843,"src":"13332:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_DepositBag_$843_storage_ptr","typeString":"struct DepositBag"}},"visibility":"internal"}],"src":"13331:25:17"},"returnParameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"receipt","nameLocation":"13383:7:17","nodeType":"VariableDeclaration","scope":2600,"src":"13375:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"13375:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13374:17:17"},"scope":2644,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2606,"nodeType":"FunctionDefinition","src":"13715:61:17","nodes":[],"documentation":{"id":2601,"nodeType":"StructuredDocumentation","src":"13398:312:17","text":" @notice Recovers pending deposits from smart vault to emergency wallet.\n @dev Requirements:\n - caller must have role ROLE_SPOOL_ADMIN\n - all strategies of the smart vault need to be ghost strategies\n @param smartVault Smart vault from which to recover pending deposits."},"functionSelector":"260c2313","implemented":false,"kind":"function","modifiers":[],"name":"recoverPendingDeposits","nameLocation":"13724:22:17","parameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2603,"mutability":"mutable","name":"smartVault","nameLocation":"13755:10:17","nodeType":"VariableDeclaration","scope":2606,"src":"13747:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2602,"name":"address","nodeType":"ElementaryTypeName","src":"13747:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13746:20:17"},"returnParameters":{"id":2605,"nodeType":"ParameterList","parameters":[],"src":"13775:0:17"},"scope":2644,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2613,"nodeType":"EventDefinition","src":"13964:72:17","nodes":[],"anonymous":false,"documentation":{"id":2607,"nodeType":"StructuredDocumentation","src":"13822:137:17","text":" @notice Smart vault has been flushed\n @param smartVault Smart vault address\n @param flushIndex Flush index"},"eventSelector":"d785d6ac7a1beb66e7c7aa47d471a28dc52f21913125972a85b8cbd2bf6234de","name":"SmartVaultFlushed","nameLocation":"13970:17:17","parameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2609,"indexed":true,"mutability":"mutable","name":"smartVault","nameLocation":"14004:10:17","nodeType":"VariableDeclaration","scope":2613,"src":"13988:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2608,"name":"address","nodeType":"ElementaryTypeName","src":"13988:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2611,"indexed":false,"mutability":"mutable","name":"flushIndex","nameLocation":"14024:10:17","nodeType":"VariableDeclaration","scope":2613,"src":"14016:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"14016:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13987:48:17"}},{"id":2620,"nodeType":"EventDefinition","src":"14183:71:17","nodes":[],"anonymous":false,"documentation":{"id":2614,"nodeType":"StructuredDocumentation","src":"14042:136:17","text":" @notice Smart vault has been synced\n @param smartVault Smart vault address\n @param flushIndex Flush index"},"eventSelector":"206fbd6d84a86176a548e1fdfddab2bc0ec06020f85918c4b12f8f5716a3a81a","name":"SmartVaultSynced","nameLocation":"14189:16:17","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"indexed":true,"mutability":"mutable","name":"smartVault","nameLocation":"14222:10:17","nodeType":"VariableDeclaration","scope":2620,"src":"14206:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2615,"name":"address","nodeType":"ElementaryTypeName","src":"14206:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2618,"indexed":false,"mutability":"mutable","name":"flushIndex","nameLocation":"14242:10:17","nodeType":"VariableDeclaration","scope":2620,"src":"14234:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2617,"name":"uint256","nodeType":"ElementaryTypeName","src":"14234:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14205:48:17"}},{"id":2628,"nodeType":"EventDefinition","src":"14425:100:17","nodes":[],"anonymous":false,"documentation":{"id":2621,"nodeType":"StructuredDocumentation","src":"14260:160:17","text":" @notice Smart vault has been registered\n @param smartVault Smart vault address\n @param registrationForm Smart vault configuration"},"eventSelector":"3de86e7d916b4d19191e071d9ca9ba1c74cc94fc5fea1332b180acf42e27d536","name":"SmartVaultRegistered","nameLocation":"14431:20:17","parameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"indexed":true,"mutability":"mutable","name":"smartVault","nameLocation":"14468:10:17","nodeType":"VariableDeclaration","scope":2628,"src":"14452:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2622,"name":"address","nodeType":"ElementaryTypeName","src":"14452:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2626,"indexed":false,"mutability":"mutable","name":"registrationForm","nameLocation":"14507:16:17","nodeType":"VariableDeclaration","scope":2628,"src":"14480:43:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultRegistrationForm_$2325_memory_ptr","typeString":"struct SmartVaultRegistrationForm"},"typeName":{"id":2625,"nodeType":"UserDefinedTypeName","pathNode":{"id":2624,"name":"SmartVaultRegistrationForm","nameLocations":["14480:26:17"],"nodeType":"IdentifierPath","referencedDeclaration":2325,"src":"14480:26:17"},"referencedDeclaration":2325,"src":"14480:26:17","typeDescriptions":{"typeIdentifier":"t_struct$_SmartVaultRegistrationForm_$2325_storage_ptr","typeString":"struct SmartVaultRegistrationForm"}},"visibility":"internal"}],"src":"14451:73:17"}},{"id":2635,"nodeType":"EventDefinition","src":"14692:80:17","nodes":[],"anonymous":false,"documentation":{"id":2629,"nodeType":"StructuredDocumentation","src":"14531:156:17","text":" @notice Strategy was removed from the vault\n @param strategy Strategy address\n @param vault Vault to remove the strategy from"},"eventSelector":"eb80b29f2addaaffe1908cea1e5251e60bf25cb5bef4c02f816e670ede404dfa","name":"StrategyRemovedFromVault","nameLocation":"14698:24:17","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"indexed":true,"mutability":"mutable","name":"strategy","nameLocation":"14739:8:17","nodeType":"VariableDeclaration","scope":2635,"src":"14723:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2630,"name":"address","nodeType":"ElementaryTypeName","src":"14723:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2633,"indexed":true,"mutability":"mutable","name":"vault","nameLocation":"14765:5:17","nodeType":"VariableDeclaration","scope":2635,"src":"14749:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2632,"name":"address","nodeType":"ElementaryTypeName","src":"14749:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14722:49:17"}},{"id":2643,"nodeType":"EventDefinition","src":"14946:82:17","nodes":[],"anonymous":false,"documentation":{"id":2636,"nodeType":"StructuredDocumentation","src":"14778:163:17","text":" @notice Vault was reallocation executed\n @param smartVault Smart vault address\n @param newAllocations new vault strategy allocations"},"eventSelector":"ee364d6312abc273abfa22ba799f321e049f2e38d0100fad80090594bc0fbff3","name":"SmartVaultReallocated","nameLocation":"14952:21:17","parameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"indexed":true,"mutability":"mutable","name":"smartVault","nameLocation":"14990:10:17","nodeType":"VariableDeclaration","scope":2643,"src":"14974:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2637,"name":"address","nodeType":"ElementaryTypeName","src":"14974:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2641,"indexed":false,"mutability":"mutable","name":"newAllocations","nameLocation":"15012:14:17","nodeType":"VariableDeclaration","scope":2643,"src":"15002:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"},"typeName":{"id":2640,"nodeType":"UserDefinedTypeName","pathNode":{"id":2639,"name":"uint16a16","nameLocations":["15002:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"15002:9:17"},"referencedDeclaration":2916,"src":"15002:9:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"visibility":"internal"}],"src":"14973:54:17"}}],"abstract":false,"baseContracts":[{"baseName":{"id":2368,"name":"ISmartVaultRegistry","nameLocations":["4123:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":2367,"src":"4123:19:17"},"id":2369,"nodeType":"InheritanceSpecifier","src":"4123:19:17"}],"canonicalName":"ISmartVaultManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[2644,2367],"name":"ISmartVaultManager","nameLocation":"4101:18:17","scope":2645,"usedErrors":[]}],"license":"BUSL-1.1"}},"src/interfaces/ISwapper.sol":{"id":18,"ast":{"absolutePath":"src/interfaces/ISwapper.sol","id":2725,"exportedSymbols":{"ExchangeNotAllowed":[2658],"ISwapper":[2724],"NotSwapper":[2663],"SwapInfo":[2653]},"nodeType":"SourceUnit","src":"37:3009:18","nodes":[{"id":2646,"nodeType":"PragmaDirective","src":"37:23:18","nodes":[],"literals":["solidity","0.8",".17"]},{"id":2653,"nodeType":"StructDefinition","src":"334:86:18","nodes":[],"canonicalName":"SwapInfo","members":[{"constant":false,"id":2648,"mutability":"mutable","name":"swapTarget","nameLocation":"364:10:18","nodeType":"VariableDeclaration","scope":2653,"src":"356:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2647,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2650,"mutability":"mutable","name":"token","nameLocation":"388:5:18","nodeType":"VariableDeclaration","scope":2653,"src":"380:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2649,"name":"address","nodeType":"ElementaryTypeName","src":"380:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2652,"mutability":"mutable","name":"swapCallData","nameLocation":"405:12:18","nodeType":"VariableDeclaration","scope":2653,"src":"399:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2651,"name":"bytes","nodeType":"ElementaryTypeName","src":"399:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"SwapInfo","nameLocation":"341:8:18","scope":2725,"visibility":"public"},{"id":2658,"nodeType":"ErrorDefinition","src":"596:43:18","nodes":[],"documentation":{"id":2654,"nodeType":"StructuredDocumentation","src":"458:137:18","text":" @notice Used when trying to do a swap via an exchange that is not allowed to execute a swap.\n @param exchange Exchange used."},"errorSelector":"b867b387","name":"ExchangeNotAllowed","nameLocation":"602:18:18","parameters":{"id":2657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2656,"mutability":"mutable","name":"exchange","nameLocation":"629:8:18","nodeType":"VariableDeclaration","scope":2658,"src":"621:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2655,"name":"address","nodeType":"ElementaryTypeName","src":"621:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"620:18:18"}},{"id":2663,"nodeType":"ErrorDefinition","src":"763:33:18","nodes":[],"documentation":{"id":2659,"nodeType":"StructuredDocumentation","src":"641:121:18","text":" @notice Used when trying to execute a swap but are not authorized.\n @param caller Caller of the swap method."},"errorSelector":"896ded80","name":"NotSwapper","nameLocation":"769:10:18","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2661,"mutability":"mutable","name":"caller","nameLocation":"788:6:18","nodeType":"VariableDeclaration","scope":2663,"src":"780:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2660,"name":"address","nodeType":"ElementaryTypeName","src":"780:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"779:16:18"}},{"id":2724,"nodeType":"ContractDefinition","src":"838:2208:18","nodes":[{"id":2670,"nodeType":"EventDefinition","src":"1134:73:18","nodes":[],"anonymous":false,"documentation":{"id":2664,"nodeType":"StructuredDocumentation","src":"903:226:18","text":" @notice Emitted when the exchange allowlist is updated.\n @param exchange Exchange that was updated.\n @param isAllowed Whether the exchange is allowed to be used in a swap or not after the update."},"eventSelector":"627cd1344146c37272a586e0d2cce7d499f8d0c9d40756a50c8e45ef46a4e5bc","name":"ExchangeAllowlistUpdated","nameLocation":"1140:24:18","parameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2666,"indexed":true,"mutability":"mutable","name":"exchange","nameLocation":"1181:8:18","nodeType":"VariableDeclaration","scope":2670,"src":"1165:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2665,"name":"address","nodeType":"ElementaryTypeName","src":"1165:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2668,"indexed":false,"mutability":"mutable","name":"isAllowed","nameLocation":"1196:9:18","nodeType":"VariableDeclaration","scope":2670,"src":"1191:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2667,"name":"bool","nodeType":"ElementaryTypeName","src":"1191:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1164:42:18"}},{"id":2686,"nodeType":"EventDefinition","src":"1213:138:18","nodes":[],"anonymous":false,"eventSelector":"39b1ebcf9d679e76260b7a9d80b7a2dd106e4c8afd6e0052e7a5029d1cff0adb","name":"Swapped","nameLocation":"1219:7:18","parameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2672,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"1252:8:18","nodeType":"VariableDeclaration","scope":2686,"src":"1236:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2671,"name":"address","nodeType":"ElementaryTypeName","src":"1236:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2675,"indexed":false,"mutability":"mutable","name":"tokensIn","nameLocation":"1272:8:18","nodeType":"VariableDeclaration","scope":2686,"src":"1262:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2673,"name":"address","nodeType":"ElementaryTypeName","src":"1262:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2674,"nodeType":"ArrayTypeName","src":"1262:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2678,"indexed":false,"mutability":"mutable","name":"tokensOut","nameLocation":"1292:9:18","nodeType":"VariableDeclaration","scope":2686,"src":"1282:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2676,"name":"address","nodeType":"ElementaryTypeName","src":"1282:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2677,"nodeType":"ArrayTypeName","src":"1282:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2681,"indexed":false,"mutability":"mutable","name":"amountsIn","nameLocation":"1313:9:18","nodeType":"VariableDeclaration","scope":2686,"src":"1303:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1303:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2680,"nodeType":"ArrayTypeName","src":"1303:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2684,"indexed":false,"mutability":"mutable","name":"amountsOut","nameLocation":"1334:10:18","nodeType":"VariableDeclaration","scope":2686,"src":"1324:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2682,"name":"uint256","nodeType":"ElementaryTypeName","src":"1324:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2683,"nodeType":"ArrayTypeName","src":"1324:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1226:124:18"}},{"id":2705,"nodeType":"FunctionDefinition","src":"2001:206:18","nodes":[],"documentation":{"id":2687,"nodeType":"StructuredDocumentation","src":"1418:578:18","text":" @notice Performs a swap of tokens with external contracts.\n - deposit tokens into the swapper contract\n - swapper will swap tokens based on swap info provided\n - swapper will return unswapped tokens to the receiver\n @param tokensIn Addresses of tokens available for the swap.\n @param swapInfo Information needed to perform the swap.\n @param tokensOut Addresses of tokens to swap to.\n @param receiver Receiver of unswapped tokens.\n @return amountsOut Amounts of `tokensOut` sent from the swapper to the receiver."},"functionSelector":"67c15262","implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"2010:4:18","parameters":{"id":2700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"tokensIn","nameLocation":"2043:8:18","nodeType":"VariableDeclaration","scope":2705,"src":"2024:27:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2688,"name":"address","nodeType":"ElementaryTypeName","src":"2024:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2689,"nodeType":"ArrayTypeName","src":"2024:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2694,"mutability":"mutable","name":"swapInfo","nameLocation":"2081:8:18","nodeType":"VariableDeclaration","scope":2705,"src":"2061:28:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapInfo_$2653_calldata_ptr_$dyn_calldata_ptr","typeString":"struct SwapInfo[]"},"typeName":{"baseType":{"id":2692,"nodeType":"UserDefinedTypeName","pathNode":{"id":2691,"name":"SwapInfo","nameLocations":["2061:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2653,"src":"2061:8:18"},"referencedDeclaration":2653,"src":"2061:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_SwapInfo_$2653_storage_ptr","typeString":"struct SwapInfo"}},"id":2693,"nodeType":"ArrayTypeName","src":"2061:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_SwapInfo_$2653_storage_$dyn_storage_ptr","typeString":"struct SwapInfo[]"}},"visibility":"internal"},{"constant":false,"id":2697,"mutability":"mutable","name":"tokensOut","nameLocation":"2118:9:18","nodeType":"VariableDeclaration","scope":2705,"src":"2099:28:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2695,"name":"address","nodeType":"ElementaryTypeName","src":"2099:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2696,"nodeType":"ArrayTypeName","src":"2099:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2699,"mutability":"mutable","name":"receiver","nameLocation":"2145:8:18","nodeType":"VariableDeclaration","scope":2705,"src":"2137:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2698,"name":"address","nodeType":"ElementaryTypeName","src":"2137:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2014:145:18"},"returnParameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"amountsOut","nameLocation":"2195:10:18","nodeType":"VariableDeclaration","scope":2705,"src":"2178:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2178:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2702,"nodeType":"ArrayTypeName","src":"2178:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2177:29:18"},"scope":2724,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2715,"nodeType":"FunctionDefinition","src":"2576:97:18","nodes":[],"documentation":{"id":2706,"nodeType":"StructuredDocumentation","src":"2213:358:18","text":" @notice Updates list of exchanges that can be used in a swap.\n @dev Requirements:\n   - can only be called by user granted ROLE_SPOOL_ADMIN\n   - exchanges and allowed arrays need to be of same length\n @param exchanges Addresses of exchanges.\n @param allowed Whether an exchange is allowed to be used in a swap."},"functionSelector":"51d307af","implemented":false,"kind":"function","modifiers":[],"name":"updateExchangeAllowlist","nameLocation":"2585:23:18","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"exchanges","nameLocation":"2628:9:18","nodeType":"VariableDeclaration","scope":2715,"src":"2609:28:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2707,"name":"address","nodeType":"ElementaryTypeName","src":"2609:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2708,"nodeType":"ArrayTypeName","src":"2609:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2712,"mutability":"mutable","name":"allowed","nameLocation":"2655:7:18","nodeType":"VariableDeclaration","scope":2715,"src":"2639:23:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":2710,"name":"bool","nodeType":"ElementaryTypeName","src":"2639:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2711,"nodeType":"ArrayTypeName","src":"2639:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"2608:55:18"},"returnParameters":{"id":2714,"nodeType":"ParameterList","parameters":[],"src":"2672:0:18"},"scope":2724,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2723,"nodeType":"FunctionDefinition","src":"2960:84:18","nodes":[],"documentation":{"id":2716,"nodeType":"StructuredDocumentation","src":"2736:219:18","text":" @notice Checks if an exchange is allowed to be used in a swap.\n @param exchange Exchange to check.\n @return isAllowed True if the exchange is allowed to be used in a swap, false otherwise."},"functionSelector":"8d4435e4","implemented":false,"kind":"function","modifiers":[],"name":"isExchangeAllowed","nameLocation":"2969:17:18","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"exchange","nameLocation":"2995:8:18","nodeType":"VariableDeclaration","scope":2723,"src":"2987:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2717,"name":"address","nodeType":"ElementaryTypeName","src":"2987:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2986:18:18"},"returnParameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"isAllowed","nameLocation":"3033:9:18","nodeType":"VariableDeclaration","scope":2723,"src":"3028:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2720,"name":"bool","nodeType":"ElementaryTypeName","src":"3028:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3027:16:18"},"scope":2724,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"ISwapper","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[2724],"name":"ISwapper","nameLocation":"848:8:18","scope":2725,"usedErrors":[]}],"license":"BUSL-1.1"}},"src/interfaces/IWithdrawalManager.sol":{"id":19,"ast":{"absolutePath":"src/interfaces/IWithdrawalManager.sol","id":2905,"exportedSymbols":{"IWithdrawalManager":[2904],"RedeemBag":[2743],"RedeemExtras":[2767],"RedeemFastExtras":[2758],"WithdrawalClaimBag":[2787],"WithdrawalNftNotSyncedYet":[2732],"uint16a16":[2916],"uint16a16Lib":[3058]},"nodeType":"SourceUnit","src":"37:6768:19","nodes":[{"id":2726,"nodeType":"PragmaDirective","src":"37:23:19","nodes":[],"literals":["solidity","0.8",".17"]},{"id":2727,"nodeType":"ImportDirective","src":"62:28:19","nodes":[],"absolutePath":"src/interfaces/uint16a16Lib.sol","file":"./uint16a16Lib.sol","nameLocation":"-1:-1:-1","scope":2905,"sourceUnit":3059,"symbolAliases":[],"unitAlias":""},{"id":2732,"nodeType":"ErrorDefinition","src":"204:44:19","nodes":[],"documentation":{"id":2728,"nodeType":"StructuredDocumentation","src":"92:111:19","text":" @notice Used when trying to burn withdrawal NFT that was not synced yet.\n @param id ID of the NFT."},"errorSelector":"98680a4b","name":"WithdrawalNftNotSyncedYet","nameLocation":"210:25:19","parameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"id","nameLocation":"244:2:19","nodeType":"VariableDeclaration","scope":2732,"src":"236:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"236:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"235:12:19"}},{"id":2743,"nodeType":"StructDefinition","src":"558:112:19","nodes":[],"canonicalName":"RedeemBag","members":[{"constant":false,"id":2734,"mutability":"mutable","name":"smartVault","nameLocation":"589:10:19","nodeType":"VariableDeclaration","scope":2743,"src":"581:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2733,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"shares","nameLocation":"613:6:19","nodeType":"VariableDeclaration","scope":2743,"src":"605:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2739,"mutability":"mutable","name":"nftIds","nameLocation":"635:6:19","nodeType":"VariableDeclaration","scope":2743,"src":"625:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2737,"name":"uint256","nodeType":"ElementaryTypeName","src":"625:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2738,"nodeType":"ArrayTypeName","src":"625:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2742,"mutability":"mutable","name":"nftAmounts","nameLocation":"657:10:19","nodeType":"VariableDeclaration","scope":2743,"src":"647:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"647:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2741,"nodeType":"ArrayTypeName","src":"647:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"RedeemBag","nameLocation":"565:9:19","scope":2905,"visibility":"public"},{"id":2758,"nodeType":"StructDefinition","src":"1058:164:19","nodes":[],"canonicalName":"RedeemFastExtras","members":[{"constant":false,"id":2746,"mutability":"mutable","name":"strategies","nameLocation":"1098:10:19","nodeType":"VariableDeclaration","scope":2758,"src":"1088:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2744,"name":"address","nodeType":"ElementaryTypeName","src":"1088:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2745,"nodeType":"ArrayTypeName","src":"1088:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2749,"mutability":"mutable","name":"assetGroup","nameLocation":"1124:10:19","nodeType":"VariableDeclaration","scope":2758,"src":"1114:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2747,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2748,"nodeType":"ArrayTypeName","src":"1114:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2751,"mutability":"mutable","name":"assetGroupId","nameLocation":"1148:12:19","nodeType":"VariableDeclaration","scope":2758,"src":"1140:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1140:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2753,"mutability":"mutable","name":"redeemer","nameLocation":"1174:8:19","nodeType":"VariableDeclaration","scope":2758,"src":"1166:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2752,"name":"address","nodeType":"ElementaryTypeName","src":"1166:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2757,"mutability":"mutable","name":"withdrawalSlippages","nameLocation":"1200:19:19","nodeType":"VariableDeclaration","scope":2758,"src":"1188:31:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":2754,"name":"uint256","nodeType":"ElementaryTypeName","src":"1188:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2755,"nodeType":"ArrayTypeName","src":"1188:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":2756,"nodeType":"ArrayTypeName","src":"1188:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"}],"name":"RedeemFastExtras","nameLocation":"1065:16:19","scope":2905,"visibility":"public"},{"id":2767,"nodeType":"StructDefinition","src":"1534:110:19","nodes":[],"canonicalName":"RedeemExtras","members":[{"constant":false,"id":2760,"mutability":"mutable","name":"receiver","nameLocation":"1568:8:19","nodeType":"VariableDeclaration","scope":2767,"src":"1560:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2759,"name":"address","nodeType":"ElementaryTypeName","src":"1560:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2762,"mutability":"mutable","name":"owner","nameLocation":"1590:5:19","nodeType":"VariableDeclaration","scope":2767,"src":"1582:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2761,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2764,"mutability":"mutable","name":"executor","nameLocation":"1609:8:19","nodeType":"VariableDeclaration","scope":2767,"src":"1601:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2763,"name":"address","nodeType":"ElementaryTypeName","src":"1601:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2766,"mutability":"mutable","name":"flushIndex","nameLocation":"1631:10:19","nodeType":"VariableDeclaration","scope":2767,"src":"1623:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2765,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"RedeemExtras","nameLocation":"1541:12:19","scope":2905,"visibility":"public"},{"id":2787,"nodeType":"StructDefinition","src":"2256:227:19","nodes":[],"canonicalName":"WithdrawalClaimBag","members":[{"constant":false,"id":2769,"mutability":"mutable","name":"smartVault","nameLocation":"2296:10:19","nodeType":"VariableDeclaration","scope":2787,"src":"2288:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2768,"name":"address","nodeType":"ElementaryTypeName","src":"2288:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2772,"mutability":"mutable","name":"nftIds","nameLocation":"2322:6:19","nodeType":"VariableDeclaration","scope":2787,"src":"2312:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2312:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2771,"nodeType":"ArrayTypeName","src":"2312:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2775,"mutability":"mutable","name":"nftAmounts","nameLocation":"2344:10:19","nodeType":"VariableDeclaration","scope":2787,"src":"2334:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2773,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2774,"nodeType":"ArrayTypeName","src":"2334:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2777,"mutability":"mutable","name":"receiver","nameLocation":"2368:8:19","nodeType":"VariableDeclaration","scope":2787,"src":"2360:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2776,"name":"address","nodeType":"ElementaryTypeName","src":"2360:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2779,"mutability":"mutable","name":"executor","nameLocation":"2390:8:19","nodeType":"VariableDeclaration","scope":2787,"src":"2382:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2778,"name":"address","nodeType":"ElementaryTypeName","src":"2382:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2781,"mutability":"mutable","name":"assetGroupId","nameLocation":"2412:12:19","nodeType":"VariableDeclaration","scope":2787,"src":"2404:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2780,"name":"uint256","nodeType":"ElementaryTypeName","src":"2404:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2784,"mutability":"mutable","name":"assetGroup","nameLocation":"2440:10:19","nodeType":"VariableDeclaration","scope":2787,"src":"2430:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2782,"name":"address","nodeType":"ElementaryTypeName","src":"2430:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2783,"nodeType":"ArrayTypeName","src":"2430:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2786,"mutability":"mutable","name":"flushIndexToSync","nameLocation":"2464:16:19","nodeType":"VariableDeclaration","scope":2787,"src":"2456:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2785,"name":"uint256","nodeType":"ElementaryTypeName","src":"2456:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"WithdrawalClaimBag","nameLocation":"2263:18:19","scope":2905,"visibility":"public"},{"id":2904,"nodeType":"ContractDefinition","src":"2485:4320:19","nodes":[{"id":2805,"nodeType":"EventDefinition","src":"2832:220:19","nodes":[],"anonymous":false,"documentation":{"id":2788,"nodeType":"StructuredDocumentation","src":"2520:307:19","text":" @notice User redeemed withdrawal NFTs for underlying assets\n @param smartVault Smart vault address\n @param claimer Claimer address\n @param nftIds NFTs to burn\n @param nftAmounts NFT shares to burn\n @param withdrawnAssets Amount of underlying assets withdrawn"},"eventSelector":"efb332c1dce68bce9b3930f001cf097c2955a7f8ee1a33cbf74fb563a7109239","name":"WithdrawalClaimed","nameLocation":"2838:17:19","parameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2790,"indexed":true,"mutability":"mutable","name":"smartVault","nameLocation":"2881:10:19","nodeType":"VariableDeclaration","scope":2805,"src":"2865:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2789,"name":"address","nodeType":"ElementaryTypeName","src":"2865:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2792,"indexed":true,"mutability":"mutable","name":"claimer","nameLocation":"2917:7:19","nodeType":"VariableDeclaration","scope":2805,"src":"2901:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2791,"name":"address","nodeType":"ElementaryTypeName","src":"2901:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2794,"indexed":false,"mutability":"mutable","name":"assetGroupId","nameLocation":"2942:12:19","nodeType":"VariableDeclaration","scope":2805,"src":"2934:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2793,"name":"uint256","nodeType":"ElementaryTypeName","src":"2934:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2797,"indexed":false,"mutability":"mutable","name":"nftIds","nameLocation":"2974:6:19","nodeType":"VariableDeclaration","scope":2805,"src":"2964:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"2964:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2796,"nodeType":"ArrayTypeName","src":"2964:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2800,"indexed":false,"mutability":"mutable","name":"nftAmounts","nameLocation":"3000:10:19","nodeType":"VariableDeclaration","scope":2805,"src":"2990:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2798,"name":"uint256","nodeType":"ElementaryTypeName","src":"2990:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2799,"nodeType":"ArrayTypeName","src":"2990:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2803,"indexed":false,"mutability":"mutable","name":"withdrawnAssets","nameLocation":"3030:15:19","nodeType":"VariableDeclaration","scope":2805,"src":"3020:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2802,"nodeType":"ArrayTypeName","src":"3020:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2855:196:19"}},{"id":2820,"nodeType":"EventDefinition","src":"3477:207:19","nodes":[],"anonymous":false,"documentation":{"id":2806,"nodeType":"StructuredDocumentation","src":"3058:414:19","text":" @notice A deposit has been initiated\n @param smartVault Smart vault address\n @param owner Owner of shares to be redeemed\n @param redeemId Withdrawal NFT ID for this redeemal\n @param flushIndex Flush index the redeem was scheduled for\n @param shares Amount of vault shares to redeem\n @param receiver Beneficiary that will be able to claim the underlying assets"},"eventSelector":"31093b9e9867e68c1a3a24bb4f991e0b30fcbe52282b0007b8992a25de54ffd9","name":"RedeemInitiated","nameLocation":"3483:15:19","parameters":{"id":2819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2808,"indexed":true,"mutability":"mutable","name":"smartVault","nameLocation":"3524:10:19","nodeType":"VariableDeclaration","scope":2820,"src":"3508:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2807,"name":"address","nodeType":"ElementaryTypeName","src":"3508:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2810,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"3560:5:19","nodeType":"VariableDeclaration","scope":2820,"src":"3544:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2809,"name":"address","nodeType":"ElementaryTypeName","src":"3544:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2812,"indexed":true,"mutability":"mutable","name":"redeemId","nameLocation":"3591:8:19","nodeType":"VariableDeclaration","scope":2820,"src":"3575:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2811,"name":"uint256","nodeType":"ElementaryTypeName","src":"3575:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2814,"indexed":false,"mutability":"mutable","name":"flushIndex","nameLocation":"3617:10:19","nodeType":"VariableDeclaration","scope":2820,"src":"3609:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2813,"name":"uint256","nodeType":"ElementaryTypeName","src":"3609:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2816,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"3645:6:19","nodeType":"VariableDeclaration","scope":2820,"src":"3637:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"3637:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2818,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"3669:8:19","nodeType":"VariableDeclaration","scope":2820,"src":"3661:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2817,"name":"address","nodeType":"ElementaryTypeName","src":"3661:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3498:185:19"}},{"id":2838,"nodeType":"EventDefinition","src":"4055:217:19","nodes":[],"anonymous":false,"documentation":{"id":2821,"nodeType":"StructuredDocumentation","src":"3690:360:19","text":" @notice A deposit has been initiated\n @param smartVault Smart vault address\n @param redeemer Redeem initiator and owner of shares\n @param shares Amount of vault shares to redeem\n @param nftIds NFTs to burn\n @param nftAmounts NFT shares to burn\n @param assetsWithdrawn Amount of underlying assets withdrawn"},"eventSelector":"d10ff7cbfdd5c5215877c03465fa91ff12f6e71b627d0a59de65978512364cd7","name":"FastRedeemInitiated","nameLocation":"4061:19:19","parameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"indexed":true,"mutability":"mutable","name":"smartVault","nameLocation":"4106:10:19","nodeType":"VariableDeclaration","scope":2838,"src":"4090:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2822,"name":"address","nodeType":"ElementaryTypeName","src":"4090:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2825,"indexed":true,"mutability":"mutable","name":"redeemer","nameLocation":"4142:8:19","nodeType":"VariableDeclaration","scope":2838,"src":"4126:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2824,"name":"address","nodeType":"ElementaryTypeName","src":"4126:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2827,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"4168:6:19","nodeType":"VariableDeclaration","scope":2838,"src":"4160:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2826,"name":"uint256","nodeType":"ElementaryTypeName","src":"4160:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2830,"indexed":false,"mutability":"mutable","name":"nftIds","nameLocation":"4194:6:19","nodeType":"VariableDeclaration","scope":2838,"src":"4184:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2828,"name":"uint256","nodeType":"ElementaryTypeName","src":"4184:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2829,"nodeType":"ArrayTypeName","src":"4184:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2833,"indexed":false,"mutability":"mutable","name":"nftAmounts","nameLocation":"4220:10:19","nodeType":"VariableDeclaration","scope":2838,"src":"4210:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2831,"name":"uint256","nodeType":"ElementaryTypeName","src":"4210:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2832,"nodeType":"ArrayTypeName","src":"4210:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2836,"indexed":false,"mutability":"mutable","name":"assetsWithdrawn","nameLocation":"4250:15:19","nodeType":"VariableDeclaration","scope":2838,"src":"4240:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2834,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2835,"nodeType":"ArrayTypeName","src":"4240:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4080:191:19"}},{"id":2852,"nodeType":"FunctionDefinition","src":"4713:152:19","nodes":[],"documentation":{"id":2839,"nodeType":"StructuredDocumentation","src":"4278:430:19","text":" @notice Flushes smart vaults deposits and withdrawals to the strategies.\n @dev Requirements:\n   - can only be called by user granted ROLE_SMART_VAULT_MANAGER\n @param smartVault Smart vault to flush.\n @param flushIndex Current flush index of the smart vault.\n @param strategies Strategies of the smart vault.\n @return dhwIndexes current do-hard-work indexes of the strategies."},"functionSelector":"1fdd01a0","implemented":false,"kind":"function","modifiers":[],"name":"flushSmartVault","nameLocation":"4722:15:19","parameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2841,"mutability":"mutable","name":"smartVault","nameLocation":"4746:10:19","nodeType":"VariableDeclaration","scope":2852,"src":"4738:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2840,"name":"address","nodeType":"ElementaryTypeName","src":"4738:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2843,"mutability":"mutable","name":"flushIndex","nameLocation":"4766:10:19","nodeType":"VariableDeclaration","scope":2852,"src":"4758:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2842,"name":"uint256","nodeType":"ElementaryTypeName","src":"4758:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2846,"mutability":"mutable","name":"strategies","nameLocation":"4797:10:19","nodeType":"VariableDeclaration","scope":2852,"src":"4778:29:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2844,"name":"address","nodeType":"ElementaryTypeName","src":"4778:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2845,"nodeType":"ArrayTypeName","src":"4778:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4737:71:19"},"returnParameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"dhwIndexes","nameLocation":"4853:10:19","nodeType":"VariableDeclaration","scope":2852,"src":"4843:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"},"typeName":{"id":2849,"nodeType":"UserDefinedTypeName","pathNode":{"id":2848,"name":"uint16a16","nameLocations":["4843:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"4843:9:19"},"referencedDeclaration":2916,"src":"4843:9:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"visibility":"internal"}],"src":"4842:22:19"},"scope":2904,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2864,"nodeType":"FunctionDefinition","src":"5182:148:19","nodes":[],"documentation":{"id":2853,"nodeType":"StructuredDocumentation","src":"4871:306:19","text":" @notice Claims withdrawal.\n @dev Requirements:\n   - can only be called by user granted ROLE_SMART_VAULT_MANAGER\n @param bag Parameters for claiming withdrawal.\n @return withdrawnAssets Amount of assets withdrawn.\n @return assetGroupId ID of the asset group."},"functionSelector":"b8b1a3e7","implemented":false,"kind":"function","modifiers":[],"name":"claimWithdrawal","nameLocation":"5191:15:19","parameters":{"id":2857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2856,"mutability":"mutable","name":"bag","nameLocation":"5235:3:19","nodeType":"VariableDeclaration","scope":2864,"src":"5207:31:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalClaimBag_$2787_calldata_ptr","typeString":"struct WithdrawalClaimBag"},"typeName":{"id":2855,"nodeType":"UserDefinedTypeName","pathNode":{"id":2854,"name":"WithdrawalClaimBag","nameLocations":["5207:18:19"],"nodeType":"IdentifierPath","referencedDeclaration":2787,"src":"5207:18:19"},"referencedDeclaration":2787,"src":"5207:18:19","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalClaimBag_$2787_storage_ptr","typeString":"struct WithdrawalClaimBag"}},"visibility":"internal"}],"src":"5206:33:19"},"returnParameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2860,"mutability":"mutable","name":"withdrawnAssets","nameLocation":"5291:15:19","nodeType":"VariableDeclaration","scope":2864,"src":"5274:32:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2858,"name":"uint256","nodeType":"ElementaryTypeName","src":"5274:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2859,"nodeType":"ArrayTypeName","src":"5274:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2862,"mutability":"mutable","name":"assetGroupId","nameLocation":"5316:12:19","nodeType":"VariableDeclaration","scope":2864,"src":"5308:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5273:56:19"},"scope":2904,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2878,"nodeType":"FunctionDefinition","src":"5768:166:19","nodes":[],"documentation":{"id":2865,"nodeType":"StructuredDocumentation","src":"5336:427:19","text":" @notice Syncs withdrawals between strategies and smart vault after do-hard-works.\n @dev Requirements:\n   - can only be called by user granted ROLE_SMART_VAULT_MANAGER\n @param smartVault Smart vault to sync.\n @param flushIndex Smart vault's flush index to sync.\n @param strategies Strategies of the smart vault.\n @param dhwIndexes_ Strategies' do-hard-work indexes to sync."},"functionSelector":"e0397fa0","implemented":false,"kind":"function","modifiers":[],"name":"syncWithdrawals","nameLocation":"5777:15:19","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2867,"mutability":"mutable","name":"smartVault","nameLocation":"5810:10:19","nodeType":"VariableDeclaration","scope":2878,"src":"5802:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2866,"name":"address","nodeType":"ElementaryTypeName","src":"5802:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2869,"mutability":"mutable","name":"flushIndex","nameLocation":"5838:10:19","nodeType":"VariableDeclaration","scope":2878,"src":"5830:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2868,"name":"uint256","nodeType":"ElementaryTypeName","src":"5830:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2872,"mutability":"mutable","name":"strategies","nameLocation":"5877:10:19","nodeType":"VariableDeclaration","scope":2878,"src":"5858:29:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2870,"name":"address","nodeType":"ElementaryTypeName","src":"5858:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2871,"nodeType":"ArrayTypeName","src":"5858:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2875,"mutability":"mutable","name":"dhwIndexes_","nameLocation":"5907:11:19","nodeType":"VariableDeclaration","scope":2878,"src":"5897:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"},"typeName":{"id":2874,"nodeType":"UserDefinedTypeName","pathNode":{"id":2873,"name":"uint16a16","nameLocations":["5897:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"5897:9:19"},"referencedDeclaration":2916,"src":"5897:9:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"visibility":"internal"}],"src":"5792:132:19"},"returnParameters":{"id":2877,"nodeType":"ParameterList","parameters":[],"src":"5933:0:19"},"scope":2904,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2890,"nodeType":"FunctionDefinition","src":"6243:101:19","nodes":[],"documentation":{"id":2879,"nodeType":"StructuredDocumentation","src":"5940:298:19","text":" @notice Redeems smart vault shares.\n @dev Requirements:\n   - can only be called by user granted ROLE_SMART_VAULT_MANAGER\n @param bag Base information for redeemal.\n @param bag2 Extra information for redeemal.\n @return nftId ID of the withdrawal NFT."},"functionSelector":"3b72ca87","implemented":false,"kind":"function","modifiers":[],"name":"redeem","nameLocation":"6252:6:19","parameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2882,"mutability":"mutable","name":"bag","nameLocation":"6278:3:19","nodeType":"VariableDeclaration","scope":2890,"src":"6259:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RedeemBag_$2743_calldata_ptr","typeString":"struct RedeemBag"},"typeName":{"id":2881,"nodeType":"UserDefinedTypeName","pathNode":{"id":2880,"name":"RedeemBag","nameLocations":["6259:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2743,"src":"6259:9:19"},"referencedDeclaration":2743,"src":"6259:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_RedeemBag_$2743_storage_ptr","typeString":"struct RedeemBag"}},"visibility":"internal"},{"constant":false,"id":2885,"mutability":"mutable","name":"bag2","nameLocation":"6305:4:19","nodeType":"VariableDeclaration","scope":2890,"src":"6283:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RedeemExtras_$2767_calldata_ptr","typeString":"struct RedeemExtras"},"typeName":{"id":2884,"nodeType":"UserDefinedTypeName","pathNode":{"id":2883,"name":"RedeemExtras","nameLocations":["6283:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2767,"src":"6283:12:19"},"referencedDeclaration":2767,"src":"6283:12:19","typeDescriptions":{"typeIdentifier":"t_struct$_RedeemExtras_$2767_storage_ptr","typeString":"struct RedeemExtras"}},"visibility":"internal"}],"src":"6258:52:19"},"returnParameters":{"id":2889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2888,"mutability":"mutable","name":"nftId","nameLocation":"6337:5:19","nodeType":"VariableDeclaration","scope":2890,"src":"6329:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"6329:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6328:15:19"},"scope":2904,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":2903,"nodeType":"FunctionDefinition","src":"6670:133:19","nodes":[],"documentation":{"id":2891,"nodeType":"StructuredDocumentation","src":"6350:315:19","text":" @notice Instantly redeems smart vault shares.\n @dev Requirements:\n   - can only be called by user granted ROLE_SMART_VAULT_MANAGER\n @param bag Base information for redeemal.\n @param bag Extra information for fast redeemal.\n @return assets Amount of assets withdrawn."},"functionSelector":"4fb62d47","implemented":false,"kind":"function","modifiers":[],"name":"redeemFast","nameLocation":"6679:10:19","parameters":{"id":2898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2894,"mutability":"mutable","name":"bag","nameLocation":"6709:3:19","nodeType":"VariableDeclaration","scope":2903,"src":"6690:22:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RedeemBag_$2743_calldata_ptr","typeString":"struct RedeemBag"},"typeName":{"id":2893,"nodeType":"UserDefinedTypeName","pathNode":{"id":2892,"name":"RedeemBag","nameLocations":["6690:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":2743,"src":"6690:9:19"},"referencedDeclaration":2743,"src":"6690:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_RedeemBag_$2743_storage_ptr","typeString":"struct RedeemBag"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"bag2","nameLocation":"6738:4:19","nodeType":"VariableDeclaration","scope":2903,"src":"6714:28:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RedeemFastExtras_$2758_memory_ptr","typeString":"struct RedeemFastExtras"},"typeName":{"id":2896,"nodeType":"UserDefinedTypeName","pathNode":{"id":2895,"name":"RedeemFastExtras","nameLocations":["6714:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":2758,"src":"6714:16:19"},"referencedDeclaration":2758,"src":"6714:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_RedeemFastExtras_$2758_storage_ptr","typeString":"struct RedeemFastExtras"}},"visibility":"internal"}],"src":"6689:54:19"},"returnParameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"assets","nameLocation":"6795:6:19","nodeType":"VariableDeclaration","scope":2903,"src":"6778:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"6778:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2900,"nodeType":"ArrayTypeName","src":"6778:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6777:25:19"},"scope":2904,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IWithdrawalManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[2904],"name":"IWithdrawalManager","nameLocation":"2495:18:19","scope":2905,"usedErrors":[]}],"license":"BUSL-1.1"}},"src/interfaces/RequestType.sol":{"id":20,"ast":{"absolutePath":"src/interfaces/RequestType.sol","id":2913,"exportedSymbols":{"RequestType":[2912]},"nodeType":"SourceUnit","src":"37:550:20","nodes":[{"id":2906,"nodeType":"PragmaDirective","src":"37:23:20","nodes":[],"literals":["solidity","0.8",".17"]},{"id":2912,"nodeType":"EnumDefinition","src":"491:96:20","nodes":[],"canonicalName":"RequestType","members":[{"id":2907,"name":"Deposit","nameLocation":"514:7:20","nodeType":"EnumValue","src":"514:7:20"},{"id":2908,"name":"Withdrawal","nameLocation":"527:10:20","nodeType":"EnumValue","src":"527:10:20"},{"id":2909,"name":"TransferNFT","nameLocation":"543:11:20","nodeType":"EnumValue","src":"543:11:20"},{"id":2910,"name":"BurnNFT","nameLocation":"560:7:20","nodeType":"EnumValue","src":"560:7:20"},{"id":2911,"name":"TransferSVTs","nameLocation":"573:12:20","nodeType":"EnumValue","src":"573:12:20"}],"name":"RequestType","nameLocation":"496:11:20"}],"license":"BUSL-1.1"}},"src/interfaces/uint16a16Lib.sol":{"id":21,"ast":{"absolutePath":"src/interfaces/uint16a16Lib.sol","id":3059,"exportedSymbols":{"uint16a16":[2916],"uint16a16Lib":[3058]},"nodeType":"SourceUnit","src":"32:1922:21","nodes":[{"id":2914,"nodeType":"PragmaDirective","src":"32:23:21","nodes":[],"literals":["solidity","0.8",".17"]},{"id":2916,"nodeType":"UserDefinedValueTypeDefinition","src":"57:26:21","nodes":[],"canonicalName":"uint16a16","name":"uint16a16","nameLocation":"62:9:21","underlyingType":{"id":2915,"name":"uint256","nodeType":"ElementaryTypeName","src":"75:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":3058,"nodeType":"ContractDefinition","src":"183:1771:21","nodes":[{"id":2921,"nodeType":"VariableDeclaration","src":"261:26:21","nodes":[],"constant":true,"documentation":{"id":2918,"nodeType":"StructuredDocumentation","src":"210:46:21","text":"@notice Number of bits per stored element."},"mutability":"constant","name":"bits","nameLocation":"278:4:21","scope":3058,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"261:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3136","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"285:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"visibility":"internal"},{"id":2925,"nodeType":"VariableDeclaration","src":"345:30:21","nodes":[],"constant":true,"documentation":{"id":2922,"nodeType":"StructuredDocumentation","src":"294:46:21","text":"@notice Maximal number of elements stored."},"mutability":"constant","name":"elements","nameLocation":"362:8:21","scope":3058,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2923,"name":"uint256","nodeType":"ElementaryTypeName","src":"345:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3136","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"373:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"visibility":"internal"},{"id":2931,"nodeType":"VariableDeclaration","src":"479:34:21","nodes":[],"constant":true,"documentation":{"id":2926,"nodeType":"StructuredDocumentation","src":"430:44:21","text":"@notice Range covered by stored element."},"mutability":"constant","name":"range","nameLocation":"496:5:21","scope":3058,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2927,"name":"uint256","nodeType":"ElementaryTypeName","src":"479:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"504:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2929,"name":"bits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"509:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"504:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":2937,"nodeType":"VariableDeclaration","src":"569:32:21","nodes":[],"constant":true,"documentation":{"id":2932,"nodeType":"StructuredDocumentation","src":"520:44:21","text":"@notice Maximal value of stored element."},"mutability":"constant","name":"max","nameLocation":"586:3:21","scope":3058,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2933,"name":"uint256","nodeType":"ElementaryTypeName","src":"569:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":2934,"name":"range","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"592:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"600:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"592:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":2968,"nodeType":"FunctionDefinition","src":"807:179:21","nodes":[],"body":{"id":2967,"nodeType":"Block","src":"881:105:21","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2949,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"899:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2950,"name":"elements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"907:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"899:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2948,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"891:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"891:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2953,"nodeType":"ExpressionStatement","src":"891:25:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2956,"name":"va","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"951:2:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}],"expression":{"id":2954,"name":"uint16a16","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"934:9:21","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_uint16a16_$2916_$","typeString":"type(uint16a16)"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"944:6:21","memberName":"unwrap","nodeType":"MemberAccess","src":"934:16:21","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_uint16a16_$2916_$returns$_t_uint256_$","typeString":"function (uint16a16) pure returns (uint256)"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"934:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2958,"name":"bits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"959:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2959,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"966:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"959:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2961,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"958:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"934:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2963,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"933:40:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2964,"name":"max","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"976:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"933:46:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2947,"id":2966,"nodeType":"Return","src":"926:53:21"}]},"documentation":{"id":2938,"nodeType":"StructuredDocumentation","src":"608:194:21","text":" @notice Gets element from packed array.\n @param va Packed array.\n @param index Index of element to get.\n @return element Element of va stored in index index."},"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"816:3:21","parameters":{"id":2944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2941,"mutability":"mutable","name":"va","nameLocation":"830:2:21","nodeType":"VariableDeclaration","scope":2968,"src":"820:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"},"typeName":{"id":2940,"nodeType":"UserDefinedTypeName","pathNode":{"id":2939,"name":"uint16a16","nameLocations":["820:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"820:9:21"},"referencedDeclaration":2916,"src":"820:9:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"visibility":"internal"},{"constant":false,"id":2943,"mutability":"mutable","name":"index","nameLocation":"842:5:21","nodeType":"VariableDeclaration","scope":2968,"src":"834:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2942,"name":"uint256","nodeType":"ElementaryTypeName","src":"834:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:29:21"},"returnParameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2968,"src":"872:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2945,"name":"uint256","nodeType":"ElementaryTypeName","src":"872:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"871:9:21"},"scope":3058,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3019,"nodeType":"FunctionDefinition","src":"1230:271:21","nodes":[],"body":{"id":3018,"nodeType":"Block","src":"1318:183:21","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"1336:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2984,"name":"elements","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"1344:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1336:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2982,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1328:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2987,"nodeType":"ExpressionStatement","src":"1328:25:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2989,"name":"ev","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"1371:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2990,"name":"range","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"1376:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1371:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2988,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1363:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1363:19:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2993,"nodeType":"ExpressionStatement","src":"1363:19:21"},{"expression":{"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2994,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"1392:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"id":2995,"name":"bits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"1401:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1392:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2997,"nodeType":"ExpressionStatement","src":"1392:13:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3002,"name":"va","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"1455:2:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}],"expression":{"id":3000,"name":"uint16a16","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"1438:9:21","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_uint16a16_$2916_$","typeString":"type(uint16a16)"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1448:6:21","memberName":"unwrap","nodeType":"MemberAccess","src":"1438:16:21","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_uint16a16_$2916_$returns$_t_uint256_$","typeString":"function (uint16a16) pure returns (uint256)"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1438:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"1461:15:21","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3004,"name":"max","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"1463:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3005,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"1470:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1463:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3007,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1462:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1438:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3010,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1437:40:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3011,"name":"ev","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"1481:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3012,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"1487:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1481:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3014,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1480:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1437:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2998,"name":"uint16a16","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"1422:9:21","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_uint16a16_$2916_$","typeString":"type(uint16a16)"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1432:4:21","memberName":"wrap","nodeType":"MemberAccess","src":"1422:14:21","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_uint256_$returns$_t_userDefinedValueType$_uint16a16_$2916_$","typeString":"function (uint256) pure returns (uint16a16)"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:72:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"functionReturnParameters":2981,"id":3017,"nodeType":"Return","src":"1415:79:21"}]},"documentation":{"id":2969,"nodeType":"StructuredDocumentation","src":"992:233:21","text":" @notice Sets element to packed array.\n @param va Packed array.\n @param index Index under which to store the element\n @param ev Element to store.\n @return va Packed array with stored element."},"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"1239:3:21","parameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2972,"mutability":"mutable","name":"va","nameLocation":"1253:2:21","nodeType":"VariableDeclaration","scope":3019,"src":"1243:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"},"typeName":{"id":2971,"nodeType":"UserDefinedTypeName","pathNode":{"id":2970,"name":"uint16a16","nameLocations":["1243:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"1243:9:21"},"referencedDeclaration":2916,"src":"1243:9:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"visibility":"internal"},{"constant":false,"id":2974,"mutability":"mutable","name":"index","nameLocation":"1265:5:21","nodeType":"VariableDeclaration","scope":3019,"src":"1257:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"1257:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"ev","nameLocation":"1280:2:21","nodeType":"VariableDeclaration","scope":3019,"src":"1272:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"1272:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1242:41:21"},"returnParameters":{"id":2981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3019,"src":"1307:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"},"typeName":{"id":2979,"nodeType":"UserDefinedTypeName","pathNode":{"id":2978,"name":"uint16a16","nameLocations":["1307:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"1307:9:21"},"referencedDeclaration":2916,"src":"1307:9:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"visibility":"internal"}],"src":"1306:11:21"},"scope":3058,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":3057,"nodeType":"FunctionDefinition","src":"1751:201:21","nodes":[],"body":{"id":3056,"nodeType":"Block","src":"1833:119:21","nodes":[],"statements":[{"body":{"id":3052,"nodeType":"Block","src":"1879:47:21","statements":[{"expression":{"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3042,"name":"va","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"1893:2:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3044,"name":"va","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"1902:2:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},{"id":3045,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"1906:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3046,"name":"ev","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"1909:2:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3048,"indexExpression":{"id":3047,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"1912:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1909:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3043,"name":"set","nodeType":"Identifier","overloadedDeclarations":[3019,3057],"referencedDeclaration":3019,"src":"1898:3:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_uint16a16_$2916_$_t_uint256_$_t_uint256_$returns$_t_userDefinedValueType$_uint16a16_$2916_$","typeString":"function (uint16a16,uint256,uint256) pure returns (uint16a16)"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1898:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"src":"1893:22:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"id":3051,"nodeType":"ExpressionStatement","src":"1893:22:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3035,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"1859:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3036,"name":"ev","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"1863:2:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1866:6:21","memberName":"length","nodeType":"MemberAccess","src":"1863:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:13:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3053,"initializationExpression":{"assignments":[3033],"declarations":[{"constant":false,"id":3033,"mutability":"mutable","name":"i","nameLocation":"1856:1:21","nodeType":"VariableDeclaration","scope":3053,"src":"1848:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3032,"name":"uint256","nodeType":"ElementaryTypeName","src":"1848:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3034,"nodeType":"VariableDeclarationStatement","src":"1848:9:21"},"loopExpression":{"expression":{"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1874:3:21","subExpression":{"id":3039,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"1876:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3041,"nodeType":"ExpressionStatement","src":"1874:3:21"},"nodeType":"ForStatement","src":"1843:83:21"},{"expression":{"id":3054,"name":"va","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"1943:2:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"functionReturnParameters":3031,"id":3055,"nodeType":"Return","src":"1936:9:21"}]},"documentation":{"id":3020,"nodeType":"StructuredDocumentation","src":"1507:239:21","text":" @notice Sets elements to packed array.\n Elements are stored continuously from index 0 onwards.\n @param va Packed array.\n @param ev Elements to store.\n @return va Packed array with stored elements."},"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"1760:3:21","parameters":{"id":3027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3023,"mutability":"mutable","name":"va","nameLocation":"1774:2:21","nodeType":"VariableDeclaration","scope":3057,"src":"1764:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"},"typeName":{"id":3022,"nodeType":"UserDefinedTypeName","pathNode":{"id":3021,"name":"uint16a16","nameLocations":["1764:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"1764:9:21"},"referencedDeclaration":2916,"src":"1764:9:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"visibility":"internal"},{"constant":false,"id":3026,"mutability":"mutable","name":"ev","nameLocation":"1795:2:21","nodeType":"VariableDeclaration","scope":3057,"src":"1778:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3024,"name":"uint256","nodeType":"ElementaryTypeName","src":"1778:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3025,"nodeType":"ArrayTypeName","src":"1778:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1763:35:21"},"returnParameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3057,"src":"1822:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"},"typeName":{"id":3029,"nodeType":"UserDefinedTypeName","pathNode":{"id":3028,"name":"uint16a16","nameLocations":["1822:9:21"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"1822:9:21"},"referencedDeclaration":2916,"src":"1822:9:21","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_uint16a16_$2916","typeString":"uint16a16"}},"visibility":"internal"}],"src":"1821:11:21"},"scope":3058,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"uint16a16Lib","contractDependencies":[],"contractKind":"library","documentation":{"id":2917,"nodeType":"StructuredDocumentation","src":"85:97:21","text":" @notice This library enables packing of sixteen uint16 elements into one uint256 word."},"fullyImplemented":true,"linearizedBaseContracts":[3058],"name":"uint16a16Lib","nameLocation":"191:12:21","scope":3059,"usedErrors":[]}],"license":"MIT"}}}},"solcLongVersion":"0.8.17","solcVersion":"0.8.17"}